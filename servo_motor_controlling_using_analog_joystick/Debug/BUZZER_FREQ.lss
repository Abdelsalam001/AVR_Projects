
BUZZER_FREQ.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001fe0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00001fe0  00002074  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  00800168  00800168  0000217c  2**0
                  ALLOC
  3 .stab         0000135c  00000000  00000000  0000217c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000d6f  00000000  00000000  000034d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  00004247  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001b6  00000000  00000000  000043a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001f0d  00000000  00000000  0000455d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000010d2  00000000  00000000  0000646a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001030  00000000  00000000  0000753c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000180  00000000  00000000  0000856c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002e6  00000000  00000000  000086ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000008f6  00000000  00000000  000089d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  000092c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 b0 07 	jmp	0xf60	; 0xf60 <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b1 e0       	ldi	r27, 0x01	; 1
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	a4 37       	cpi	r26, 0x74	; 116
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	11 e0       	ldi	r17, 0x01	; 1
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e0 ee       	ldi	r30, 0xE0	; 224
      78:	ff e1       	ldi	r31, 0x1F	; 31
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <main>
      8a:	0c 94 ee 0f 	jmp	0x1fdc	; 0x1fdc <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 c5 03 	call	0x78a	; 0x78a <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 b7 0f 	jmp	0x1f6e	; 0x1f6e <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 d3 0f 	jmp	0x1fa6	; 0x1fa6 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 c3 0f 	jmp	0x1f86	; 0x1f86 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 df 0f 	jmp	0x1fbe	; 0x1fbe <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 c3 0f 	jmp	0x1f86	; 0x1f86 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 df 0f 	jmp	0x1fbe	; 0x1fbe <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 b7 0f 	jmp	0x1f6e	; 0x1f6e <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 d3 0f 	jmp	0x1fa6	; 0x1fa6 <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 bf 0f 	jmp	0x1f7e	; 0x1f7e <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	60 e6       	ldi	r22, 0x60	; 96
     69c:	70 e0       	ldi	r23, 0x00	; 0
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 db 0f 	jmp	0x1fb6	; 0x1fb6 <__epilogue_restores__+0x10>

0000078a <__gesf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 c3 0f 	jmp	0x1f86	; 0x1f86 <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gesf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gesf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 5e 06 	call	0xcbc	; 0xcbc <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gesf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 df 0f 	jmp	0x1fbe	; 0x1fbe <__epilogue_restores__+0x18>

000007ea <__fixsfsi>:
     7ea:	ac e0       	ldi	r26, 0x0C	; 12
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 c7 0f 	jmp	0x1f8e	; 0x1f8e <__prologue_saves__+0x20>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	ce 01       	movw	r24, r28
     800:	01 96       	adiw	r24, 0x01	; 1
     802:	be 01       	movw	r22, r28
     804:	6b 5f       	subi	r22, 0xFB	; 251
     806:	7f 4f       	sbci	r23, 0xFF	; 255
     808:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     80c:	8d 81       	ldd	r24, Y+5	; 0x05
     80e:	82 30       	cpi	r24, 0x02	; 2
     810:	61 f1       	breq	.+88     	; 0x86a <__stack+0xb>
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	50 f1       	brcs	.+84     	; 0x86a <__stack+0xb>
     816:	84 30       	cpi	r24, 0x04	; 4
     818:	21 f4       	brne	.+8      	; 0x822 <__fixsfsi+0x38>
     81a:	8e 81       	ldd	r24, Y+6	; 0x06
     81c:	88 23       	and	r24, r24
     81e:	51 f1       	breq	.+84     	; 0x874 <__stack+0x15>
     820:	2e c0       	rjmp	.+92     	; 0x87e <__stack+0x1f>
     822:	2f 81       	ldd	r18, Y+7	; 0x07
     824:	38 85       	ldd	r19, Y+8	; 0x08
     826:	37 fd       	sbrc	r19, 7
     828:	20 c0       	rjmp	.+64     	; 0x86a <__stack+0xb>
     82a:	6e 81       	ldd	r22, Y+6	; 0x06
     82c:	2f 31       	cpi	r18, 0x1F	; 31
     82e:	31 05       	cpc	r19, r1
     830:	1c f0       	brlt	.+6      	; 0x838 <__fixsfsi+0x4e>
     832:	66 23       	and	r22, r22
     834:	f9 f0       	breq	.+62     	; 0x874 <__stack+0x15>
     836:	23 c0       	rjmp	.+70     	; 0x87e <__stack+0x1f>
     838:	8e e1       	ldi	r24, 0x1E	; 30
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	82 1b       	sub	r24, r18
     83e:	93 0b       	sbc	r25, r19
     840:	29 85       	ldd	r18, Y+9	; 0x09
     842:	3a 85       	ldd	r19, Y+10	; 0x0a
     844:	4b 85       	ldd	r20, Y+11	; 0x0b
     846:	5c 85       	ldd	r21, Y+12	; 0x0c
     848:	04 c0       	rjmp	.+8      	; 0x852 <__fixsfsi+0x68>
     84a:	56 95       	lsr	r21
     84c:	47 95       	ror	r20
     84e:	37 95       	ror	r19
     850:	27 95       	ror	r18
     852:	8a 95       	dec	r24
     854:	d2 f7       	brpl	.-12     	; 0x84a <__fixsfsi+0x60>
     856:	66 23       	and	r22, r22
     858:	b1 f0       	breq	.+44     	; 0x886 <__stack+0x27>
     85a:	50 95       	com	r21
     85c:	40 95       	com	r20
     85e:	30 95       	com	r19
     860:	21 95       	neg	r18
     862:	3f 4f       	sbci	r19, 0xFF	; 255
     864:	4f 4f       	sbci	r20, 0xFF	; 255
     866:	5f 4f       	sbci	r21, 0xFF	; 255
     868:	0e c0       	rjmp	.+28     	; 0x886 <__stack+0x27>
     86a:	20 e0       	ldi	r18, 0x00	; 0
     86c:	30 e0       	ldi	r19, 0x00	; 0
     86e:	40 e0       	ldi	r20, 0x00	; 0
     870:	50 e0       	ldi	r21, 0x00	; 0
     872:	09 c0       	rjmp	.+18     	; 0x886 <__stack+0x27>
     874:	2f ef       	ldi	r18, 0xFF	; 255
     876:	3f ef       	ldi	r19, 0xFF	; 255
     878:	4f ef       	ldi	r20, 0xFF	; 255
     87a:	5f e7       	ldi	r21, 0x7F	; 127
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	20 e0       	ldi	r18, 0x00	; 0
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	40 e0       	ldi	r20, 0x00	; 0
     884:	50 e8       	ldi	r21, 0x80	; 128
     886:	b9 01       	movw	r22, r18
     888:	ca 01       	movw	r24, r20
     88a:	2c 96       	adiw	r28, 0x0c	; 12
     88c:	e2 e0       	ldi	r30, 0x02	; 2
     88e:	0c 94 e3 0f 	jmp	0x1fc6	; 0x1fc6 <__epilogue_restores__+0x20>

00000892 <__floatunsisf>:
     892:	a8 e0       	ldi	r26, 0x08	; 8
     894:	b0 e0       	ldi	r27, 0x00	; 0
     896:	ef e4       	ldi	r30, 0x4F	; 79
     898:	f4 e0       	ldi	r31, 0x04	; 4
     89a:	0c 94 bf 0f 	jmp	0x1f7e	; 0x1f7e <__prologue_saves__+0x10>
     89e:	7b 01       	movw	r14, r22
     8a0:	8c 01       	movw	r16, r24
     8a2:	61 15       	cp	r22, r1
     8a4:	71 05       	cpc	r23, r1
     8a6:	81 05       	cpc	r24, r1
     8a8:	91 05       	cpc	r25, r1
     8aa:	19 f4       	brne	.+6      	; 0x8b2 <__floatunsisf+0x20>
     8ac:	82 e0       	ldi	r24, 0x02	; 2
     8ae:	89 83       	std	Y+1, r24	; 0x01
     8b0:	60 c0       	rjmp	.+192    	; 0x972 <__floatunsisf+0xe0>
     8b2:	83 e0       	ldi	r24, 0x03	; 3
     8b4:	89 83       	std	Y+1, r24	; 0x01
     8b6:	8e e1       	ldi	r24, 0x1E	; 30
     8b8:	c8 2e       	mov	r12, r24
     8ba:	d1 2c       	mov	r13, r1
     8bc:	dc 82       	std	Y+4, r13	; 0x04
     8be:	cb 82       	std	Y+3, r12	; 0x03
     8c0:	ed 82       	std	Y+5, r14	; 0x05
     8c2:	fe 82       	std	Y+6, r15	; 0x06
     8c4:	0f 83       	std	Y+7, r16	; 0x07
     8c6:	18 87       	std	Y+8, r17	; 0x08
     8c8:	c8 01       	movw	r24, r16
     8ca:	b7 01       	movw	r22, r14
     8cc:	0e 94 c2 04 	call	0x984	; 0x984 <__clzsi2>
     8d0:	fc 01       	movw	r30, r24
     8d2:	31 97       	sbiw	r30, 0x01	; 1
     8d4:	f7 ff       	sbrs	r31, 7
     8d6:	3b c0       	rjmp	.+118    	; 0x94e <__floatunsisf+0xbc>
     8d8:	22 27       	eor	r18, r18
     8da:	33 27       	eor	r19, r19
     8dc:	2e 1b       	sub	r18, r30
     8de:	3f 0b       	sbc	r19, r31
     8e0:	57 01       	movw	r10, r14
     8e2:	68 01       	movw	r12, r16
     8e4:	02 2e       	mov	r0, r18
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__floatunsisf+0x5e>
     8e8:	d6 94       	lsr	r13
     8ea:	c7 94       	ror	r12
     8ec:	b7 94       	ror	r11
     8ee:	a7 94       	ror	r10
     8f0:	0a 94       	dec	r0
     8f2:	d2 f7       	brpl	.-12     	; 0x8e8 <__floatunsisf+0x56>
     8f4:	40 e0       	ldi	r20, 0x00	; 0
     8f6:	50 e0       	ldi	r21, 0x00	; 0
     8f8:	60 e0       	ldi	r22, 0x00	; 0
     8fa:	70 e0       	ldi	r23, 0x00	; 0
     8fc:	81 e0       	ldi	r24, 0x01	; 1
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	a0 e0       	ldi	r26, 0x00	; 0
     902:	b0 e0       	ldi	r27, 0x00	; 0
     904:	04 c0       	rjmp	.+8      	; 0x90e <__floatunsisf+0x7c>
     906:	88 0f       	add	r24, r24
     908:	99 1f       	adc	r25, r25
     90a:	aa 1f       	adc	r26, r26
     90c:	bb 1f       	adc	r27, r27
     90e:	2a 95       	dec	r18
     910:	d2 f7       	brpl	.-12     	; 0x906 <__floatunsisf+0x74>
     912:	01 97       	sbiw	r24, 0x01	; 1
     914:	a1 09       	sbc	r26, r1
     916:	b1 09       	sbc	r27, r1
     918:	8e 21       	and	r24, r14
     91a:	9f 21       	and	r25, r15
     91c:	a0 23       	and	r26, r16
     91e:	b1 23       	and	r27, r17
     920:	00 97       	sbiw	r24, 0x00	; 0
     922:	a1 05       	cpc	r26, r1
     924:	b1 05       	cpc	r27, r1
     926:	21 f0       	breq	.+8      	; 0x930 <__floatunsisf+0x9e>
     928:	41 e0       	ldi	r20, 0x01	; 1
     92a:	50 e0       	ldi	r21, 0x00	; 0
     92c:	60 e0       	ldi	r22, 0x00	; 0
     92e:	70 e0       	ldi	r23, 0x00	; 0
     930:	4a 29       	or	r20, r10
     932:	5b 29       	or	r21, r11
     934:	6c 29       	or	r22, r12
     936:	7d 29       	or	r23, r13
     938:	4d 83       	std	Y+5, r20	; 0x05
     93a:	5e 83       	std	Y+6, r21	; 0x06
     93c:	6f 83       	std	Y+7, r22	; 0x07
     93e:	78 87       	std	Y+8, r23	; 0x08
     940:	8e e1       	ldi	r24, 0x1E	; 30
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	8e 1b       	sub	r24, r30
     946:	9f 0b       	sbc	r25, r31
     948:	9c 83       	std	Y+4, r25	; 0x04
     94a:	8b 83       	std	Y+3, r24	; 0x03
     94c:	12 c0       	rjmp	.+36     	; 0x972 <__floatunsisf+0xe0>
     94e:	30 97       	sbiw	r30, 0x00	; 0
     950:	81 f0       	breq	.+32     	; 0x972 <__floatunsisf+0xe0>
     952:	0e 2e       	mov	r0, r30
     954:	04 c0       	rjmp	.+8      	; 0x95e <__floatunsisf+0xcc>
     956:	ee 0c       	add	r14, r14
     958:	ff 1c       	adc	r15, r15
     95a:	00 1f       	adc	r16, r16
     95c:	11 1f       	adc	r17, r17
     95e:	0a 94       	dec	r0
     960:	d2 f7       	brpl	.-12     	; 0x956 <__floatunsisf+0xc4>
     962:	ed 82       	std	Y+5, r14	; 0x05
     964:	fe 82       	std	Y+6, r15	; 0x06
     966:	0f 83       	std	Y+7, r16	; 0x07
     968:	18 87       	std	Y+8, r17	; 0x08
     96a:	ce 1a       	sub	r12, r30
     96c:	df 0a       	sbc	r13, r31
     96e:	dc 82       	std	Y+4, r13	; 0x04
     970:	cb 82       	std	Y+3, r12	; 0x03
     972:	1a 82       	std	Y+2, r1	; 0x02
     974:	ce 01       	movw	r24, r28
     976:	01 96       	adiw	r24, 0x01	; 1
     978:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     97c:	28 96       	adiw	r28, 0x08	; 8
     97e:	ea e0       	ldi	r30, 0x0A	; 10
     980:	0c 94 db 0f 	jmp	0x1fb6	; 0x1fb6 <__epilogue_restores__+0x10>

00000984 <__clzsi2>:
     984:	ef 92       	push	r14
     986:	ff 92       	push	r15
     988:	0f 93       	push	r16
     98a:	1f 93       	push	r17
     98c:	7b 01       	movw	r14, r22
     98e:	8c 01       	movw	r16, r24
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	e8 16       	cp	r14, r24
     994:	80 e0       	ldi	r24, 0x00	; 0
     996:	f8 06       	cpc	r15, r24
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	08 07       	cpc	r16, r24
     99c:	80 e0       	ldi	r24, 0x00	; 0
     99e:	18 07       	cpc	r17, r24
     9a0:	88 f4       	brcc	.+34     	; 0x9c4 <__clzsi2+0x40>
     9a2:	8f ef       	ldi	r24, 0xFF	; 255
     9a4:	e8 16       	cp	r14, r24
     9a6:	f1 04       	cpc	r15, r1
     9a8:	01 05       	cpc	r16, r1
     9aa:	11 05       	cpc	r17, r1
     9ac:	31 f0       	breq	.+12     	; 0x9ba <__clzsi2+0x36>
     9ae:	28 f0       	brcs	.+10     	; 0x9ba <__clzsi2+0x36>
     9b0:	88 e0       	ldi	r24, 0x08	; 8
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	a0 e0       	ldi	r26, 0x00	; 0
     9b6:	b0 e0       	ldi	r27, 0x00	; 0
     9b8:	17 c0       	rjmp	.+46     	; 0x9e8 <__clzsi2+0x64>
     9ba:	80 e0       	ldi	r24, 0x00	; 0
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	a0 e0       	ldi	r26, 0x00	; 0
     9c0:	b0 e0       	ldi	r27, 0x00	; 0
     9c2:	12 c0       	rjmp	.+36     	; 0x9e8 <__clzsi2+0x64>
     9c4:	80 e0       	ldi	r24, 0x00	; 0
     9c6:	e8 16       	cp	r14, r24
     9c8:	80 e0       	ldi	r24, 0x00	; 0
     9ca:	f8 06       	cpc	r15, r24
     9cc:	80 e0       	ldi	r24, 0x00	; 0
     9ce:	08 07       	cpc	r16, r24
     9d0:	81 e0       	ldi	r24, 0x01	; 1
     9d2:	18 07       	cpc	r17, r24
     9d4:	28 f0       	brcs	.+10     	; 0x9e0 <__clzsi2+0x5c>
     9d6:	88 e1       	ldi	r24, 0x18	; 24
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	a0 e0       	ldi	r26, 0x00	; 0
     9dc:	b0 e0       	ldi	r27, 0x00	; 0
     9de:	04 c0       	rjmp	.+8      	; 0x9e8 <__clzsi2+0x64>
     9e0:	80 e1       	ldi	r24, 0x10	; 16
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	a0 e0       	ldi	r26, 0x00	; 0
     9e6:	b0 e0       	ldi	r27, 0x00	; 0
     9e8:	20 e2       	ldi	r18, 0x20	; 32
     9ea:	30 e0       	ldi	r19, 0x00	; 0
     9ec:	40 e0       	ldi	r20, 0x00	; 0
     9ee:	50 e0       	ldi	r21, 0x00	; 0
     9f0:	28 1b       	sub	r18, r24
     9f2:	39 0b       	sbc	r19, r25
     9f4:	4a 0b       	sbc	r20, r26
     9f6:	5b 0b       	sbc	r21, r27
     9f8:	04 c0       	rjmp	.+8      	; 0xa02 <__clzsi2+0x7e>
     9fa:	16 95       	lsr	r17
     9fc:	07 95       	ror	r16
     9fe:	f7 94       	ror	r15
     a00:	e7 94       	ror	r14
     a02:	8a 95       	dec	r24
     a04:	d2 f7       	brpl	.-12     	; 0x9fa <__clzsi2+0x76>
     a06:	f7 01       	movw	r30, r14
     a08:	e8 59       	subi	r30, 0x98	; 152
     a0a:	ff 4f       	sbci	r31, 0xFF	; 255
     a0c:	80 81       	ld	r24, Z
     a0e:	28 1b       	sub	r18, r24
     a10:	31 09       	sbc	r19, r1
     a12:	41 09       	sbc	r20, r1
     a14:	51 09       	sbc	r21, r1
     a16:	c9 01       	movw	r24, r18
     a18:	1f 91       	pop	r17
     a1a:	0f 91       	pop	r16
     a1c:	ff 90       	pop	r15
     a1e:	ef 90       	pop	r14
     a20:	08 95       	ret

00000a22 <__pack_f>:
     a22:	df 92       	push	r13
     a24:	ef 92       	push	r14
     a26:	ff 92       	push	r15
     a28:	0f 93       	push	r16
     a2a:	1f 93       	push	r17
     a2c:	fc 01       	movw	r30, r24
     a2e:	e4 80       	ldd	r14, Z+4	; 0x04
     a30:	f5 80       	ldd	r15, Z+5	; 0x05
     a32:	06 81       	ldd	r16, Z+6	; 0x06
     a34:	17 81       	ldd	r17, Z+7	; 0x07
     a36:	d1 80       	ldd	r13, Z+1	; 0x01
     a38:	80 81       	ld	r24, Z
     a3a:	82 30       	cpi	r24, 0x02	; 2
     a3c:	48 f4       	brcc	.+18     	; 0xa50 <__pack_f+0x2e>
     a3e:	80 e0       	ldi	r24, 0x00	; 0
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	a0 e1       	ldi	r26, 0x10	; 16
     a44:	b0 e0       	ldi	r27, 0x00	; 0
     a46:	e8 2a       	or	r14, r24
     a48:	f9 2a       	or	r15, r25
     a4a:	0a 2b       	or	r16, r26
     a4c:	1b 2b       	or	r17, r27
     a4e:	a5 c0       	rjmp	.+330    	; 0xb9a <__pack_f+0x178>
     a50:	84 30       	cpi	r24, 0x04	; 4
     a52:	09 f4       	brne	.+2      	; 0xa56 <__pack_f+0x34>
     a54:	9f c0       	rjmp	.+318    	; 0xb94 <__pack_f+0x172>
     a56:	82 30       	cpi	r24, 0x02	; 2
     a58:	21 f4       	brne	.+8      	; 0xa62 <__pack_f+0x40>
     a5a:	ee 24       	eor	r14, r14
     a5c:	ff 24       	eor	r15, r15
     a5e:	87 01       	movw	r16, r14
     a60:	05 c0       	rjmp	.+10     	; 0xa6c <__pack_f+0x4a>
     a62:	e1 14       	cp	r14, r1
     a64:	f1 04       	cpc	r15, r1
     a66:	01 05       	cpc	r16, r1
     a68:	11 05       	cpc	r17, r1
     a6a:	19 f4       	brne	.+6      	; 0xa72 <__pack_f+0x50>
     a6c:	e0 e0       	ldi	r30, 0x00	; 0
     a6e:	f0 e0       	ldi	r31, 0x00	; 0
     a70:	96 c0       	rjmp	.+300    	; 0xb9e <__pack_f+0x17c>
     a72:	62 81       	ldd	r22, Z+2	; 0x02
     a74:	73 81       	ldd	r23, Z+3	; 0x03
     a76:	9f ef       	ldi	r25, 0xFF	; 255
     a78:	62 38       	cpi	r22, 0x82	; 130
     a7a:	79 07       	cpc	r23, r25
     a7c:	0c f0       	brlt	.+2      	; 0xa80 <__pack_f+0x5e>
     a7e:	5b c0       	rjmp	.+182    	; 0xb36 <__pack_f+0x114>
     a80:	22 e8       	ldi	r18, 0x82	; 130
     a82:	3f ef       	ldi	r19, 0xFF	; 255
     a84:	26 1b       	sub	r18, r22
     a86:	37 0b       	sbc	r19, r23
     a88:	2a 31       	cpi	r18, 0x1A	; 26
     a8a:	31 05       	cpc	r19, r1
     a8c:	2c f0       	brlt	.+10     	; 0xa98 <__pack_f+0x76>
     a8e:	20 e0       	ldi	r18, 0x00	; 0
     a90:	30 e0       	ldi	r19, 0x00	; 0
     a92:	40 e0       	ldi	r20, 0x00	; 0
     a94:	50 e0       	ldi	r21, 0x00	; 0
     a96:	2a c0       	rjmp	.+84     	; 0xaec <__pack_f+0xca>
     a98:	b8 01       	movw	r22, r16
     a9a:	a7 01       	movw	r20, r14
     a9c:	02 2e       	mov	r0, r18
     a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <__pack_f+0x86>
     aa0:	76 95       	lsr	r23
     aa2:	67 95       	ror	r22
     aa4:	57 95       	ror	r21
     aa6:	47 95       	ror	r20
     aa8:	0a 94       	dec	r0
     aaa:	d2 f7       	brpl	.-12     	; 0xaa0 <__pack_f+0x7e>
     aac:	81 e0       	ldi	r24, 0x01	; 1
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	a0 e0       	ldi	r26, 0x00	; 0
     ab2:	b0 e0       	ldi	r27, 0x00	; 0
     ab4:	04 c0       	rjmp	.+8      	; 0xabe <__pack_f+0x9c>
     ab6:	88 0f       	add	r24, r24
     ab8:	99 1f       	adc	r25, r25
     aba:	aa 1f       	adc	r26, r26
     abc:	bb 1f       	adc	r27, r27
     abe:	2a 95       	dec	r18
     ac0:	d2 f7       	brpl	.-12     	; 0xab6 <__pack_f+0x94>
     ac2:	01 97       	sbiw	r24, 0x01	; 1
     ac4:	a1 09       	sbc	r26, r1
     ac6:	b1 09       	sbc	r27, r1
     ac8:	8e 21       	and	r24, r14
     aca:	9f 21       	and	r25, r15
     acc:	a0 23       	and	r26, r16
     ace:	b1 23       	and	r27, r17
     ad0:	00 97       	sbiw	r24, 0x00	; 0
     ad2:	a1 05       	cpc	r26, r1
     ad4:	b1 05       	cpc	r27, r1
     ad6:	21 f0       	breq	.+8      	; 0xae0 <__pack_f+0xbe>
     ad8:	81 e0       	ldi	r24, 0x01	; 1
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	a0 e0       	ldi	r26, 0x00	; 0
     ade:	b0 e0       	ldi	r27, 0x00	; 0
     ae0:	9a 01       	movw	r18, r20
     ae2:	ab 01       	movw	r20, r22
     ae4:	28 2b       	or	r18, r24
     ae6:	39 2b       	or	r19, r25
     ae8:	4a 2b       	or	r20, r26
     aea:	5b 2b       	or	r21, r27
     aec:	da 01       	movw	r26, r20
     aee:	c9 01       	movw	r24, r18
     af0:	8f 77       	andi	r24, 0x7F	; 127
     af2:	90 70       	andi	r25, 0x00	; 0
     af4:	a0 70       	andi	r26, 0x00	; 0
     af6:	b0 70       	andi	r27, 0x00	; 0
     af8:	80 34       	cpi	r24, 0x40	; 64
     afa:	91 05       	cpc	r25, r1
     afc:	a1 05       	cpc	r26, r1
     afe:	b1 05       	cpc	r27, r1
     b00:	39 f4       	brne	.+14     	; 0xb10 <__pack_f+0xee>
     b02:	27 ff       	sbrs	r18, 7
     b04:	09 c0       	rjmp	.+18     	; 0xb18 <__pack_f+0xf6>
     b06:	20 5c       	subi	r18, 0xC0	; 192
     b08:	3f 4f       	sbci	r19, 0xFF	; 255
     b0a:	4f 4f       	sbci	r20, 0xFF	; 255
     b0c:	5f 4f       	sbci	r21, 0xFF	; 255
     b0e:	04 c0       	rjmp	.+8      	; 0xb18 <__pack_f+0xf6>
     b10:	21 5c       	subi	r18, 0xC1	; 193
     b12:	3f 4f       	sbci	r19, 0xFF	; 255
     b14:	4f 4f       	sbci	r20, 0xFF	; 255
     b16:	5f 4f       	sbci	r21, 0xFF	; 255
     b18:	e0 e0       	ldi	r30, 0x00	; 0
     b1a:	f0 e0       	ldi	r31, 0x00	; 0
     b1c:	20 30       	cpi	r18, 0x00	; 0
     b1e:	a0 e0       	ldi	r26, 0x00	; 0
     b20:	3a 07       	cpc	r19, r26
     b22:	a0 e0       	ldi	r26, 0x00	; 0
     b24:	4a 07       	cpc	r20, r26
     b26:	a0 e4       	ldi	r26, 0x40	; 64
     b28:	5a 07       	cpc	r21, r26
     b2a:	10 f0       	brcs	.+4      	; 0xb30 <__pack_f+0x10e>
     b2c:	e1 e0       	ldi	r30, 0x01	; 1
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	79 01       	movw	r14, r18
     b32:	8a 01       	movw	r16, r20
     b34:	27 c0       	rjmp	.+78     	; 0xb84 <__pack_f+0x162>
     b36:	60 38       	cpi	r22, 0x80	; 128
     b38:	71 05       	cpc	r23, r1
     b3a:	64 f5       	brge	.+88     	; 0xb94 <__pack_f+0x172>
     b3c:	fb 01       	movw	r30, r22
     b3e:	e1 58       	subi	r30, 0x81	; 129
     b40:	ff 4f       	sbci	r31, 0xFF	; 255
     b42:	d8 01       	movw	r26, r16
     b44:	c7 01       	movw	r24, r14
     b46:	8f 77       	andi	r24, 0x7F	; 127
     b48:	90 70       	andi	r25, 0x00	; 0
     b4a:	a0 70       	andi	r26, 0x00	; 0
     b4c:	b0 70       	andi	r27, 0x00	; 0
     b4e:	80 34       	cpi	r24, 0x40	; 64
     b50:	91 05       	cpc	r25, r1
     b52:	a1 05       	cpc	r26, r1
     b54:	b1 05       	cpc	r27, r1
     b56:	39 f4       	brne	.+14     	; 0xb66 <__pack_f+0x144>
     b58:	e7 fe       	sbrs	r14, 7
     b5a:	0d c0       	rjmp	.+26     	; 0xb76 <__pack_f+0x154>
     b5c:	80 e4       	ldi	r24, 0x40	; 64
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	a0 e0       	ldi	r26, 0x00	; 0
     b62:	b0 e0       	ldi	r27, 0x00	; 0
     b64:	04 c0       	rjmp	.+8      	; 0xb6e <__pack_f+0x14c>
     b66:	8f e3       	ldi	r24, 0x3F	; 63
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	a0 e0       	ldi	r26, 0x00	; 0
     b6c:	b0 e0       	ldi	r27, 0x00	; 0
     b6e:	e8 0e       	add	r14, r24
     b70:	f9 1e       	adc	r15, r25
     b72:	0a 1f       	adc	r16, r26
     b74:	1b 1f       	adc	r17, r27
     b76:	17 ff       	sbrs	r17, 7
     b78:	05 c0       	rjmp	.+10     	; 0xb84 <__pack_f+0x162>
     b7a:	16 95       	lsr	r17
     b7c:	07 95       	ror	r16
     b7e:	f7 94       	ror	r15
     b80:	e7 94       	ror	r14
     b82:	31 96       	adiw	r30, 0x01	; 1
     b84:	87 e0       	ldi	r24, 0x07	; 7
     b86:	16 95       	lsr	r17
     b88:	07 95       	ror	r16
     b8a:	f7 94       	ror	r15
     b8c:	e7 94       	ror	r14
     b8e:	8a 95       	dec	r24
     b90:	d1 f7       	brne	.-12     	; 0xb86 <__pack_f+0x164>
     b92:	05 c0       	rjmp	.+10     	; 0xb9e <__pack_f+0x17c>
     b94:	ee 24       	eor	r14, r14
     b96:	ff 24       	eor	r15, r15
     b98:	87 01       	movw	r16, r14
     b9a:	ef ef       	ldi	r30, 0xFF	; 255
     b9c:	f0 e0       	ldi	r31, 0x00	; 0
     b9e:	6e 2f       	mov	r22, r30
     ba0:	67 95       	ror	r22
     ba2:	66 27       	eor	r22, r22
     ba4:	67 95       	ror	r22
     ba6:	90 2f       	mov	r25, r16
     ba8:	9f 77       	andi	r25, 0x7F	; 127
     baa:	d7 94       	ror	r13
     bac:	dd 24       	eor	r13, r13
     bae:	d7 94       	ror	r13
     bb0:	8e 2f       	mov	r24, r30
     bb2:	86 95       	lsr	r24
     bb4:	49 2f       	mov	r20, r25
     bb6:	46 2b       	or	r20, r22
     bb8:	58 2f       	mov	r21, r24
     bba:	5d 29       	or	r21, r13
     bbc:	b7 01       	movw	r22, r14
     bbe:	ca 01       	movw	r24, r20
     bc0:	1f 91       	pop	r17
     bc2:	0f 91       	pop	r16
     bc4:	ff 90       	pop	r15
     bc6:	ef 90       	pop	r14
     bc8:	df 90       	pop	r13
     bca:	08 95       	ret

00000bcc <__unpack_f>:
     bcc:	fc 01       	movw	r30, r24
     bce:	db 01       	movw	r26, r22
     bd0:	40 81       	ld	r20, Z
     bd2:	51 81       	ldd	r21, Z+1	; 0x01
     bd4:	22 81       	ldd	r18, Z+2	; 0x02
     bd6:	62 2f       	mov	r22, r18
     bd8:	6f 77       	andi	r22, 0x7F	; 127
     bda:	70 e0       	ldi	r23, 0x00	; 0
     bdc:	22 1f       	adc	r18, r18
     bde:	22 27       	eor	r18, r18
     be0:	22 1f       	adc	r18, r18
     be2:	93 81       	ldd	r25, Z+3	; 0x03
     be4:	89 2f       	mov	r24, r25
     be6:	88 0f       	add	r24, r24
     be8:	82 2b       	or	r24, r18
     bea:	28 2f       	mov	r18, r24
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	99 1f       	adc	r25, r25
     bf0:	99 27       	eor	r25, r25
     bf2:	99 1f       	adc	r25, r25
     bf4:	11 96       	adiw	r26, 0x01	; 1
     bf6:	9c 93       	st	X, r25
     bf8:	11 97       	sbiw	r26, 0x01	; 1
     bfa:	21 15       	cp	r18, r1
     bfc:	31 05       	cpc	r19, r1
     bfe:	a9 f5       	brne	.+106    	; 0xc6a <__unpack_f+0x9e>
     c00:	41 15       	cp	r20, r1
     c02:	51 05       	cpc	r21, r1
     c04:	61 05       	cpc	r22, r1
     c06:	71 05       	cpc	r23, r1
     c08:	11 f4       	brne	.+4      	; 0xc0e <__unpack_f+0x42>
     c0a:	82 e0       	ldi	r24, 0x02	; 2
     c0c:	37 c0       	rjmp	.+110    	; 0xc7c <__unpack_f+0xb0>
     c0e:	82 e8       	ldi	r24, 0x82	; 130
     c10:	9f ef       	ldi	r25, 0xFF	; 255
     c12:	13 96       	adiw	r26, 0x03	; 3
     c14:	9c 93       	st	X, r25
     c16:	8e 93       	st	-X, r24
     c18:	12 97       	sbiw	r26, 0x02	; 2
     c1a:	9a 01       	movw	r18, r20
     c1c:	ab 01       	movw	r20, r22
     c1e:	67 e0       	ldi	r22, 0x07	; 7
     c20:	22 0f       	add	r18, r18
     c22:	33 1f       	adc	r19, r19
     c24:	44 1f       	adc	r20, r20
     c26:	55 1f       	adc	r21, r21
     c28:	6a 95       	dec	r22
     c2a:	d1 f7       	brne	.-12     	; 0xc20 <__unpack_f+0x54>
     c2c:	83 e0       	ldi	r24, 0x03	; 3
     c2e:	8c 93       	st	X, r24
     c30:	0d c0       	rjmp	.+26     	; 0xc4c <__unpack_f+0x80>
     c32:	22 0f       	add	r18, r18
     c34:	33 1f       	adc	r19, r19
     c36:	44 1f       	adc	r20, r20
     c38:	55 1f       	adc	r21, r21
     c3a:	12 96       	adiw	r26, 0x02	; 2
     c3c:	8d 91       	ld	r24, X+
     c3e:	9c 91       	ld	r25, X
     c40:	13 97       	sbiw	r26, 0x03	; 3
     c42:	01 97       	sbiw	r24, 0x01	; 1
     c44:	13 96       	adiw	r26, 0x03	; 3
     c46:	9c 93       	st	X, r25
     c48:	8e 93       	st	-X, r24
     c4a:	12 97       	sbiw	r26, 0x02	; 2
     c4c:	20 30       	cpi	r18, 0x00	; 0
     c4e:	80 e0       	ldi	r24, 0x00	; 0
     c50:	38 07       	cpc	r19, r24
     c52:	80 e0       	ldi	r24, 0x00	; 0
     c54:	48 07       	cpc	r20, r24
     c56:	80 e4       	ldi	r24, 0x40	; 64
     c58:	58 07       	cpc	r21, r24
     c5a:	58 f3       	brcs	.-42     	; 0xc32 <__unpack_f+0x66>
     c5c:	14 96       	adiw	r26, 0x04	; 4
     c5e:	2d 93       	st	X+, r18
     c60:	3d 93       	st	X+, r19
     c62:	4d 93       	st	X+, r20
     c64:	5c 93       	st	X, r21
     c66:	17 97       	sbiw	r26, 0x07	; 7
     c68:	08 95       	ret
     c6a:	2f 3f       	cpi	r18, 0xFF	; 255
     c6c:	31 05       	cpc	r19, r1
     c6e:	79 f4       	brne	.+30     	; 0xc8e <__unpack_f+0xc2>
     c70:	41 15       	cp	r20, r1
     c72:	51 05       	cpc	r21, r1
     c74:	61 05       	cpc	r22, r1
     c76:	71 05       	cpc	r23, r1
     c78:	19 f4       	brne	.+6      	; 0xc80 <__unpack_f+0xb4>
     c7a:	84 e0       	ldi	r24, 0x04	; 4
     c7c:	8c 93       	st	X, r24
     c7e:	08 95       	ret
     c80:	64 ff       	sbrs	r22, 4
     c82:	03 c0       	rjmp	.+6      	; 0xc8a <__unpack_f+0xbe>
     c84:	81 e0       	ldi	r24, 0x01	; 1
     c86:	8c 93       	st	X, r24
     c88:	12 c0       	rjmp	.+36     	; 0xcae <__unpack_f+0xe2>
     c8a:	1c 92       	st	X, r1
     c8c:	10 c0       	rjmp	.+32     	; 0xcae <__unpack_f+0xe2>
     c8e:	2f 57       	subi	r18, 0x7F	; 127
     c90:	30 40       	sbci	r19, 0x00	; 0
     c92:	13 96       	adiw	r26, 0x03	; 3
     c94:	3c 93       	st	X, r19
     c96:	2e 93       	st	-X, r18
     c98:	12 97       	sbiw	r26, 0x02	; 2
     c9a:	83 e0       	ldi	r24, 0x03	; 3
     c9c:	8c 93       	st	X, r24
     c9e:	87 e0       	ldi	r24, 0x07	; 7
     ca0:	44 0f       	add	r20, r20
     ca2:	55 1f       	adc	r21, r21
     ca4:	66 1f       	adc	r22, r22
     ca6:	77 1f       	adc	r23, r23
     ca8:	8a 95       	dec	r24
     caa:	d1 f7       	brne	.-12     	; 0xca0 <__unpack_f+0xd4>
     cac:	70 64       	ori	r23, 0x40	; 64
     cae:	14 96       	adiw	r26, 0x04	; 4
     cb0:	4d 93       	st	X+, r20
     cb2:	5d 93       	st	X+, r21
     cb4:	6d 93       	st	X+, r22
     cb6:	7c 93       	st	X, r23
     cb8:	17 97       	sbiw	r26, 0x07	; 7
     cba:	08 95       	ret

00000cbc <__fpcmp_parts_f>:
     cbc:	1f 93       	push	r17
     cbe:	dc 01       	movw	r26, r24
     cc0:	fb 01       	movw	r30, r22
     cc2:	9c 91       	ld	r25, X
     cc4:	92 30       	cpi	r25, 0x02	; 2
     cc6:	08 f4       	brcc	.+2      	; 0xcca <__fpcmp_parts_f+0xe>
     cc8:	47 c0       	rjmp	.+142    	; 0xd58 <__fpcmp_parts_f+0x9c>
     cca:	80 81       	ld	r24, Z
     ccc:	82 30       	cpi	r24, 0x02	; 2
     cce:	08 f4       	brcc	.+2      	; 0xcd2 <__fpcmp_parts_f+0x16>
     cd0:	43 c0       	rjmp	.+134    	; 0xd58 <__fpcmp_parts_f+0x9c>
     cd2:	94 30       	cpi	r25, 0x04	; 4
     cd4:	51 f4       	brne	.+20     	; 0xcea <__fpcmp_parts_f+0x2e>
     cd6:	11 96       	adiw	r26, 0x01	; 1
     cd8:	1c 91       	ld	r17, X
     cda:	84 30       	cpi	r24, 0x04	; 4
     cdc:	99 f5       	brne	.+102    	; 0xd44 <__fpcmp_parts_f+0x88>
     cde:	81 81       	ldd	r24, Z+1	; 0x01
     ce0:	68 2f       	mov	r22, r24
     ce2:	70 e0       	ldi	r23, 0x00	; 0
     ce4:	61 1b       	sub	r22, r17
     ce6:	71 09       	sbc	r23, r1
     ce8:	3f c0       	rjmp	.+126    	; 0xd68 <__fpcmp_parts_f+0xac>
     cea:	84 30       	cpi	r24, 0x04	; 4
     cec:	21 f0       	breq	.+8      	; 0xcf6 <__fpcmp_parts_f+0x3a>
     cee:	92 30       	cpi	r25, 0x02	; 2
     cf0:	31 f4       	brne	.+12     	; 0xcfe <__fpcmp_parts_f+0x42>
     cf2:	82 30       	cpi	r24, 0x02	; 2
     cf4:	b9 f1       	breq	.+110    	; 0xd64 <__fpcmp_parts_f+0xa8>
     cf6:	81 81       	ldd	r24, Z+1	; 0x01
     cf8:	88 23       	and	r24, r24
     cfa:	89 f1       	breq	.+98     	; 0xd5e <__fpcmp_parts_f+0xa2>
     cfc:	2d c0       	rjmp	.+90     	; 0xd58 <__fpcmp_parts_f+0x9c>
     cfe:	11 96       	adiw	r26, 0x01	; 1
     d00:	1c 91       	ld	r17, X
     d02:	11 97       	sbiw	r26, 0x01	; 1
     d04:	82 30       	cpi	r24, 0x02	; 2
     d06:	f1 f0       	breq	.+60     	; 0xd44 <__fpcmp_parts_f+0x88>
     d08:	81 81       	ldd	r24, Z+1	; 0x01
     d0a:	18 17       	cp	r17, r24
     d0c:	d9 f4       	brne	.+54     	; 0xd44 <__fpcmp_parts_f+0x88>
     d0e:	12 96       	adiw	r26, 0x02	; 2
     d10:	2d 91       	ld	r18, X+
     d12:	3c 91       	ld	r19, X
     d14:	13 97       	sbiw	r26, 0x03	; 3
     d16:	82 81       	ldd	r24, Z+2	; 0x02
     d18:	93 81       	ldd	r25, Z+3	; 0x03
     d1a:	82 17       	cp	r24, r18
     d1c:	93 07       	cpc	r25, r19
     d1e:	94 f0       	brlt	.+36     	; 0xd44 <__fpcmp_parts_f+0x88>
     d20:	28 17       	cp	r18, r24
     d22:	39 07       	cpc	r19, r25
     d24:	bc f0       	brlt	.+46     	; 0xd54 <__fpcmp_parts_f+0x98>
     d26:	14 96       	adiw	r26, 0x04	; 4
     d28:	8d 91       	ld	r24, X+
     d2a:	9d 91       	ld	r25, X+
     d2c:	0d 90       	ld	r0, X+
     d2e:	bc 91       	ld	r27, X
     d30:	a0 2d       	mov	r26, r0
     d32:	24 81       	ldd	r18, Z+4	; 0x04
     d34:	35 81       	ldd	r19, Z+5	; 0x05
     d36:	46 81       	ldd	r20, Z+6	; 0x06
     d38:	57 81       	ldd	r21, Z+7	; 0x07
     d3a:	28 17       	cp	r18, r24
     d3c:	39 07       	cpc	r19, r25
     d3e:	4a 07       	cpc	r20, r26
     d40:	5b 07       	cpc	r21, r27
     d42:	18 f4       	brcc	.+6      	; 0xd4a <__fpcmp_parts_f+0x8e>
     d44:	11 23       	and	r17, r17
     d46:	41 f0       	breq	.+16     	; 0xd58 <__fpcmp_parts_f+0x9c>
     d48:	0a c0       	rjmp	.+20     	; 0xd5e <__fpcmp_parts_f+0xa2>
     d4a:	82 17       	cp	r24, r18
     d4c:	93 07       	cpc	r25, r19
     d4e:	a4 07       	cpc	r26, r20
     d50:	b5 07       	cpc	r27, r21
     d52:	40 f4       	brcc	.+16     	; 0xd64 <__fpcmp_parts_f+0xa8>
     d54:	11 23       	and	r17, r17
     d56:	19 f0       	breq	.+6      	; 0xd5e <__fpcmp_parts_f+0xa2>
     d58:	61 e0       	ldi	r22, 0x01	; 1
     d5a:	70 e0       	ldi	r23, 0x00	; 0
     d5c:	05 c0       	rjmp	.+10     	; 0xd68 <__fpcmp_parts_f+0xac>
     d5e:	6f ef       	ldi	r22, 0xFF	; 255
     d60:	7f ef       	ldi	r23, 0xFF	; 255
     d62:	02 c0       	rjmp	.+4      	; 0xd68 <__fpcmp_parts_f+0xac>
     d64:	60 e0       	ldi	r22, 0x00	; 0
     d66:	70 e0       	ldi	r23, 0x00	; 0
     d68:	cb 01       	movw	r24, r22
     d6a:	1f 91       	pop	r17
     d6c:	08 95       	ret

00000d6e <MADC_voidInit>:
#include "MADC_interface.h"

static void (*MADC_pvoidfUserFunction)(void) = NULL_POINTER;

void MADC_voidInit(u8 ARG_u8Vref, u8 ARG_u8Prescaler, u8 ARG_u8Resolution)
{
     d6e:	df 93       	push	r29
     d70:	cf 93       	push	r28
     d72:	00 d0       	rcall	.+0      	; 0xd74 <MADC_voidInit+0x6>
     d74:	0f 92       	push	r0
     d76:	cd b7       	in	r28, 0x3d	; 61
     d78:	de b7       	in	r29, 0x3e	; 62
     d7a:	89 83       	std	Y+1, r24	; 0x01
     d7c:	6a 83       	std	Y+2, r22	; 0x02
     d7e:	4b 83       	std	Y+3, r20	; 0x03
	if(((ARG_u8Vref<=1)||(3==ARG_u8Vref))&&(ARG_u8Prescaler<=7)&&(ARG_u8Resolution<=1))
     d80:	89 81       	ldd	r24, Y+1	; 0x01
     d82:	82 30       	cpi	r24, 0x02	; 2
     d84:	18 f0       	brcs	.+6      	; 0xd8c <MADC_voidInit+0x1e>
     d86:	89 81       	ldd	r24, Y+1	; 0x01
     d88:	83 30       	cpi	r24, 0x03	; 3
     d8a:	99 f5       	brne	.+102    	; 0xdf2 <MADC_voidInit+0x84>
     d8c:	8a 81       	ldd	r24, Y+2	; 0x02
     d8e:	88 30       	cpi	r24, 0x08	; 8
     d90:	80 f5       	brcc	.+96     	; 0xdf2 <MADC_voidInit+0x84>
     d92:	8b 81       	ldd	r24, Y+3	; 0x03
     d94:	82 30       	cpi	r24, 0x02	; 2
     d96:	68 f5       	brcc	.+90     	; 0xdf2 <MADC_voidInit+0x84>
	{
		ADMUX = (ADMUX&0x1F) | ((ARG_u8Vref<<REFS0) | (ARG_u8Resolution<<ADLAR));
     d98:	a7 e2       	ldi	r26, 0x27	; 39
     d9a:	b0 e0       	ldi	r27, 0x00	; 0
     d9c:	e7 e2       	ldi	r30, 0x27	; 39
     d9e:	f0 e0       	ldi	r31, 0x00	; 0
     da0:	80 81       	ld	r24, Z
     da2:	38 2f       	mov	r19, r24
     da4:	3f 71       	andi	r19, 0x1F	; 31
     da6:	89 81       	ldd	r24, Y+1	; 0x01
     da8:	88 2f       	mov	r24, r24
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	00 24       	eor	r0, r0
     dae:	96 95       	lsr	r25
     db0:	87 95       	ror	r24
     db2:	07 94       	ror	r0
     db4:	96 95       	lsr	r25
     db6:	87 95       	ror	r24
     db8:	07 94       	ror	r0
     dba:	98 2f       	mov	r25, r24
     dbc:	80 2d       	mov	r24, r0
     dbe:	28 2f       	mov	r18, r24
     dc0:	8b 81       	ldd	r24, Y+3	; 0x03
     dc2:	88 2f       	mov	r24, r24
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	88 0f       	add	r24, r24
     dc8:	99 1f       	adc	r25, r25
     dca:	82 95       	swap	r24
     dcc:	92 95       	swap	r25
     dce:	90 7f       	andi	r25, 0xF0	; 240
     dd0:	98 27       	eor	r25, r24
     dd2:	80 7f       	andi	r24, 0xF0	; 240
     dd4:	98 27       	eor	r25, r24
     dd6:	82 2b       	or	r24, r18
     dd8:	83 2b       	or	r24, r19
     dda:	8c 93       	st	X, r24
		ADCSRA = (ADCSRA&0xF8) | ((1<<ADEN) | (ARG_u8Prescaler));
     ddc:	a6 e2       	ldi	r26, 0x26	; 38
     dde:	b0 e0       	ldi	r27, 0x00	; 0
     de0:	e6 e2       	ldi	r30, 0x26	; 38
     de2:	f0 e0       	ldi	r31, 0x00	; 0
     de4:	80 81       	ld	r24, Z
     de6:	98 2f       	mov	r25, r24
     de8:	98 7f       	andi	r25, 0xF8	; 248
     dea:	8a 81       	ldd	r24, Y+2	; 0x02
     dec:	80 68       	ori	r24, 0x80	; 128
     dee:	89 2b       	or	r24, r25
     df0:	8c 93       	st	X, r24
	}
	else
	{
		// Report an Error
	}
}
     df2:	0f 90       	pop	r0
     df4:	0f 90       	pop	r0
     df6:	0f 90       	pop	r0
     df8:	cf 91       	pop	r28
     dfa:	df 91       	pop	r29
     dfc:	08 95       	ret

00000dfe <MADC_voidEnableADC>:

void MADC_voidEnableADC(void)
{
     dfe:	df 93       	push	r29
     e00:	cf 93       	push	r28
     e02:	cd b7       	in	r28, 0x3d	; 61
     e04:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(ADCSRA, ADEN);
     e06:	a6 e2       	ldi	r26, 0x26	; 38
     e08:	b0 e0       	ldi	r27, 0x00	; 0
     e0a:	e6 e2       	ldi	r30, 0x26	; 38
     e0c:	f0 e0       	ldi	r31, 0x00	; 0
     e0e:	80 81       	ld	r24, Z
     e10:	80 68       	ori	r24, 0x80	; 128
     e12:	8c 93       	st	X, r24
}
     e14:	cf 91       	pop	r28
     e16:	df 91       	pop	r29
     e18:	08 95       	ret

00000e1a <MADC_voidDisableADC>:

void MADC_voidDisableADC(void)
{
     e1a:	df 93       	push	r29
     e1c:	cf 93       	push	r28
     e1e:	cd b7       	in	r28, 0x3d	; 61
     e20:	de b7       	in	r29, 0x3e	; 62
	CLEAR_BIT(ADCSRA, ADEN);
     e22:	a6 e2       	ldi	r26, 0x26	; 38
     e24:	b0 e0       	ldi	r27, 0x00	; 0
     e26:	e6 e2       	ldi	r30, 0x26	; 38
     e28:	f0 e0       	ldi	r31, 0x00	; 0
     e2a:	80 81       	ld	r24, Z
     e2c:	8f 77       	andi	r24, 0x7F	; 127
     e2e:	8c 93       	st	X, r24
}
     e30:	cf 91       	pop	r28
     e32:	df 91       	pop	r29
     e34:	08 95       	ret

00000e36 <MADC_voidEnableInterrupt>:

void MADC_voidEnableInterrupt(void)
{
     e36:	df 93       	push	r29
     e38:	cf 93       	push	r28
     e3a:	cd b7       	in	r28, 0x3d	; 61
     e3c:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(ADCSRA, ADIE);
     e3e:	a6 e2       	ldi	r26, 0x26	; 38
     e40:	b0 e0       	ldi	r27, 0x00	; 0
     e42:	e6 e2       	ldi	r30, 0x26	; 38
     e44:	f0 e0       	ldi	r31, 0x00	; 0
     e46:	80 81       	ld	r24, Z
     e48:	88 60       	ori	r24, 0x08	; 8
     e4a:	8c 93       	st	X, r24
}
     e4c:	cf 91       	pop	r28
     e4e:	df 91       	pop	r29
     e50:	08 95       	ret

00000e52 <MADC_voidDisableInterrupt>:

void MADC_voidDisableInterrupt(void)
{
     e52:	df 93       	push	r29
     e54:	cf 93       	push	r28
     e56:	cd b7       	in	r28, 0x3d	; 61
     e58:	de b7       	in	r29, 0x3e	; 62
	CLEAR_BIT(ADCSRA, ADIE);
     e5a:	a6 e2       	ldi	r26, 0x26	; 38
     e5c:	b0 e0       	ldi	r27, 0x00	; 0
     e5e:	e6 e2       	ldi	r30, 0x26	; 38
     e60:	f0 e0       	ldi	r31, 0x00	; 0
     e62:	80 81       	ld	r24, Z
     e64:	87 7f       	andi	r24, 0xF7	; 247
     e66:	8c 93       	st	X, r24
}
     e68:	cf 91       	pop	r28
     e6a:	df 91       	pop	r29
     e6c:	08 95       	ret

00000e6e <MADC_voidSetCallback>:

void MADC_voidSetCallback(void (*ARG_pvoidfUserFunction)(void))
{
     e6e:	df 93       	push	r29
     e70:	cf 93       	push	r28
     e72:	00 d0       	rcall	.+0      	; 0xe74 <MADC_voidSetCallback+0x6>
     e74:	cd b7       	in	r28, 0x3d	; 61
     e76:	de b7       	in	r29, 0x3e	; 62
     e78:	9a 83       	std	Y+2, r25	; 0x02
     e7a:	89 83       	std	Y+1, r24	; 0x01
	MADC_pvoidfUserFunction = ARG_pvoidfUserFunction;
     e7c:	89 81       	ldd	r24, Y+1	; 0x01
     e7e:	9a 81       	ldd	r25, Y+2	; 0x02
     e80:	90 93 69 01 	sts	0x0169, r25
     e84:	80 93 68 01 	sts	0x0168, r24
}
     e88:	0f 90       	pop	r0
     e8a:	0f 90       	pop	r0
     e8c:	cf 91       	pop	r28
     e8e:	df 91       	pop	r29
     e90:	08 95       	ret

00000e92 <MADC_u8ReadADC>:

u8	MADC_u8ReadADC(u8 ARG_u8Channel)
{
     e92:	df 93       	push	r29
     e94:	cf 93       	push	r28
     e96:	0f 92       	push	r0
     e98:	cd b7       	in	r28, 0x3d	; 61
     e9a:	de b7       	in	r29, 0x3e	; 62
     e9c:	89 83       	std	Y+1, r24	; 0x01
	MADC_voidStartConversion(ARG_u8Channel);
     e9e:	89 81       	ldd	r24, Y+1	; 0x01
     ea0:	0e 94 72 07 	call	0xee4	; 0xee4 <MADC_voidStartConversion>
	MADC_voidFlagPolling();
     ea4:	0e 94 90 07 	call	0xf20	; 0xf20 <MADC_voidFlagPolling>
	MADC_voidClearFlag();
     ea8:	0e 94 a2 07 	call	0xf44	; 0xf44 <MADC_voidClearFlag>
	return ADCH;
     eac:	e5 e2       	ldi	r30, 0x25	; 37
     eae:	f0 e0       	ldi	r31, 0x00	; 0
     eb0:	80 81       	ld	r24, Z
}
     eb2:	0f 90       	pop	r0
     eb4:	cf 91       	pop	r28
     eb6:	df 91       	pop	r29
     eb8:	08 95       	ret

00000eba <MADC_u16ReadADC>:

u16	MADC_u16ReadADC(u8 ARG_u8Channel)
{
     eba:	df 93       	push	r29
     ebc:	cf 93       	push	r28
     ebe:	0f 92       	push	r0
     ec0:	cd b7       	in	r28, 0x3d	; 61
     ec2:	de b7       	in	r29, 0x3e	; 62
     ec4:	89 83       	std	Y+1, r24	; 0x01
	MADC_voidStartConversion(ARG_u8Channel);
     ec6:	89 81       	ldd	r24, Y+1	; 0x01
     ec8:	0e 94 72 07 	call	0xee4	; 0xee4 <MADC_voidStartConversion>
	MADC_voidFlagPolling();
     ecc:	0e 94 90 07 	call	0xf20	; 0xf20 <MADC_voidFlagPolling>
	MADC_voidClearFlag();
     ed0:	0e 94 a2 07 	call	0xf44	; 0xf44 <MADC_voidClearFlag>
	return ADC;
     ed4:	e4 e2       	ldi	r30, 0x24	; 36
     ed6:	f0 e0       	ldi	r31, 0x00	; 0
     ed8:	80 81       	ld	r24, Z
     eda:	91 81       	ldd	r25, Z+1	; 0x01
}
     edc:	0f 90       	pop	r0
     ede:	cf 91       	pop	r28
     ee0:	df 91       	pop	r29
     ee2:	08 95       	ret

00000ee4 <MADC_voidStartConversion>:

void MADC_voidStartConversion(u8 ARG_u8Channel)
{
     ee4:	df 93       	push	r29
     ee6:	cf 93       	push	r28
     ee8:	0f 92       	push	r0
     eea:	cd b7       	in	r28, 0x3d	; 61
     eec:	de b7       	in	r29, 0x3e	; 62
     eee:	89 83       	std	Y+1, r24	; 0x01
	if(ARG_u8Channel<=31)
     ef0:	89 81       	ldd	r24, Y+1	; 0x01
     ef2:	80 32       	cpi	r24, 0x20	; 32
     ef4:	88 f4       	brcc	.+34     	; 0xf18 <MADC_voidStartConversion+0x34>
	{
		ADMUX = (ADMUX&0xE0) | (ARG_u8Channel);
     ef6:	a7 e2       	ldi	r26, 0x27	; 39
     ef8:	b0 e0       	ldi	r27, 0x00	; 0
     efa:	e7 e2       	ldi	r30, 0x27	; 39
     efc:	f0 e0       	ldi	r31, 0x00	; 0
     efe:	80 81       	ld	r24, Z
     f00:	98 2f       	mov	r25, r24
     f02:	90 7e       	andi	r25, 0xE0	; 224
     f04:	89 81       	ldd	r24, Y+1	; 0x01
     f06:	89 2b       	or	r24, r25
     f08:	8c 93       	st	X, r24
		SET_BIT(ADCSRA, ADSC);
     f0a:	a6 e2       	ldi	r26, 0x26	; 38
     f0c:	b0 e0       	ldi	r27, 0x00	; 0
     f0e:	e6 e2       	ldi	r30, 0x26	; 38
     f10:	f0 e0       	ldi	r31, 0x00	; 0
     f12:	80 81       	ld	r24, Z
     f14:	80 64       	ori	r24, 0x40	; 64
     f16:	8c 93       	st	X, r24
	}
	else
	{
		// Report an Error
	}
}
     f18:	0f 90       	pop	r0
     f1a:	cf 91       	pop	r28
     f1c:	df 91       	pop	r29
     f1e:	08 95       	ret

00000f20 <MADC_voidFlagPolling>:

void MADC_voidFlagPolling(void)
{
     f20:	df 93       	push	r29
     f22:	cf 93       	push	r28
     f24:	cd b7       	in	r28, 0x3d	; 61
     f26:	de b7       	in	r29, 0x3e	; 62
	while(!GET_BIT(ADCSRA, ADIF));
     f28:	e6 e2       	ldi	r30, 0x26	; 38
     f2a:	f0 e0       	ldi	r31, 0x00	; 0
     f2c:	80 81       	ld	r24, Z
     f2e:	82 95       	swap	r24
     f30:	8f 70       	andi	r24, 0x0F	; 15
     f32:	88 2f       	mov	r24, r24
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	81 70       	andi	r24, 0x01	; 1
     f38:	90 70       	andi	r25, 0x00	; 0
     f3a:	00 97       	sbiw	r24, 0x00	; 0
     f3c:	a9 f3       	breq	.-22     	; 0xf28 <MADC_voidFlagPolling+0x8>
}
     f3e:	cf 91       	pop	r28
     f40:	df 91       	pop	r29
     f42:	08 95       	ret

00000f44 <MADC_voidClearFlag>:

void MADC_voidClearFlag(void)
{
     f44:	df 93       	push	r29
     f46:	cf 93       	push	r28
     f48:	cd b7       	in	r28, 0x3d	; 61
     f4a:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(ADCSRA, ADIF);
     f4c:	a6 e2       	ldi	r26, 0x26	; 38
     f4e:	b0 e0       	ldi	r27, 0x00	; 0
     f50:	e6 e2       	ldi	r30, 0x26	; 38
     f52:	f0 e0       	ldi	r31, 0x00	; 0
     f54:	80 81       	ld	r24, Z
     f56:	80 61       	ori	r24, 0x10	; 16
     f58:	8c 93       	st	X, r24
}
     f5a:	cf 91       	pop	r28
     f5c:	df 91       	pop	r29
     f5e:	08 95       	ret

00000f60 <__vector_16>:

void __vector_16(void) __attribute__((signal));
void __vector_16(void)
{
     f60:	1f 92       	push	r1
     f62:	0f 92       	push	r0
     f64:	0f b6       	in	r0, 0x3f	; 63
     f66:	0f 92       	push	r0
     f68:	11 24       	eor	r1, r1
     f6a:	2f 93       	push	r18
     f6c:	3f 93       	push	r19
     f6e:	4f 93       	push	r20
     f70:	5f 93       	push	r21
     f72:	6f 93       	push	r22
     f74:	7f 93       	push	r23
     f76:	8f 93       	push	r24
     f78:	9f 93       	push	r25
     f7a:	af 93       	push	r26
     f7c:	bf 93       	push	r27
     f7e:	ef 93       	push	r30
     f80:	ff 93       	push	r31
     f82:	df 93       	push	r29
     f84:	cf 93       	push	r28
     f86:	cd b7       	in	r28, 0x3d	; 61
     f88:	de b7       	in	r29, 0x3e	; 62
	if(MADC_pvoidfUserFunction!=NULL_POINTER)
     f8a:	80 91 68 01 	lds	r24, 0x0168
     f8e:	90 91 69 01 	lds	r25, 0x0169
     f92:	00 97       	sbiw	r24, 0x00	; 0
     f94:	29 f0       	breq	.+10     	; 0xfa0 <__vector_16+0x40>
	{
		(*MADC_pvoidfUserFunction)();
     f96:	e0 91 68 01 	lds	r30, 0x0168
     f9a:	f0 91 69 01 	lds	r31, 0x0169
     f9e:	09 95       	icall
	}
	else
	{
		// Do nothing
	}
     fa0:	cf 91       	pop	r28
     fa2:	df 91       	pop	r29
     fa4:	ff 91       	pop	r31
     fa6:	ef 91       	pop	r30
     fa8:	bf 91       	pop	r27
     faa:	af 91       	pop	r26
     fac:	9f 91       	pop	r25
     fae:	8f 91       	pop	r24
     fb0:	7f 91       	pop	r23
     fb2:	6f 91       	pop	r22
     fb4:	5f 91       	pop	r21
     fb6:	4f 91       	pop	r20
     fb8:	3f 91       	pop	r19
     fba:	2f 91       	pop	r18
     fbc:	0f 90       	pop	r0
     fbe:	0f be       	out	0x3f, r0	; 63
     fc0:	0f 90       	pop	r0
     fc2:	1f 90       	pop	r1
     fc4:	18 95       	reti

00000fc6 <MDIO_voidSetPortDirection>:

#include "MDIO_private.h"
#include "MDIO_interface.h"

void MDIO_voidSetPortDirection(u8 ARG_u8Port,u8 ARG_u8Directoin)
{
     fc6:	df 93       	push	r29
     fc8:	cf 93       	push	r28
     fca:	00 d0       	rcall	.+0      	; 0xfcc <MDIO_voidSetPortDirection+0x6>
     fcc:	00 d0       	rcall	.+0      	; 0xfce <MDIO_voidSetPortDirection+0x8>
     fce:	cd b7       	in	r28, 0x3d	; 61
     fd0:	de b7       	in	r29, 0x3e	; 62
     fd2:	89 83       	std	Y+1, r24	; 0x01
     fd4:	6a 83       	std	Y+2, r22	; 0x02
	switch(ARG_u8Port)
     fd6:	89 81       	ldd	r24, Y+1	; 0x01
     fd8:	28 2f       	mov	r18, r24
     fda:	30 e0       	ldi	r19, 0x00	; 0
     fdc:	3c 83       	std	Y+4, r19	; 0x04
     fde:	2b 83       	std	Y+3, r18	; 0x03
     fe0:	8b 81       	ldd	r24, Y+3	; 0x03
     fe2:	9c 81       	ldd	r25, Y+4	; 0x04
     fe4:	8c 30       	cpi	r24, 0x0C	; 12
     fe6:	91 05       	cpc	r25, r1
     fe8:	b1 f0       	breq	.+44     	; 0x1016 <MDIO_voidSetPortDirection+0x50>
     fea:	2b 81       	ldd	r18, Y+3	; 0x03
     fec:	3c 81       	ldd	r19, Y+4	; 0x04
     fee:	2d 30       	cpi	r18, 0x0D	; 13
     ff0:	31 05       	cpc	r19, r1
     ff2:	34 f4       	brge	.+12     	; 0x1000 <MDIO_voidSetPortDirection+0x3a>
     ff4:	8b 81       	ldd	r24, Y+3	; 0x03
     ff6:	9c 81       	ldd	r25, Y+4	; 0x04
     ff8:	85 30       	cpi	r24, 0x05	; 5
     ffa:	91 05       	cpc	r25, r1
     ffc:	d9 f0       	breq	.+54     	; 0x1034 <MDIO_voidSetPortDirection+0x6e>
     ffe:	1e c0       	rjmp	.+60     	; 0x103c <MDIO_voidSetPortDirection+0x76>
    1000:	2b 81       	ldd	r18, Y+3	; 0x03
    1002:	3c 81       	ldd	r19, Y+4	; 0x04
    1004:	21 32       	cpi	r18, 0x21	; 33
    1006:	31 05       	cpc	r19, r1
    1008:	59 f0       	breq	.+22     	; 0x1020 <MDIO_voidSetPortDirection+0x5a>
    100a:	8b 81       	ldd	r24, Y+3	; 0x03
    100c:	9c 81       	ldd	r25, Y+4	; 0x04
    100e:	88 32       	cpi	r24, 0x28	; 40
    1010:	91 05       	cpc	r25, r1
    1012:	59 f0       	breq	.+22     	; 0x102a <MDIO_voidSetPortDirection+0x64>
    1014:	13 c0       	rjmp	.+38     	; 0x103c <MDIO_voidSetPortDirection+0x76>
	{
		case MDIO_PORTA : GPIOA -> DDR = ARG_u8Directoin; break ;
    1016:	e9 e3       	ldi	r30, 0x39	; 57
    1018:	f0 e0       	ldi	r31, 0x00	; 0
    101a:	8a 81       	ldd	r24, Y+2	; 0x02
    101c:	81 83       	std	Z+1, r24	; 0x01
    101e:	0e c0       	rjmp	.+28     	; 0x103c <MDIO_voidSetPortDirection+0x76>
		
		case MDIO_PORTB : GPIOB -> DDR = ARG_u8Directoin; break ;
    1020:	e6 e3       	ldi	r30, 0x36	; 54
    1022:	f0 e0       	ldi	r31, 0x00	; 0
    1024:	8a 81       	ldd	r24, Y+2	; 0x02
    1026:	81 83       	std	Z+1, r24	; 0x01
    1028:	09 c0       	rjmp	.+18     	; 0x103c <MDIO_voidSetPortDirection+0x76>
		
		case MDIO_PORTC : GPIOC -> DDR = ARG_u8Directoin; break ;
    102a:	e3 e3       	ldi	r30, 0x33	; 51
    102c:	f0 e0       	ldi	r31, 0x00	; 0
    102e:	8a 81       	ldd	r24, Y+2	; 0x02
    1030:	81 83       	std	Z+1, r24	; 0x01
    1032:	04 c0       	rjmp	.+8      	; 0x103c <MDIO_voidSetPortDirection+0x76>
		
		case MDIO_PORTD : GPIOD -> DDR = ARG_u8Directoin; break ;
    1034:	e0 e3       	ldi	r30, 0x30	; 48
    1036:	f0 e0       	ldi	r31, 0x00	; 0
    1038:	8a 81       	ldd	r24, Y+2	; 0x02
    103a:	81 83       	std	Z+1, r24	; 0x01
		
		default: break;
		
	}
}
    103c:	0f 90       	pop	r0
    103e:	0f 90       	pop	r0
    1040:	0f 90       	pop	r0
    1042:	0f 90       	pop	r0
    1044:	cf 91       	pop	r28
    1046:	df 91       	pop	r29
    1048:	08 95       	ret

0000104a <MDIO_voidSetPortValue>:
void MDIO_voidSetPortValue(u8 ARG_u8Port,u8 ARG_u8Value)
{
    104a:	df 93       	push	r29
    104c:	cf 93       	push	r28
    104e:	00 d0       	rcall	.+0      	; 0x1050 <MDIO_voidSetPortValue+0x6>
    1050:	00 d0       	rcall	.+0      	; 0x1052 <MDIO_voidSetPortValue+0x8>
    1052:	cd b7       	in	r28, 0x3d	; 61
    1054:	de b7       	in	r29, 0x3e	; 62
    1056:	89 83       	std	Y+1, r24	; 0x01
    1058:	6a 83       	std	Y+2, r22	; 0x02
	switch(ARG_u8Port)
    105a:	89 81       	ldd	r24, Y+1	; 0x01
    105c:	28 2f       	mov	r18, r24
    105e:	30 e0       	ldi	r19, 0x00	; 0
    1060:	3c 83       	std	Y+4, r19	; 0x04
    1062:	2b 83       	std	Y+3, r18	; 0x03
    1064:	8b 81       	ldd	r24, Y+3	; 0x03
    1066:	9c 81       	ldd	r25, Y+4	; 0x04
    1068:	8c 30       	cpi	r24, 0x0C	; 12
    106a:	91 05       	cpc	r25, r1
    106c:	b1 f0       	breq	.+44     	; 0x109a <MDIO_voidSetPortValue+0x50>
    106e:	2b 81       	ldd	r18, Y+3	; 0x03
    1070:	3c 81       	ldd	r19, Y+4	; 0x04
    1072:	2d 30       	cpi	r18, 0x0D	; 13
    1074:	31 05       	cpc	r19, r1
    1076:	34 f4       	brge	.+12     	; 0x1084 <MDIO_voidSetPortValue+0x3a>
    1078:	8b 81       	ldd	r24, Y+3	; 0x03
    107a:	9c 81       	ldd	r25, Y+4	; 0x04
    107c:	85 30       	cpi	r24, 0x05	; 5
    107e:	91 05       	cpc	r25, r1
    1080:	d9 f0       	breq	.+54     	; 0x10b8 <MDIO_voidSetPortValue+0x6e>
    1082:	1e c0       	rjmp	.+60     	; 0x10c0 <MDIO_voidSetPortValue+0x76>
    1084:	2b 81       	ldd	r18, Y+3	; 0x03
    1086:	3c 81       	ldd	r19, Y+4	; 0x04
    1088:	21 32       	cpi	r18, 0x21	; 33
    108a:	31 05       	cpc	r19, r1
    108c:	59 f0       	breq	.+22     	; 0x10a4 <MDIO_voidSetPortValue+0x5a>
    108e:	8b 81       	ldd	r24, Y+3	; 0x03
    1090:	9c 81       	ldd	r25, Y+4	; 0x04
    1092:	88 32       	cpi	r24, 0x28	; 40
    1094:	91 05       	cpc	r25, r1
    1096:	59 f0       	breq	.+22     	; 0x10ae <MDIO_voidSetPortValue+0x64>
    1098:	13 c0       	rjmp	.+38     	; 0x10c0 <MDIO_voidSetPortValue+0x76>
	{
		case MDIO_PORTA : GPIOA -> PORT = ARG_u8Value; break ;
    109a:	e9 e3       	ldi	r30, 0x39	; 57
    109c:	f0 e0       	ldi	r31, 0x00	; 0
    109e:	8a 81       	ldd	r24, Y+2	; 0x02
    10a0:	82 83       	std	Z+2, r24	; 0x02
    10a2:	0e c0       	rjmp	.+28     	; 0x10c0 <MDIO_voidSetPortValue+0x76>
		
		case MDIO_PORTB : GPIOB -> PORT = ARG_u8Value; break ;
    10a4:	e6 e3       	ldi	r30, 0x36	; 54
    10a6:	f0 e0       	ldi	r31, 0x00	; 0
    10a8:	8a 81       	ldd	r24, Y+2	; 0x02
    10aa:	82 83       	std	Z+2, r24	; 0x02
    10ac:	09 c0       	rjmp	.+18     	; 0x10c0 <MDIO_voidSetPortValue+0x76>
		
		case MDIO_PORTC : GPIOC -> PORT = ARG_u8Value; break ;
    10ae:	e3 e3       	ldi	r30, 0x33	; 51
    10b0:	f0 e0       	ldi	r31, 0x00	; 0
    10b2:	8a 81       	ldd	r24, Y+2	; 0x02
    10b4:	82 83       	std	Z+2, r24	; 0x02
    10b6:	04 c0       	rjmp	.+8      	; 0x10c0 <MDIO_voidSetPortValue+0x76>
		
		case MDIO_PORTD : GPIOD -> PORT = ARG_u8Value; break ;
    10b8:	e0 e3       	ldi	r30, 0x30	; 48
    10ba:	f0 e0       	ldi	r31, 0x00	; 0
    10bc:	8a 81       	ldd	r24, Y+2	; 0x02
    10be:	82 83       	std	Z+2, r24	; 0x02
		
		default: break;
		
	}	
}
    10c0:	0f 90       	pop	r0
    10c2:	0f 90       	pop	r0
    10c4:	0f 90       	pop	r0
    10c6:	0f 90       	pop	r0
    10c8:	cf 91       	pop	r28
    10ca:	df 91       	pop	r29
    10cc:	08 95       	ret

000010ce <MDIO_voidGetPortValue>:
u8	 MDIO_voidGetPortValue(u8 ARG_u8Port)
{
    10ce:	df 93       	push	r29
    10d0:	cf 93       	push	r28
    10d2:	00 d0       	rcall	.+0      	; 0x10d4 <MDIO_voidGetPortValue+0x6>
    10d4:	00 d0       	rcall	.+0      	; 0x10d6 <MDIO_voidGetPortValue+0x8>
    10d6:	cd b7       	in	r28, 0x3d	; 61
    10d8:	de b7       	in	r29, 0x3e	; 62
    10da:	8a 83       	std	Y+2, r24	; 0x02
	u8 L_u8Value = 0;
    10dc:	19 82       	std	Y+1, r1	; 0x01
		switch(ARG_u8Port)
    10de:	8a 81       	ldd	r24, Y+2	; 0x02
    10e0:	28 2f       	mov	r18, r24
    10e2:	30 e0       	ldi	r19, 0x00	; 0
    10e4:	3c 83       	std	Y+4, r19	; 0x04
    10e6:	2b 83       	std	Y+3, r18	; 0x03
    10e8:	8b 81       	ldd	r24, Y+3	; 0x03
    10ea:	9c 81       	ldd	r25, Y+4	; 0x04
    10ec:	8c 30       	cpi	r24, 0x0C	; 12
    10ee:	91 05       	cpc	r25, r1
    10f0:	b1 f0       	breq	.+44     	; 0x111e <MDIO_voidGetPortValue+0x50>
    10f2:	2b 81       	ldd	r18, Y+3	; 0x03
    10f4:	3c 81       	ldd	r19, Y+4	; 0x04
    10f6:	2d 30       	cpi	r18, 0x0D	; 13
    10f8:	31 05       	cpc	r19, r1
    10fa:	34 f4       	brge	.+12     	; 0x1108 <MDIO_voidGetPortValue+0x3a>
    10fc:	8b 81       	ldd	r24, Y+3	; 0x03
    10fe:	9c 81       	ldd	r25, Y+4	; 0x04
    1100:	85 30       	cpi	r24, 0x05	; 5
    1102:	91 05       	cpc	r25, r1
    1104:	d9 f0       	breq	.+54     	; 0x113c <MDIO_voidGetPortValue+0x6e>
    1106:	1e c0       	rjmp	.+60     	; 0x1144 <MDIO_voidGetPortValue+0x76>
    1108:	2b 81       	ldd	r18, Y+3	; 0x03
    110a:	3c 81       	ldd	r19, Y+4	; 0x04
    110c:	21 32       	cpi	r18, 0x21	; 33
    110e:	31 05       	cpc	r19, r1
    1110:	59 f0       	breq	.+22     	; 0x1128 <MDIO_voidGetPortValue+0x5a>
    1112:	8b 81       	ldd	r24, Y+3	; 0x03
    1114:	9c 81       	ldd	r25, Y+4	; 0x04
    1116:	88 32       	cpi	r24, 0x28	; 40
    1118:	91 05       	cpc	r25, r1
    111a:	59 f0       	breq	.+22     	; 0x1132 <MDIO_voidGetPortValue+0x64>
    111c:	13 c0       	rjmp	.+38     	; 0x1144 <MDIO_voidGetPortValue+0x76>
	{
		case MDIO_PORTA : L_u8Value = GPIOA -> PIN; break ;
    111e:	e9 e3       	ldi	r30, 0x39	; 57
    1120:	f0 e0       	ldi	r31, 0x00	; 0
    1122:	80 81       	ld	r24, Z
    1124:	89 83       	std	Y+1, r24	; 0x01
    1126:	0e c0       	rjmp	.+28     	; 0x1144 <MDIO_voidGetPortValue+0x76>
		
		case MDIO_PORTB : L_u8Value = GPIOB -> PIN; break ;
    1128:	e6 e3       	ldi	r30, 0x36	; 54
    112a:	f0 e0       	ldi	r31, 0x00	; 0
    112c:	80 81       	ld	r24, Z
    112e:	89 83       	std	Y+1, r24	; 0x01
    1130:	09 c0       	rjmp	.+18     	; 0x1144 <MDIO_voidGetPortValue+0x76>
		
		case MDIO_PORTC : L_u8Value = GPIOC -> PIN; break ;
    1132:	e3 e3       	ldi	r30, 0x33	; 51
    1134:	f0 e0       	ldi	r31, 0x00	; 0
    1136:	80 81       	ld	r24, Z
    1138:	89 83       	std	Y+1, r24	; 0x01
    113a:	04 c0       	rjmp	.+8      	; 0x1144 <MDIO_voidGetPortValue+0x76>
		
		case MDIO_PORTD : L_u8Value = GPIOD -> PIN; break ;
    113c:	e0 e3       	ldi	r30, 0x30	; 48
    113e:	f0 e0       	ldi	r31, 0x00	; 0
    1140:	80 81       	ld	r24, Z
    1142:	89 83       	std	Y+1, r24	; 0x01
		
		default: break;
		
	}
	return L_u8Value;
    1144:	89 81       	ldd	r24, Y+1	; 0x01
}
    1146:	0f 90       	pop	r0
    1148:	0f 90       	pop	r0
    114a:	0f 90       	pop	r0
    114c:	0f 90       	pop	r0
    114e:	cf 91       	pop	r28
    1150:	df 91       	pop	r29
    1152:	08 95       	ret

00001154 <MDIO_voidSetPinDirection>:

void MDIO_voidSetPinDirection(u8 ARG_u8Port,u8 ARG_u8Pin,u8 ARG_u8Directoin)
{
    1154:	df 93       	push	r29
    1156:	cf 93       	push	r28
    1158:	cd b7       	in	r28, 0x3d	; 61
    115a:	de b7       	in	r29, 0x3e	; 62
    115c:	29 97       	sbiw	r28, 0x09	; 9
    115e:	0f b6       	in	r0, 0x3f	; 63
    1160:	f8 94       	cli
    1162:	de bf       	out	0x3e, r29	; 62
    1164:	0f be       	out	0x3f, r0	; 63
    1166:	cd bf       	out	0x3d, r28	; 61
    1168:	89 83       	std	Y+1, r24	; 0x01
    116a:	6a 83       	std	Y+2, r22	; 0x02
    116c:	4b 83       	std	Y+3, r20	; 0x03
	if(ARG_u8Pin<=7)
    116e:	8a 81       	ldd	r24, Y+2	; 0x02
    1170:	88 30       	cpi	r24, 0x08	; 8
    1172:	08 f0       	brcs	.+2      	; 0x1176 <MDIO_voidSetPinDirection+0x22>
    1174:	cc c1       	rjmp	.+920    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
	{
		if(MDIO_OUTPUT==ARG_u8Directoin)
    1176:	8b 81       	ldd	r24, Y+3	; 0x03
    1178:	8a 35       	cpi	r24, 0x5A	; 90
    117a:	09 f0       	breq	.+2      	; 0x117e <MDIO_voidSetPinDirection+0x2a>
    117c:	79 c0       	rjmp	.+242    	; 0x1270 <MDIO_voidSetPinDirection+0x11c>
		{
			switch(ARG_u8Port)
    117e:	89 81       	ldd	r24, Y+1	; 0x01
    1180:	28 2f       	mov	r18, r24
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	39 87       	std	Y+9, r19	; 0x09
    1186:	28 87       	std	Y+8, r18	; 0x08
    1188:	88 85       	ldd	r24, Y+8	; 0x08
    118a:	99 85       	ldd	r25, Y+9	; 0x09
    118c:	8c 30       	cpi	r24, 0x0C	; 12
    118e:	91 05       	cpc	r25, r1
    1190:	b9 f0       	breq	.+46     	; 0x11c0 <MDIO_voidSetPinDirection+0x6c>
    1192:	28 85       	ldd	r18, Y+8	; 0x08
    1194:	39 85       	ldd	r19, Y+9	; 0x09
    1196:	2d 30       	cpi	r18, 0x0D	; 13
    1198:	31 05       	cpc	r19, r1
    119a:	3c f4       	brge	.+14     	; 0x11aa <MDIO_voidSetPinDirection+0x56>
    119c:	88 85       	ldd	r24, Y+8	; 0x08
    119e:	99 85       	ldd	r25, Y+9	; 0x09
    11a0:	85 30       	cpi	r24, 0x05	; 5
    11a2:	91 05       	cpc	r25, r1
    11a4:	09 f4       	brne	.+2      	; 0x11a8 <MDIO_voidSetPinDirection+0x54>
    11a6:	4e c0       	rjmp	.+156    	; 0x1244 <MDIO_voidSetPinDirection+0xf0>
    11a8:	b2 c1       	rjmp	.+868    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
    11aa:	28 85       	ldd	r18, Y+8	; 0x08
    11ac:	39 85       	ldd	r19, Y+9	; 0x09
    11ae:	21 32       	cpi	r18, 0x21	; 33
    11b0:	31 05       	cpc	r19, r1
    11b2:	e1 f0       	breq	.+56     	; 0x11ec <MDIO_voidSetPinDirection+0x98>
    11b4:	88 85       	ldd	r24, Y+8	; 0x08
    11b6:	99 85       	ldd	r25, Y+9	; 0x09
    11b8:	88 32       	cpi	r24, 0x28	; 40
    11ba:	91 05       	cpc	r25, r1
    11bc:	69 f1       	breq	.+90     	; 0x1218 <MDIO_voidSetPinDirection+0xc4>
    11be:	a7 c1       	rjmp	.+846    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
			{
				case MDIO_PORTA: SET_BIT(GPIOA -> DDR, ARG_u8Pin); break;
    11c0:	a9 e3       	ldi	r26, 0x39	; 57
    11c2:	b0 e0       	ldi	r27, 0x00	; 0
    11c4:	e9 e3       	ldi	r30, 0x39	; 57
    11c6:	f0 e0       	ldi	r31, 0x00	; 0
    11c8:	81 81       	ldd	r24, Z+1	; 0x01
    11ca:	48 2f       	mov	r20, r24
    11cc:	8a 81       	ldd	r24, Y+2	; 0x02
    11ce:	28 2f       	mov	r18, r24
    11d0:	30 e0       	ldi	r19, 0x00	; 0
    11d2:	81 e0       	ldi	r24, 0x01	; 1
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	02 2e       	mov	r0, r18
    11d8:	02 c0       	rjmp	.+4      	; 0x11de <MDIO_voidSetPinDirection+0x8a>
    11da:	88 0f       	add	r24, r24
    11dc:	99 1f       	adc	r25, r25
    11de:	0a 94       	dec	r0
    11e0:	e2 f7       	brpl	.-8      	; 0x11da <MDIO_voidSetPinDirection+0x86>
    11e2:	84 2b       	or	r24, r20
    11e4:	11 96       	adiw	r26, 0x01	; 1
    11e6:	8c 93       	st	X, r24
    11e8:	11 97       	sbiw	r26, 0x01	; 1
    11ea:	91 c1       	rjmp	.+802    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTB: SET_BIT(GPIOB -> DDR, ARG_u8Pin); break;
    11ec:	a6 e3       	ldi	r26, 0x36	; 54
    11ee:	b0 e0       	ldi	r27, 0x00	; 0
    11f0:	e6 e3       	ldi	r30, 0x36	; 54
    11f2:	f0 e0       	ldi	r31, 0x00	; 0
    11f4:	81 81       	ldd	r24, Z+1	; 0x01
    11f6:	48 2f       	mov	r20, r24
    11f8:	8a 81       	ldd	r24, Y+2	; 0x02
    11fa:	28 2f       	mov	r18, r24
    11fc:	30 e0       	ldi	r19, 0x00	; 0
    11fe:	81 e0       	ldi	r24, 0x01	; 1
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	02 2e       	mov	r0, r18
    1204:	02 c0       	rjmp	.+4      	; 0x120a <MDIO_voidSetPinDirection+0xb6>
    1206:	88 0f       	add	r24, r24
    1208:	99 1f       	adc	r25, r25
    120a:	0a 94       	dec	r0
    120c:	e2 f7       	brpl	.-8      	; 0x1206 <MDIO_voidSetPinDirection+0xb2>
    120e:	84 2b       	or	r24, r20
    1210:	11 96       	adiw	r26, 0x01	; 1
    1212:	8c 93       	st	X, r24
    1214:	11 97       	sbiw	r26, 0x01	; 1
    1216:	7b c1       	rjmp	.+758    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTC: SET_BIT(GPIOC -> DDR, ARG_u8Pin); break;
    1218:	a3 e3       	ldi	r26, 0x33	; 51
    121a:	b0 e0       	ldi	r27, 0x00	; 0
    121c:	e3 e3       	ldi	r30, 0x33	; 51
    121e:	f0 e0       	ldi	r31, 0x00	; 0
    1220:	81 81       	ldd	r24, Z+1	; 0x01
    1222:	48 2f       	mov	r20, r24
    1224:	8a 81       	ldd	r24, Y+2	; 0x02
    1226:	28 2f       	mov	r18, r24
    1228:	30 e0       	ldi	r19, 0x00	; 0
    122a:	81 e0       	ldi	r24, 0x01	; 1
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	02 2e       	mov	r0, r18
    1230:	02 c0       	rjmp	.+4      	; 0x1236 <MDIO_voidSetPinDirection+0xe2>
    1232:	88 0f       	add	r24, r24
    1234:	99 1f       	adc	r25, r25
    1236:	0a 94       	dec	r0
    1238:	e2 f7       	brpl	.-8      	; 0x1232 <MDIO_voidSetPinDirection+0xde>
    123a:	84 2b       	or	r24, r20
    123c:	11 96       	adiw	r26, 0x01	; 1
    123e:	8c 93       	st	X, r24
    1240:	11 97       	sbiw	r26, 0x01	; 1
    1242:	65 c1       	rjmp	.+714    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTD: SET_BIT(GPIOD -> DDR, ARG_u8Pin); break;
    1244:	a0 e3       	ldi	r26, 0x30	; 48
    1246:	b0 e0       	ldi	r27, 0x00	; 0
    1248:	e0 e3       	ldi	r30, 0x30	; 48
    124a:	f0 e0       	ldi	r31, 0x00	; 0
    124c:	81 81       	ldd	r24, Z+1	; 0x01
    124e:	48 2f       	mov	r20, r24
    1250:	8a 81       	ldd	r24, Y+2	; 0x02
    1252:	28 2f       	mov	r18, r24
    1254:	30 e0       	ldi	r19, 0x00	; 0
    1256:	81 e0       	ldi	r24, 0x01	; 1
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	02 2e       	mov	r0, r18
    125c:	02 c0       	rjmp	.+4      	; 0x1262 <MDIO_voidSetPinDirection+0x10e>
    125e:	88 0f       	add	r24, r24
    1260:	99 1f       	adc	r25, r25
    1262:	0a 94       	dec	r0
    1264:	e2 f7       	brpl	.-8      	; 0x125e <MDIO_voidSetPinDirection+0x10a>
    1266:	84 2b       	or	r24, r20
    1268:	11 96       	adiw	r26, 0x01	; 1
    126a:	8c 93       	st	X, r24
    126c:	11 97       	sbiw	r26, 0x01	; 1
    126e:	4f c1       	rjmp	.+670    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
				default: break;/*report error*/
			}			
		}
		else if(MDIO_INPUT==ARG_u8Directoin)
    1270:	8b 81       	ldd	r24, Y+3	; 0x03
    1272:	84 36       	cpi	r24, 0x64	; 100
    1274:	09 f0       	breq	.+2      	; 0x1278 <MDIO_voidSetPinDirection+0x124>
    1276:	7e c0       	rjmp	.+252    	; 0x1374 <MDIO_voidSetPinDirection+0x220>
		{
			switch(ARG_u8Port)
    1278:	89 81       	ldd	r24, Y+1	; 0x01
    127a:	28 2f       	mov	r18, r24
    127c:	30 e0       	ldi	r19, 0x00	; 0
    127e:	3f 83       	std	Y+7, r19	; 0x07
    1280:	2e 83       	std	Y+6, r18	; 0x06
    1282:	8e 81       	ldd	r24, Y+6	; 0x06
    1284:	9f 81       	ldd	r25, Y+7	; 0x07
    1286:	8c 30       	cpi	r24, 0x0C	; 12
    1288:	91 05       	cpc	r25, r1
    128a:	09 f4       	brne	.+2      	; 0x128e <MDIO_voidSetPinDirection+0x13a>
    128c:	45 c0       	rjmp	.+138    	; 0x1318 <MDIO_voidSetPinDirection+0x1c4>
    128e:	2e 81       	ldd	r18, Y+6	; 0x06
    1290:	3f 81       	ldd	r19, Y+7	; 0x07
    1292:	2d 30       	cpi	r18, 0x0D	; 13
    1294:	31 05       	cpc	r19, r1
    1296:	3c f4       	brge	.+14     	; 0x12a6 <MDIO_voidSetPinDirection+0x152>
    1298:	8e 81       	ldd	r24, Y+6	; 0x06
    129a:	9f 81       	ldd	r25, Y+7	; 0x07
    129c:	85 30       	cpi	r24, 0x05	; 5
    129e:	91 05       	cpc	r25, r1
    12a0:	09 f4       	brne	.+2      	; 0x12a4 <MDIO_voidSetPinDirection+0x150>
    12a2:	51 c0       	rjmp	.+162    	; 0x1346 <MDIO_voidSetPinDirection+0x1f2>
    12a4:	34 c1       	rjmp	.+616    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
    12a6:	2e 81       	ldd	r18, Y+6	; 0x06
    12a8:	3f 81       	ldd	r19, Y+7	; 0x07
    12aa:	21 32       	cpi	r18, 0x21	; 33
    12ac:	31 05       	cpc	r19, r1
    12ae:	31 f0       	breq	.+12     	; 0x12bc <MDIO_voidSetPinDirection+0x168>
    12b0:	8e 81       	ldd	r24, Y+6	; 0x06
    12b2:	9f 81       	ldd	r25, Y+7	; 0x07
    12b4:	88 32       	cpi	r24, 0x28	; 40
    12b6:	91 05       	cpc	r25, r1
    12b8:	c1 f0       	breq	.+48     	; 0x12ea <MDIO_voidSetPinDirection+0x196>
    12ba:	29 c1       	rjmp	.+594    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
			{
				case MDIO_PORTB: CLEAR_BIT(GPIOB -> DDR, ARG_u8Pin); break;
    12bc:	a6 e3       	ldi	r26, 0x36	; 54
    12be:	b0 e0       	ldi	r27, 0x00	; 0
    12c0:	e6 e3       	ldi	r30, 0x36	; 54
    12c2:	f0 e0       	ldi	r31, 0x00	; 0
    12c4:	81 81       	ldd	r24, Z+1	; 0x01
    12c6:	48 2f       	mov	r20, r24
    12c8:	8a 81       	ldd	r24, Y+2	; 0x02
    12ca:	28 2f       	mov	r18, r24
    12cc:	30 e0       	ldi	r19, 0x00	; 0
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	90 e0       	ldi	r25, 0x00	; 0
    12d2:	02 2e       	mov	r0, r18
    12d4:	02 c0       	rjmp	.+4      	; 0x12da <MDIO_voidSetPinDirection+0x186>
    12d6:	88 0f       	add	r24, r24
    12d8:	99 1f       	adc	r25, r25
    12da:	0a 94       	dec	r0
    12dc:	e2 f7       	brpl	.-8      	; 0x12d6 <MDIO_voidSetPinDirection+0x182>
    12de:	80 95       	com	r24
    12e0:	84 23       	and	r24, r20
    12e2:	11 96       	adiw	r26, 0x01	; 1
    12e4:	8c 93       	st	X, r24
    12e6:	11 97       	sbiw	r26, 0x01	; 1
    12e8:	12 c1       	rjmp	.+548    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTC: CLEAR_BIT(GPIOC -> DDR, ARG_u8Pin); break;
    12ea:	a3 e3       	ldi	r26, 0x33	; 51
    12ec:	b0 e0       	ldi	r27, 0x00	; 0
    12ee:	e3 e3       	ldi	r30, 0x33	; 51
    12f0:	f0 e0       	ldi	r31, 0x00	; 0
    12f2:	81 81       	ldd	r24, Z+1	; 0x01
    12f4:	48 2f       	mov	r20, r24
    12f6:	8a 81       	ldd	r24, Y+2	; 0x02
    12f8:	28 2f       	mov	r18, r24
    12fa:	30 e0       	ldi	r19, 0x00	; 0
    12fc:	81 e0       	ldi	r24, 0x01	; 1
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	02 2e       	mov	r0, r18
    1302:	02 c0       	rjmp	.+4      	; 0x1308 <MDIO_voidSetPinDirection+0x1b4>
    1304:	88 0f       	add	r24, r24
    1306:	99 1f       	adc	r25, r25
    1308:	0a 94       	dec	r0
    130a:	e2 f7       	brpl	.-8      	; 0x1304 <MDIO_voidSetPinDirection+0x1b0>
    130c:	80 95       	com	r24
    130e:	84 23       	and	r24, r20
    1310:	11 96       	adiw	r26, 0x01	; 1
    1312:	8c 93       	st	X, r24
    1314:	11 97       	sbiw	r26, 0x01	; 1
    1316:	fb c0       	rjmp	.+502    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTA: CLEAR_BIT(GPIOA -> DDR, ARG_u8Pin); break;
    1318:	a9 e3       	ldi	r26, 0x39	; 57
    131a:	b0 e0       	ldi	r27, 0x00	; 0
    131c:	e9 e3       	ldi	r30, 0x39	; 57
    131e:	f0 e0       	ldi	r31, 0x00	; 0
    1320:	81 81       	ldd	r24, Z+1	; 0x01
    1322:	48 2f       	mov	r20, r24
    1324:	8a 81       	ldd	r24, Y+2	; 0x02
    1326:	28 2f       	mov	r18, r24
    1328:	30 e0       	ldi	r19, 0x00	; 0
    132a:	81 e0       	ldi	r24, 0x01	; 1
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	02 2e       	mov	r0, r18
    1330:	02 c0       	rjmp	.+4      	; 0x1336 <MDIO_voidSetPinDirection+0x1e2>
    1332:	88 0f       	add	r24, r24
    1334:	99 1f       	adc	r25, r25
    1336:	0a 94       	dec	r0
    1338:	e2 f7       	brpl	.-8      	; 0x1332 <MDIO_voidSetPinDirection+0x1de>
    133a:	80 95       	com	r24
    133c:	84 23       	and	r24, r20
    133e:	11 96       	adiw	r26, 0x01	; 1
    1340:	8c 93       	st	X, r24
    1342:	11 97       	sbiw	r26, 0x01	; 1
    1344:	e4 c0       	rjmp	.+456    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTD: CLEAR_BIT(GPIOD -> DDR, ARG_u8Pin); break;
    1346:	a0 e3       	ldi	r26, 0x30	; 48
    1348:	b0 e0       	ldi	r27, 0x00	; 0
    134a:	e0 e3       	ldi	r30, 0x30	; 48
    134c:	f0 e0       	ldi	r31, 0x00	; 0
    134e:	81 81       	ldd	r24, Z+1	; 0x01
    1350:	48 2f       	mov	r20, r24
    1352:	8a 81       	ldd	r24, Y+2	; 0x02
    1354:	28 2f       	mov	r18, r24
    1356:	30 e0       	ldi	r19, 0x00	; 0
    1358:	81 e0       	ldi	r24, 0x01	; 1
    135a:	90 e0       	ldi	r25, 0x00	; 0
    135c:	02 2e       	mov	r0, r18
    135e:	02 c0       	rjmp	.+4      	; 0x1364 <MDIO_voidSetPinDirection+0x210>
    1360:	88 0f       	add	r24, r24
    1362:	99 1f       	adc	r25, r25
    1364:	0a 94       	dec	r0
    1366:	e2 f7       	brpl	.-8      	; 0x1360 <MDIO_voidSetPinDirection+0x20c>
    1368:	80 95       	com	r24
    136a:	84 23       	and	r24, r20
    136c:	11 96       	adiw	r26, 0x01	; 1
    136e:	8c 93       	st	X, r24
    1370:	11 97       	sbiw	r26, 0x01	; 1
    1372:	cd c0       	rjmp	.+410    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
				default: break;/*report error*/
			}			
		}
		else if(MDIO_INPUT_PULLUP==ARG_u8Directoin)
    1374:	8b 81       	ldd	r24, Y+3	; 0x03
    1376:	88 3c       	cpi	r24, 0xC8	; 200
    1378:	09 f0       	breq	.+2      	; 0x137c <MDIO_voidSetPinDirection+0x228>
    137a:	c9 c0       	rjmp	.+402    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
		{
			switch(ARG_u8Port)
    137c:	89 81       	ldd	r24, Y+1	; 0x01
    137e:	28 2f       	mov	r18, r24
    1380:	30 e0       	ldi	r19, 0x00	; 0
    1382:	3d 83       	std	Y+5, r19	; 0x05
    1384:	2c 83       	std	Y+4, r18	; 0x04
    1386:	8c 81       	ldd	r24, Y+4	; 0x04
    1388:	9d 81       	ldd	r25, Y+5	; 0x05
    138a:	8c 30       	cpi	r24, 0x0C	; 12
    138c:	91 05       	cpc	r25, r1
    138e:	09 f4       	brne	.+2      	; 0x1392 <MDIO_voidSetPinDirection+0x23e>
    1390:	6b c0       	rjmp	.+214    	; 0x1468 <MDIO_voidSetPinDirection+0x314>
    1392:	2c 81       	ldd	r18, Y+4	; 0x04
    1394:	3d 81       	ldd	r19, Y+5	; 0x05
    1396:	2d 30       	cpi	r18, 0x0D	; 13
    1398:	31 05       	cpc	r19, r1
    139a:	3c f4       	brge	.+14     	; 0x13aa <MDIO_voidSetPinDirection+0x256>
    139c:	8c 81       	ldd	r24, Y+4	; 0x04
    139e:	9d 81       	ldd	r25, Y+5	; 0x05
    13a0:	85 30       	cpi	r24, 0x05	; 5
    13a2:	91 05       	cpc	r25, r1
    13a4:	09 f4       	brne	.+2      	; 0x13a8 <MDIO_voidSetPinDirection+0x254>
    13a6:	8a c0       	rjmp	.+276    	; 0x14bc <MDIO_voidSetPinDirection+0x368>
    13a8:	b2 c0       	rjmp	.+356    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
    13aa:	2c 81       	ldd	r18, Y+4	; 0x04
    13ac:	3d 81       	ldd	r19, Y+5	; 0x05
    13ae:	21 32       	cpi	r18, 0x21	; 33
    13b0:	31 05       	cpc	r19, r1
    13b2:	31 f0       	breq	.+12     	; 0x13c0 <MDIO_voidSetPinDirection+0x26c>
    13b4:	8c 81       	ldd	r24, Y+4	; 0x04
    13b6:	9d 81       	ldd	r25, Y+5	; 0x05
    13b8:	88 32       	cpi	r24, 0x28	; 40
    13ba:	91 05       	cpc	r25, r1
    13bc:	59 f1       	breq	.+86     	; 0x1414 <MDIO_voidSetPinDirection+0x2c0>
    13be:	a7 c0       	rjmp	.+334    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
			{
				case MDIO_PORTB: CLEAR_BIT(GPIOB -> DDR, ARG_u8Pin); SET_BIT(GPIOA -> PORT, ARG_u8Pin); break;
    13c0:	a6 e3       	ldi	r26, 0x36	; 54
    13c2:	b0 e0       	ldi	r27, 0x00	; 0
    13c4:	e6 e3       	ldi	r30, 0x36	; 54
    13c6:	f0 e0       	ldi	r31, 0x00	; 0
    13c8:	81 81       	ldd	r24, Z+1	; 0x01
    13ca:	48 2f       	mov	r20, r24
    13cc:	8a 81       	ldd	r24, Y+2	; 0x02
    13ce:	28 2f       	mov	r18, r24
    13d0:	30 e0       	ldi	r19, 0x00	; 0
    13d2:	81 e0       	ldi	r24, 0x01	; 1
    13d4:	90 e0       	ldi	r25, 0x00	; 0
    13d6:	02 c0       	rjmp	.+4      	; 0x13dc <MDIO_voidSetPinDirection+0x288>
    13d8:	88 0f       	add	r24, r24
    13da:	99 1f       	adc	r25, r25
    13dc:	2a 95       	dec	r18
    13de:	e2 f7       	brpl	.-8      	; 0x13d8 <MDIO_voidSetPinDirection+0x284>
    13e0:	80 95       	com	r24
    13e2:	84 23       	and	r24, r20
    13e4:	11 96       	adiw	r26, 0x01	; 1
    13e6:	8c 93       	st	X, r24
    13e8:	a9 e3       	ldi	r26, 0x39	; 57
    13ea:	b0 e0       	ldi	r27, 0x00	; 0
    13ec:	e9 e3       	ldi	r30, 0x39	; 57
    13ee:	f0 e0       	ldi	r31, 0x00	; 0
    13f0:	82 81       	ldd	r24, Z+2	; 0x02
    13f2:	48 2f       	mov	r20, r24
    13f4:	8a 81       	ldd	r24, Y+2	; 0x02
    13f6:	28 2f       	mov	r18, r24
    13f8:	30 e0       	ldi	r19, 0x00	; 0
    13fa:	81 e0       	ldi	r24, 0x01	; 1
    13fc:	90 e0       	ldi	r25, 0x00	; 0
    13fe:	02 2e       	mov	r0, r18
    1400:	02 c0       	rjmp	.+4      	; 0x1406 <MDIO_voidSetPinDirection+0x2b2>
    1402:	88 0f       	add	r24, r24
    1404:	99 1f       	adc	r25, r25
    1406:	0a 94       	dec	r0
    1408:	e2 f7       	brpl	.-8      	; 0x1402 <MDIO_voidSetPinDirection+0x2ae>
    140a:	84 2b       	or	r24, r20
    140c:	12 96       	adiw	r26, 0x02	; 2
    140e:	8c 93       	st	X, r24
    1410:	12 97       	sbiw	r26, 0x02	; 2
    1412:	7d c0       	rjmp	.+250    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTC: CLEAR_BIT(GPIOC -> DDR, ARG_u8Pin); SET_BIT(GPIOB -> PORT, ARG_u8Pin); break;
    1414:	a3 e3       	ldi	r26, 0x33	; 51
    1416:	b0 e0       	ldi	r27, 0x00	; 0
    1418:	e3 e3       	ldi	r30, 0x33	; 51
    141a:	f0 e0       	ldi	r31, 0x00	; 0
    141c:	81 81       	ldd	r24, Z+1	; 0x01
    141e:	48 2f       	mov	r20, r24
    1420:	8a 81       	ldd	r24, Y+2	; 0x02
    1422:	28 2f       	mov	r18, r24
    1424:	30 e0       	ldi	r19, 0x00	; 0
    1426:	81 e0       	ldi	r24, 0x01	; 1
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	02 c0       	rjmp	.+4      	; 0x1430 <MDIO_voidSetPinDirection+0x2dc>
    142c:	88 0f       	add	r24, r24
    142e:	99 1f       	adc	r25, r25
    1430:	2a 95       	dec	r18
    1432:	e2 f7       	brpl	.-8      	; 0x142c <MDIO_voidSetPinDirection+0x2d8>
    1434:	80 95       	com	r24
    1436:	84 23       	and	r24, r20
    1438:	11 96       	adiw	r26, 0x01	; 1
    143a:	8c 93       	st	X, r24
    143c:	a6 e3       	ldi	r26, 0x36	; 54
    143e:	b0 e0       	ldi	r27, 0x00	; 0
    1440:	e6 e3       	ldi	r30, 0x36	; 54
    1442:	f0 e0       	ldi	r31, 0x00	; 0
    1444:	82 81       	ldd	r24, Z+2	; 0x02
    1446:	48 2f       	mov	r20, r24
    1448:	8a 81       	ldd	r24, Y+2	; 0x02
    144a:	28 2f       	mov	r18, r24
    144c:	30 e0       	ldi	r19, 0x00	; 0
    144e:	81 e0       	ldi	r24, 0x01	; 1
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	02 2e       	mov	r0, r18
    1454:	02 c0       	rjmp	.+4      	; 0x145a <MDIO_voidSetPinDirection+0x306>
    1456:	88 0f       	add	r24, r24
    1458:	99 1f       	adc	r25, r25
    145a:	0a 94       	dec	r0
    145c:	e2 f7       	brpl	.-8      	; 0x1456 <MDIO_voidSetPinDirection+0x302>
    145e:	84 2b       	or	r24, r20
    1460:	12 96       	adiw	r26, 0x02	; 2
    1462:	8c 93       	st	X, r24
    1464:	12 97       	sbiw	r26, 0x02	; 2
    1466:	53 c0       	rjmp	.+166    	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTA: CLEAR_BIT(GPIOA -> DDR, ARG_u8Pin); SET_BIT(GPIOC -> PORT, ARG_u8Pin); break;
    1468:	a9 e3       	ldi	r26, 0x39	; 57
    146a:	b0 e0       	ldi	r27, 0x00	; 0
    146c:	e9 e3       	ldi	r30, 0x39	; 57
    146e:	f0 e0       	ldi	r31, 0x00	; 0
    1470:	81 81       	ldd	r24, Z+1	; 0x01
    1472:	48 2f       	mov	r20, r24
    1474:	8a 81       	ldd	r24, Y+2	; 0x02
    1476:	28 2f       	mov	r18, r24
    1478:	30 e0       	ldi	r19, 0x00	; 0
    147a:	81 e0       	ldi	r24, 0x01	; 1
    147c:	90 e0       	ldi	r25, 0x00	; 0
    147e:	02 c0       	rjmp	.+4      	; 0x1484 <MDIO_voidSetPinDirection+0x330>
    1480:	88 0f       	add	r24, r24
    1482:	99 1f       	adc	r25, r25
    1484:	2a 95       	dec	r18
    1486:	e2 f7       	brpl	.-8      	; 0x1480 <MDIO_voidSetPinDirection+0x32c>
    1488:	80 95       	com	r24
    148a:	84 23       	and	r24, r20
    148c:	11 96       	adiw	r26, 0x01	; 1
    148e:	8c 93       	st	X, r24
    1490:	a3 e3       	ldi	r26, 0x33	; 51
    1492:	b0 e0       	ldi	r27, 0x00	; 0
    1494:	e3 e3       	ldi	r30, 0x33	; 51
    1496:	f0 e0       	ldi	r31, 0x00	; 0
    1498:	82 81       	ldd	r24, Z+2	; 0x02
    149a:	48 2f       	mov	r20, r24
    149c:	8a 81       	ldd	r24, Y+2	; 0x02
    149e:	28 2f       	mov	r18, r24
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	81 e0       	ldi	r24, 0x01	; 1
    14a4:	90 e0       	ldi	r25, 0x00	; 0
    14a6:	02 2e       	mov	r0, r18
    14a8:	02 c0       	rjmp	.+4      	; 0x14ae <MDIO_voidSetPinDirection+0x35a>
    14aa:	88 0f       	add	r24, r24
    14ac:	99 1f       	adc	r25, r25
    14ae:	0a 94       	dec	r0
    14b0:	e2 f7       	brpl	.-8      	; 0x14aa <MDIO_voidSetPinDirection+0x356>
    14b2:	84 2b       	or	r24, r20
    14b4:	12 96       	adiw	r26, 0x02	; 2
    14b6:	8c 93       	st	X, r24
    14b8:	12 97       	sbiw	r26, 0x02	; 2
    14ba:	29 c0       	rjmp	.+82     	; 0x150e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTD: CLEAR_BIT(GPIOD -> DDR, ARG_u8Pin); SET_BIT(GPIOD -> PORT, ARG_u8Pin); break;
    14bc:	a0 e3       	ldi	r26, 0x30	; 48
    14be:	b0 e0       	ldi	r27, 0x00	; 0
    14c0:	e0 e3       	ldi	r30, 0x30	; 48
    14c2:	f0 e0       	ldi	r31, 0x00	; 0
    14c4:	81 81       	ldd	r24, Z+1	; 0x01
    14c6:	48 2f       	mov	r20, r24
    14c8:	8a 81       	ldd	r24, Y+2	; 0x02
    14ca:	28 2f       	mov	r18, r24
    14cc:	30 e0       	ldi	r19, 0x00	; 0
    14ce:	81 e0       	ldi	r24, 0x01	; 1
    14d0:	90 e0       	ldi	r25, 0x00	; 0
    14d2:	02 c0       	rjmp	.+4      	; 0x14d8 <MDIO_voidSetPinDirection+0x384>
    14d4:	88 0f       	add	r24, r24
    14d6:	99 1f       	adc	r25, r25
    14d8:	2a 95       	dec	r18
    14da:	e2 f7       	brpl	.-8      	; 0x14d4 <MDIO_voidSetPinDirection+0x380>
    14dc:	80 95       	com	r24
    14de:	84 23       	and	r24, r20
    14e0:	11 96       	adiw	r26, 0x01	; 1
    14e2:	8c 93       	st	X, r24
    14e4:	a0 e3       	ldi	r26, 0x30	; 48
    14e6:	b0 e0       	ldi	r27, 0x00	; 0
    14e8:	e0 e3       	ldi	r30, 0x30	; 48
    14ea:	f0 e0       	ldi	r31, 0x00	; 0
    14ec:	82 81       	ldd	r24, Z+2	; 0x02
    14ee:	48 2f       	mov	r20, r24
    14f0:	8a 81       	ldd	r24, Y+2	; 0x02
    14f2:	28 2f       	mov	r18, r24
    14f4:	30 e0       	ldi	r19, 0x00	; 0
    14f6:	81 e0       	ldi	r24, 0x01	; 1
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	02 2e       	mov	r0, r18
    14fc:	02 c0       	rjmp	.+4      	; 0x1502 <MDIO_voidSetPinDirection+0x3ae>
    14fe:	88 0f       	add	r24, r24
    1500:	99 1f       	adc	r25, r25
    1502:	0a 94       	dec	r0
    1504:	e2 f7       	brpl	.-8      	; 0x14fe <MDIO_voidSetPinDirection+0x3aa>
    1506:	84 2b       	or	r24, r20
    1508:	12 96       	adiw	r26, 0x02	; 2
    150a:	8c 93       	st	X, r24
    150c:	12 97       	sbiw	r26, 0x02	; 2
	else
	{
		/*report on error*/
	}
	
}
    150e:	29 96       	adiw	r28, 0x09	; 9
    1510:	0f b6       	in	r0, 0x3f	; 63
    1512:	f8 94       	cli
    1514:	de bf       	out	0x3e, r29	; 62
    1516:	0f be       	out	0x3f, r0	; 63
    1518:	cd bf       	out	0x3d, r28	; 61
    151a:	cf 91       	pop	r28
    151c:	df 91       	pop	r29
    151e:	08 95       	ret

00001520 <MDIO_voidSetPinValue>:
void MDIO_voidSetPinValue(u8 ARG_u8Port,u8 ARG_u8Pin,u8 ARG_u8Value)
{
    1520:	df 93       	push	r29
    1522:	cf 93       	push	r28
    1524:	cd b7       	in	r28, 0x3d	; 61
    1526:	de b7       	in	r29, 0x3e	; 62
    1528:	29 97       	sbiw	r28, 0x09	; 9
    152a:	0f b6       	in	r0, 0x3f	; 63
    152c:	f8 94       	cli
    152e:	de bf       	out	0x3e, r29	; 62
    1530:	0f be       	out	0x3f, r0	; 63
    1532:	cd bf       	out	0x3d, r28	; 61
    1534:	89 83       	std	Y+1, r24	; 0x01
    1536:	6a 83       	std	Y+2, r22	; 0x02
    1538:	4b 83       	std	Y+3, r20	; 0x03
	if(ARG_u8Pin<=7)
    153a:	8a 81       	ldd	r24, Y+2	; 0x02
    153c:	88 30       	cpi	r24, 0x08	; 8
    153e:	08 f0       	brcs	.+2      	; 0x1542 <MDIO_voidSetPinValue+0x22>
    1540:	7c c1       	rjmp	.+760    	; 0x183a <MDIO_voidSetPinValue+0x31a>
	{
		if(MDIO_HIGH== ARG_u8Value)
    1542:	8b 81       	ldd	r24, Y+3	; 0x03
    1544:	81 30       	cpi	r24, 0x01	; 1
    1546:	09 f0       	breq	.+2      	; 0x154a <MDIO_voidSetPinValue+0x2a>
    1548:	79 c0       	rjmp	.+242    	; 0x163c <MDIO_voidSetPinValue+0x11c>
		{
			switch(ARG_u8Port)
    154a:	89 81       	ldd	r24, Y+1	; 0x01
    154c:	28 2f       	mov	r18, r24
    154e:	30 e0       	ldi	r19, 0x00	; 0
    1550:	39 87       	std	Y+9, r19	; 0x09
    1552:	28 87       	std	Y+8, r18	; 0x08
    1554:	88 85       	ldd	r24, Y+8	; 0x08
    1556:	99 85       	ldd	r25, Y+9	; 0x09
    1558:	8c 30       	cpi	r24, 0x0C	; 12
    155a:	91 05       	cpc	r25, r1
    155c:	b9 f0       	breq	.+46     	; 0x158c <MDIO_voidSetPinValue+0x6c>
    155e:	28 85       	ldd	r18, Y+8	; 0x08
    1560:	39 85       	ldd	r19, Y+9	; 0x09
    1562:	2d 30       	cpi	r18, 0x0D	; 13
    1564:	31 05       	cpc	r19, r1
    1566:	3c f4       	brge	.+14     	; 0x1576 <MDIO_voidSetPinValue+0x56>
    1568:	88 85       	ldd	r24, Y+8	; 0x08
    156a:	99 85       	ldd	r25, Y+9	; 0x09
    156c:	85 30       	cpi	r24, 0x05	; 5
    156e:	91 05       	cpc	r25, r1
    1570:	09 f4       	brne	.+2      	; 0x1574 <MDIO_voidSetPinValue+0x54>
    1572:	4e c0       	rjmp	.+156    	; 0x1610 <MDIO_voidSetPinValue+0xf0>
    1574:	62 c1       	rjmp	.+708    	; 0x183a <MDIO_voidSetPinValue+0x31a>
    1576:	28 85       	ldd	r18, Y+8	; 0x08
    1578:	39 85       	ldd	r19, Y+9	; 0x09
    157a:	21 32       	cpi	r18, 0x21	; 33
    157c:	31 05       	cpc	r19, r1
    157e:	e1 f0       	breq	.+56     	; 0x15b8 <MDIO_voidSetPinValue+0x98>
    1580:	88 85       	ldd	r24, Y+8	; 0x08
    1582:	99 85       	ldd	r25, Y+9	; 0x09
    1584:	88 32       	cpi	r24, 0x28	; 40
    1586:	91 05       	cpc	r25, r1
    1588:	69 f1       	breq	.+90     	; 0x15e4 <MDIO_voidSetPinValue+0xc4>
    158a:	57 c1       	rjmp	.+686    	; 0x183a <MDIO_voidSetPinValue+0x31a>
			{
				case MDIO_PORTA: SET_BIT(GPIOA -> PORT, ARG_u8Pin); break;
    158c:	a9 e3       	ldi	r26, 0x39	; 57
    158e:	b0 e0       	ldi	r27, 0x00	; 0
    1590:	e9 e3       	ldi	r30, 0x39	; 57
    1592:	f0 e0       	ldi	r31, 0x00	; 0
    1594:	82 81       	ldd	r24, Z+2	; 0x02
    1596:	48 2f       	mov	r20, r24
    1598:	8a 81       	ldd	r24, Y+2	; 0x02
    159a:	28 2f       	mov	r18, r24
    159c:	30 e0       	ldi	r19, 0x00	; 0
    159e:	81 e0       	ldi	r24, 0x01	; 1
    15a0:	90 e0       	ldi	r25, 0x00	; 0
    15a2:	02 2e       	mov	r0, r18
    15a4:	02 c0       	rjmp	.+4      	; 0x15aa <MDIO_voidSetPinValue+0x8a>
    15a6:	88 0f       	add	r24, r24
    15a8:	99 1f       	adc	r25, r25
    15aa:	0a 94       	dec	r0
    15ac:	e2 f7       	brpl	.-8      	; 0x15a6 <MDIO_voidSetPinValue+0x86>
    15ae:	84 2b       	or	r24, r20
    15b0:	12 96       	adiw	r26, 0x02	; 2
    15b2:	8c 93       	st	X, r24
    15b4:	12 97       	sbiw	r26, 0x02	; 2
    15b6:	41 c1       	rjmp	.+642    	; 0x183a <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTB: SET_BIT(GPIOB -> PORT, ARG_u8Pin); break;
    15b8:	a6 e3       	ldi	r26, 0x36	; 54
    15ba:	b0 e0       	ldi	r27, 0x00	; 0
    15bc:	e6 e3       	ldi	r30, 0x36	; 54
    15be:	f0 e0       	ldi	r31, 0x00	; 0
    15c0:	82 81       	ldd	r24, Z+2	; 0x02
    15c2:	48 2f       	mov	r20, r24
    15c4:	8a 81       	ldd	r24, Y+2	; 0x02
    15c6:	28 2f       	mov	r18, r24
    15c8:	30 e0       	ldi	r19, 0x00	; 0
    15ca:	81 e0       	ldi	r24, 0x01	; 1
    15cc:	90 e0       	ldi	r25, 0x00	; 0
    15ce:	02 2e       	mov	r0, r18
    15d0:	02 c0       	rjmp	.+4      	; 0x15d6 <MDIO_voidSetPinValue+0xb6>
    15d2:	88 0f       	add	r24, r24
    15d4:	99 1f       	adc	r25, r25
    15d6:	0a 94       	dec	r0
    15d8:	e2 f7       	brpl	.-8      	; 0x15d2 <MDIO_voidSetPinValue+0xb2>
    15da:	84 2b       	or	r24, r20
    15dc:	12 96       	adiw	r26, 0x02	; 2
    15de:	8c 93       	st	X, r24
    15e0:	12 97       	sbiw	r26, 0x02	; 2
    15e2:	2b c1       	rjmp	.+598    	; 0x183a <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTC: SET_BIT(GPIOC -> PORT, ARG_u8Pin); break;
    15e4:	a3 e3       	ldi	r26, 0x33	; 51
    15e6:	b0 e0       	ldi	r27, 0x00	; 0
    15e8:	e3 e3       	ldi	r30, 0x33	; 51
    15ea:	f0 e0       	ldi	r31, 0x00	; 0
    15ec:	82 81       	ldd	r24, Z+2	; 0x02
    15ee:	48 2f       	mov	r20, r24
    15f0:	8a 81       	ldd	r24, Y+2	; 0x02
    15f2:	28 2f       	mov	r18, r24
    15f4:	30 e0       	ldi	r19, 0x00	; 0
    15f6:	81 e0       	ldi	r24, 0x01	; 1
    15f8:	90 e0       	ldi	r25, 0x00	; 0
    15fa:	02 2e       	mov	r0, r18
    15fc:	02 c0       	rjmp	.+4      	; 0x1602 <MDIO_voidSetPinValue+0xe2>
    15fe:	88 0f       	add	r24, r24
    1600:	99 1f       	adc	r25, r25
    1602:	0a 94       	dec	r0
    1604:	e2 f7       	brpl	.-8      	; 0x15fe <MDIO_voidSetPinValue+0xde>
    1606:	84 2b       	or	r24, r20
    1608:	12 96       	adiw	r26, 0x02	; 2
    160a:	8c 93       	st	X, r24
    160c:	12 97       	sbiw	r26, 0x02	; 2
    160e:	15 c1       	rjmp	.+554    	; 0x183a <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTD: SET_BIT(GPIOD -> PORT, ARG_u8Pin); break;
    1610:	a0 e3       	ldi	r26, 0x30	; 48
    1612:	b0 e0       	ldi	r27, 0x00	; 0
    1614:	e0 e3       	ldi	r30, 0x30	; 48
    1616:	f0 e0       	ldi	r31, 0x00	; 0
    1618:	82 81       	ldd	r24, Z+2	; 0x02
    161a:	48 2f       	mov	r20, r24
    161c:	8a 81       	ldd	r24, Y+2	; 0x02
    161e:	28 2f       	mov	r18, r24
    1620:	30 e0       	ldi	r19, 0x00	; 0
    1622:	81 e0       	ldi	r24, 0x01	; 1
    1624:	90 e0       	ldi	r25, 0x00	; 0
    1626:	02 2e       	mov	r0, r18
    1628:	02 c0       	rjmp	.+4      	; 0x162e <MDIO_voidSetPinValue+0x10e>
    162a:	88 0f       	add	r24, r24
    162c:	99 1f       	adc	r25, r25
    162e:	0a 94       	dec	r0
    1630:	e2 f7       	brpl	.-8      	; 0x162a <MDIO_voidSetPinValue+0x10a>
    1632:	84 2b       	or	r24, r20
    1634:	12 96       	adiw	r26, 0x02	; 2
    1636:	8c 93       	st	X, r24
    1638:	12 97       	sbiw	r26, 0x02	; 2
    163a:	ff c0       	rjmp	.+510    	; 0x183a <MDIO_voidSetPinValue+0x31a>
				default: break;/*report error*/
			}			
		}
		else if(MDIO_LOW==ARG_u8Value)
    163c:	8b 81       	ldd	r24, Y+3	; 0x03
    163e:	88 23       	and	r24, r24
    1640:	09 f0       	breq	.+2      	; 0x1644 <MDIO_voidSetPinValue+0x124>
    1642:	7e c0       	rjmp	.+252    	; 0x1740 <MDIO_voidSetPinValue+0x220>
		{
			switch(ARG_u8Port)
    1644:	89 81       	ldd	r24, Y+1	; 0x01
    1646:	28 2f       	mov	r18, r24
    1648:	30 e0       	ldi	r19, 0x00	; 0
    164a:	3f 83       	std	Y+7, r19	; 0x07
    164c:	2e 83       	std	Y+6, r18	; 0x06
    164e:	8e 81       	ldd	r24, Y+6	; 0x06
    1650:	9f 81       	ldd	r25, Y+7	; 0x07
    1652:	8c 30       	cpi	r24, 0x0C	; 12
    1654:	91 05       	cpc	r25, r1
    1656:	09 f4       	brne	.+2      	; 0x165a <MDIO_voidSetPinValue+0x13a>
    1658:	45 c0       	rjmp	.+138    	; 0x16e4 <MDIO_voidSetPinValue+0x1c4>
    165a:	2e 81       	ldd	r18, Y+6	; 0x06
    165c:	3f 81       	ldd	r19, Y+7	; 0x07
    165e:	2d 30       	cpi	r18, 0x0D	; 13
    1660:	31 05       	cpc	r19, r1
    1662:	3c f4       	brge	.+14     	; 0x1672 <MDIO_voidSetPinValue+0x152>
    1664:	8e 81       	ldd	r24, Y+6	; 0x06
    1666:	9f 81       	ldd	r25, Y+7	; 0x07
    1668:	85 30       	cpi	r24, 0x05	; 5
    166a:	91 05       	cpc	r25, r1
    166c:	09 f4       	brne	.+2      	; 0x1670 <MDIO_voidSetPinValue+0x150>
    166e:	51 c0       	rjmp	.+162    	; 0x1712 <MDIO_voidSetPinValue+0x1f2>
    1670:	e4 c0       	rjmp	.+456    	; 0x183a <MDIO_voidSetPinValue+0x31a>
    1672:	2e 81       	ldd	r18, Y+6	; 0x06
    1674:	3f 81       	ldd	r19, Y+7	; 0x07
    1676:	21 32       	cpi	r18, 0x21	; 33
    1678:	31 05       	cpc	r19, r1
    167a:	31 f0       	breq	.+12     	; 0x1688 <MDIO_voidSetPinValue+0x168>
    167c:	8e 81       	ldd	r24, Y+6	; 0x06
    167e:	9f 81       	ldd	r25, Y+7	; 0x07
    1680:	88 32       	cpi	r24, 0x28	; 40
    1682:	91 05       	cpc	r25, r1
    1684:	c1 f0       	breq	.+48     	; 0x16b6 <MDIO_voidSetPinValue+0x196>
    1686:	d9 c0       	rjmp	.+434    	; 0x183a <MDIO_voidSetPinValue+0x31a>
			{
				case MDIO_PORTB: CLEAR_BIT(GPIOB -> PORT, ARG_u8Pin); break;
    1688:	a6 e3       	ldi	r26, 0x36	; 54
    168a:	b0 e0       	ldi	r27, 0x00	; 0
    168c:	e6 e3       	ldi	r30, 0x36	; 54
    168e:	f0 e0       	ldi	r31, 0x00	; 0
    1690:	82 81       	ldd	r24, Z+2	; 0x02
    1692:	48 2f       	mov	r20, r24
    1694:	8a 81       	ldd	r24, Y+2	; 0x02
    1696:	28 2f       	mov	r18, r24
    1698:	30 e0       	ldi	r19, 0x00	; 0
    169a:	81 e0       	ldi	r24, 0x01	; 1
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	02 2e       	mov	r0, r18
    16a0:	02 c0       	rjmp	.+4      	; 0x16a6 <MDIO_voidSetPinValue+0x186>
    16a2:	88 0f       	add	r24, r24
    16a4:	99 1f       	adc	r25, r25
    16a6:	0a 94       	dec	r0
    16a8:	e2 f7       	brpl	.-8      	; 0x16a2 <MDIO_voidSetPinValue+0x182>
    16aa:	80 95       	com	r24
    16ac:	84 23       	and	r24, r20
    16ae:	12 96       	adiw	r26, 0x02	; 2
    16b0:	8c 93       	st	X, r24
    16b2:	12 97       	sbiw	r26, 0x02	; 2
    16b4:	c2 c0       	rjmp	.+388    	; 0x183a <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTC: CLEAR_BIT(GPIOC -> PORT, ARG_u8Pin); break;
    16b6:	a3 e3       	ldi	r26, 0x33	; 51
    16b8:	b0 e0       	ldi	r27, 0x00	; 0
    16ba:	e3 e3       	ldi	r30, 0x33	; 51
    16bc:	f0 e0       	ldi	r31, 0x00	; 0
    16be:	82 81       	ldd	r24, Z+2	; 0x02
    16c0:	48 2f       	mov	r20, r24
    16c2:	8a 81       	ldd	r24, Y+2	; 0x02
    16c4:	28 2f       	mov	r18, r24
    16c6:	30 e0       	ldi	r19, 0x00	; 0
    16c8:	81 e0       	ldi	r24, 0x01	; 1
    16ca:	90 e0       	ldi	r25, 0x00	; 0
    16cc:	02 2e       	mov	r0, r18
    16ce:	02 c0       	rjmp	.+4      	; 0x16d4 <MDIO_voidSetPinValue+0x1b4>
    16d0:	88 0f       	add	r24, r24
    16d2:	99 1f       	adc	r25, r25
    16d4:	0a 94       	dec	r0
    16d6:	e2 f7       	brpl	.-8      	; 0x16d0 <MDIO_voidSetPinValue+0x1b0>
    16d8:	80 95       	com	r24
    16da:	84 23       	and	r24, r20
    16dc:	12 96       	adiw	r26, 0x02	; 2
    16de:	8c 93       	st	X, r24
    16e0:	12 97       	sbiw	r26, 0x02	; 2
    16e2:	ab c0       	rjmp	.+342    	; 0x183a <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTA: CLEAR_BIT(GPIOA -> PORT, ARG_u8Pin); break;
    16e4:	a9 e3       	ldi	r26, 0x39	; 57
    16e6:	b0 e0       	ldi	r27, 0x00	; 0
    16e8:	e9 e3       	ldi	r30, 0x39	; 57
    16ea:	f0 e0       	ldi	r31, 0x00	; 0
    16ec:	82 81       	ldd	r24, Z+2	; 0x02
    16ee:	48 2f       	mov	r20, r24
    16f0:	8a 81       	ldd	r24, Y+2	; 0x02
    16f2:	28 2f       	mov	r18, r24
    16f4:	30 e0       	ldi	r19, 0x00	; 0
    16f6:	81 e0       	ldi	r24, 0x01	; 1
    16f8:	90 e0       	ldi	r25, 0x00	; 0
    16fa:	02 2e       	mov	r0, r18
    16fc:	02 c0       	rjmp	.+4      	; 0x1702 <MDIO_voidSetPinValue+0x1e2>
    16fe:	88 0f       	add	r24, r24
    1700:	99 1f       	adc	r25, r25
    1702:	0a 94       	dec	r0
    1704:	e2 f7       	brpl	.-8      	; 0x16fe <MDIO_voidSetPinValue+0x1de>
    1706:	80 95       	com	r24
    1708:	84 23       	and	r24, r20
    170a:	12 96       	adiw	r26, 0x02	; 2
    170c:	8c 93       	st	X, r24
    170e:	12 97       	sbiw	r26, 0x02	; 2
    1710:	94 c0       	rjmp	.+296    	; 0x183a <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTD: CLEAR_BIT(GPIOD -> PORT, ARG_u8Pin); break;
    1712:	a0 e3       	ldi	r26, 0x30	; 48
    1714:	b0 e0       	ldi	r27, 0x00	; 0
    1716:	e0 e3       	ldi	r30, 0x30	; 48
    1718:	f0 e0       	ldi	r31, 0x00	; 0
    171a:	82 81       	ldd	r24, Z+2	; 0x02
    171c:	48 2f       	mov	r20, r24
    171e:	8a 81       	ldd	r24, Y+2	; 0x02
    1720:	28 2f       	mov	r18, r24
    1722:	30 e0       	ldi	r19, 0x00	; 0
    1724:	81 e0       	ldi	r24, 0x01	; 1
    1726:	90 e0       	ldi	r25, 0x00	; 0
    1728:	02 2e       	mov	r0, r18
    172a:	02 c0       	rjmp	.+4      	; 0x1730 <MDIO_voidSetPinValue+0x210>
    172c:	88 0f       	add	r24, r24
    172e:	99 1f       	adc	r25, r25
    1730:	0a 94       	dec	r0
    1732:	e2 f7       	brpl	.-8      	; 0x172c <MDIO_voidSetPinValue+0x20c>
    1734:	80 95       	com	r24
    1736:	84 23       	and	r24, r20
    1738:	12 96       	adiw	r26, 0x02	; 2
    173a:	8c 93       	st	X, r24
    173c:	12 97       	sbiw	r26, 0x02	; 2
    173e:	7d c0       	rjmp	.+250    	; 0x183a <MDIO_voidSetPinValue+0x31a>
				default: break;/*report error*/
			}			
		}
		
				else if(MDIO_TOGGLE==ARG_u8Value)
    1740:	8b 81       	ldd	r24, Y+3	; 0x03
    1742:	82 30       	cpi	r24, 0x02	; 2
    1744:	09 f0       	breq	.+2      	; 0x1748 <MDIO_voidSetPinValue+0x228>
    1746:	79 c0       	rjmp	.+242    	; 0x183a <MDIO_voidSetPinValue+0x31a>
		{
			switch(ARG_u8Port)
    1748:	89 81       	ldd	r24, Y+1	; 0x01
    174a:	28 2f       	mov	r18, r24
    174c:	30 e0       	ldi	r19, 0x00	; 0
    174e:	3d 83       	std	Y+5, r19	; 0x05
    1750:	2c 83       	std	Y+4, r18	; 0x04
    1752:	8c 81       	ldd	r24, Y+4	; 0x04
    1754:	9d 81       	ldd	r25, Y+5	; 0x05
    1756:	8c 30       	cpi	r24, 0x0C	; 12
    1758:	91 05       	cpc	r25, r1
    175a:	09 f4       	brne	.+2      	; 0x175e <MDIO_voidSetPinValue+0x23e>
    175c:	43 c0       	rjmp	.+134    	; 0x17e4 <MDIO_voidSetPinValue+0x2c4>
    175e:	2c 81       	ldd	r18, Y+4	; 0x04
    1760:	3d 81       	ldd	r19, Y+5	; 0x05
    1762:	2d 30       	cpi	r18, 0x0D	; 13
    1764:	31 05       	cpc	r19, r1
    1766:	3c f4       	brge	.+14     	; 0x1776 <MDIO_voidSetPinValue+0x256>
    1768:	8c 81       	ldd	r24, Y+4	; 0x04
    176a:	9d 81       	ldd	r25, Y+5	; 0x05
    176c:	85 30       	cpi	r24, 0x05	; 5
    176e:	91 05       	cpc	r25, r1
    1770:	09 f4       	brne	.+2      	; 0x1774 <MDIO_voidSetPinValue+0x254>
    1772:	4e c0       	rjmp	.+156    	; 0x1810 <MDIO_voidSetPinValue+0x2f0>
    1774:	62 c0       	rjmp	.+196    	; 0x183a <MDIO_voidSetPinValue+0x31a>
    1776:	2c 81       	ldd	r18, Y+4	; 0x04
    1778:	3d 81       	ldd	r19, Y+5	; 0x05
    177a:	21 32       	cpi	r18, 0x21	; 33
    177c:	31 05       	cpc	r19, r1
    177e:	31 f0       	breq	.+12     	; 0x178c <MDIO_voidSetPinValue+0x26c>
    1780:	8c 81       	ldd	r24, Y+4	; 0x04
    1782:	9d 81       	ldd	r25, Y+5	; 0x05
    1784:	88 32       	cpi	r24, 0x28	; 40
    1786:	91 05       	cpc	r25, r1
    1788:	b9 f0       	breq	.+46     	; 0x17b8 <MDIO_voidSetPinValue+0x298>
    178a:	57 c0       	rjmp	.+174    	; 0x183a <MDIO_voidSetPinValue+0x31a>
			{
				case MDIO_PORTB: TOGGLE_BIT(GPIOB -> PORT, ARG_u8Pin); break;
    178c:	a6 e3       	ldi	r26, 0x36	; 54
    178e:	b0 e0       	ldi	r27, 0x00	; 0
    1790:	e6 e3       	ldi	r30, 0x36	; 54
    1792:	f0 e0       	ldi	r31, 0x00	; 0
    1794:	82 81       	ldd	r24, Z+2	; 0x02
    1796:	48 2f       	mov	r20, r24
    1798:	8a 81       	ldd	r24, Y+2	; 0x02
    179a:	28 2f       	mov	r18, r24
    179c:	30 e0       	ldi	r19, 0x00	; 0
    179e:	81 e0       	ldi	r24, 0x01	; 1
    17a0:	90 e0       	ldi	r25, 0x00	; 0
    17a2:	02 2e       	mov	r0, r18
    17a4:	02 c0       	rjmp	.+4      	; 0x17aa <MDIO_voidSetPinValue+0x28a>
    17a6:	88 0f       	add	r24, r24
    17a8:	99 1f       	adc	r25, r25
    17aa:	0a 94       	dec	r0
    17ac:	e2 f7       	brpl	.-8      	; 0x17a6 <MDIO_voidSetPinValue+0x286>
    17ae:	84 27       	eor	r24, r20
    17b0:	12 96       	adiw	r26, 0x02	; 2
    17b2:	8c 93       	st	X, r24
    17b4:	12 97       	sbiw	r26, 0x02	; 2
    17b6:	41 c0       	rjmp	.+130    	; 0x183a <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTC: TOGGLE_BIT(GPIOC -> PORT, ARG_u8Pin); break;
    17b8:	a3 e3       	ldi	r26, 0x33	; 51
    17ba:	b0 e0       	ldi	r27, 0x00	; 0
    17bc:	e3 e3       	ldi	r30, 0x33	; 51
    17be:	f0 e0       	ldi	r31, 0x00	; 0
    17c0:	82 81       	ldd	r24, Z+2	; 0x02
    17c2:	48 2f       	mov	r20, r24
    17c4:	8a 81       	ldd	r24, Y+2	; 0x02
    17c6:	28 2f       	mov	r18, r24
    17c8:	30 e0       	ldi	r19, 0x00	; 0
    17ca:	81 e0       	ldi	r24, 0x01	; 1
    17cc:	90 e0       	ldi	r25, 0x00	; 0
    17ce:	02 2e       	mov	r0, r18
    17d0:	02 c0       	rjmp	.+4      	; 0x17d6 <MDIO_voidSetPinValue+0x2b6>
    17d2:	88 0f       	add	r24, r24
    17d4:	99 1f       	adc	r25, r25
    17d6:	0a 94       	dec	r0
    17d8:	e2 f7       	brpl	.-8      	; 0x17d2 <MDIO_voidSetPinValue+0x2b2>
    17da:	84 27       	eor	r24, r20
    17dc:	12 96       	adiw	r26, 0x02	; 2
    17de:	8c 93       	st	X, r24
    17e0:	12 97       	sbiw	r26, 0x02	; 2
    17e2:	2b c0       	rjmp	.+86     	; 0x183a <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTA: TOGGLE_BIT(GPIOA -> PORT, ARG_u8Pin); break;
    17e4:	a9 e3       	ldi	r26, 0x39	; 57
    17e6:	b0 e0       	ldi	r27, 0x00	; 0
    17e8:	e9 e3       	ldi	r30, 0x39	; 57
    17ea:	f0 e0       	ldi	r31, 0x00	; 0
    17ec:	82 81       	ldd	r24, Z+2	; 0x02
    17ee:	48 2f       	mov	r20, r24
    17f0:	8a 81       	ldd	r24, Y+2	; 0x02
    17f2:	28 2f       	mov	r18, r24
    17f4:	30 e0       	ldi	r19, 0x00	; 0
    17f6:	81 e0       	ldi	r24, 0x01	; 1
    17f8:	90 e0       	ldi	r25, 0x00	; 0
    17fa:	02 2e       	mov	r0, r18
    17fc:	02 c0       	rjmp	.+4      	; 0x1802 <MDIO_voidSetPinValue+0x2e2>
    17fe:	88 0f       	add	r24, r24
    1800:	99 1f       	adc	r25, r25
    1802:	0a 94       	dec	r0
    1804:	e2 f7       	brpl	.-8      	; 0x17fe <MDIO_voidSetPinValue+0x2de>
    1806:	84 27       	eor	r24, r20
    1808:	12 96       	adiw	r26, 0x02	; 2
    180a:	8c 93       	st	X, r24
    180c:	12 97       	sbiw	r26, 0x02	; 2
    180e:	15 c0       	rjmp	.+42     	; 0x183a <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTD: TOGGLE_BIT(GPIOD -> PORT, ARG_u8Pin); break;
    1810:	a0 e3       	ldi	r26, 0x30	; 48
    1812:	b0 e0       	ldi	r27, 0x00	; 0
    1814:	e0 e3       	ldi	r30, 0x30	; 48
    1816:	f0 e0       	ldi	r31, 0x00	; 0
    1818:	82 81       	ldd	r24, Z+2	; 0x02
    181a:	48 2f       	mov	r20, r24
    181c:	8a 81       	ldd	r24, Y+2	; 0x02
    181e:	28 2f       	mov	r18, r24
    1820:	30 e0       	ldi	r19, 0x00	; 0
    1822:	81 e0       	ldi	r24, 0x01	; 1
    1824:	90 e0       	ldi	r25, 0x00	; 0
    1826:	02 2e       	mov	r0, r18
    1828:	02 c0       	rjmp	.+4      	; 0x182e <MDIO_voidSetPinValue+0x30e>
    182a:	88 0f       	add	r24, r24
    182c:	99 1f       	adc	r25, r25
    182e:	0a 94       	dec	r0
    1830:	e2 f7       	brpl	.-8      	; 0x182a <MDIO_voidSetPinValue+0x30a>
    1832:	84 27       	eor	r24, r20
    1834:	12 96       	adiw	r26, 0x02	; 2
    1836:	8c 93       	st	X, r24
    1838:	12 97       	sbiw	r26, 0x02	; 2
	else
	{
		/*report on error*/
	}

}
    183a:	29 96       	adiw	r28, 0x09	; 9
    183c:	0f b6       	in	r0, 0x3f	; 63
    183e:	f8 94       	cli
    1840:	de bf       	out	0x3e, r29	; 62
    1842:	0f be       	out	0x3f, r0	; 63
    1844:	cd bf       	out	0x3d, r28	; 61
    1846:	cf 91       	pop	r28
    1848:	df 91       	pop	r29
    184a:	08 95       	ret

0000184c <MDIO_voidGetPinValue>:
u8 MDIO_voidGetPinValue(u8 ARG_u8Port,u8 ARG_u8Pin)
{
    184c:	df 93       	push	r29
    184e:	cf 93       	push	r28
    1850:	00 d0       	rcall	.+0      	; 0x1852 <MDIO_voidGetPinValue+0x6>
    1852:	00 d0       	rcall	.+0      	; 0x1854 <MDIO_voidGetPinValue+0x8>
    1854:	0f 92       	push	r0
    1856:	cd b7       	in	r28, 0x3d	; 61
    1858:	de b7       	in	r29, 0x3e	; 62
    185a:	8a 83       	std	Y+2, r24	; 0x02
    185c:	6b 83       	std	Y+3, r22	; 0x03
	u8 L_u8Value;
	if(ARG_u8Pin<=7)
    185e:	8b 81       	ldd	r24, Y+3	; 0x03
    1860:	88 30       	cpi	r24, 0x08	; 8
    1862:	08 f0       	brcs	.+2      	; 0x1866 <MDIO_voidGetPinValue+0x1a>
    1864:	68 c0       	rjmp	.+208    	; 0x1936 <MDIO_voidGetPinValue+0xea>
	{

		switch(ARG_u8Port)
    1866:	8a 81       	ldd	r24, Y+2	; 0x02
    1868:	28 2f       	mov	r18, r24
    186a:	30 e0       	ldi	r19, 0x00	; 0
    186c:	3d 83       	std	Y+5, r19	; 0x05
    186e:	2c 83       	std	Y+4, r18	; 0x04
    1870:	4c 81       	ldd	r20, Y+4	; 0x04
    1872:	5d 81       	ldd	r21, Y+5	; 0x05
    1874:	4c 30       	cpi	r20, 0x0C	; 12
    1876:	51 05       	cpc	r21, r1
    1878:	b9 f0       	breq	.+46     	; 0x18a8 <MDIO_voidGetPinValue+0x5c>
    187a:	8c 81       	ldd	r24, Y+4	; 0x04
    187c:	9d 81       	ldd	r25, Y+5	; 0x05
    187e:	8d 30       	cpi	r24, 0x0D	; 13
    1880:	91 05       	cpc	r25, r1
    1882:	3c f4       	brge	.+14     	; 0x1892 <MDIO_voidGetPinValue+0x46>
    1884:	2c 81       	ldd	r18, Y+4	; 0x04
    1886:	3d 81       	ldd	r19, Y+5	; 0x05
    1888:	25 30       	cpi	r18, 0x05	; 5
    188a:	31 05       	cpc	r19, r1
    188c:	09 f4       	brne	.+2      	; 0x1890 <MDIO_voidGetPinValue+0x44>
    188e:	42 c0       	rjmp	.+132    	; 0x1914 <MDIO_voidGetPinValue+0xc8>
    1890:	52 c0       	rjmp	.+164    	; 0x1936 <MDIO_voidGetPinValue+0xea>
    1892:	4c 81       	ldd	r20, Y+4	; 0x04
    1894:	5d 81       	ldd	r21, Y+5	; 0x05
    1896:	41 32       	cpi	r20, 0x21	; 33
    1898:	51 05       	cpc	r21, r1
    189a:	c1 f0       	breq	.+48     	; 0x18cc <MDIO_voidGetPinValue+0x80>
    189c:	8c 81       	ldd	r24, Y+4	; 0x04
    189e:	9d 81       	ldd	r25, Y+5	; 0x05
    18a0:	88 32       	cpi	r24, 0x28	; 40
    18a2:	91 05       	cpc	r25, r1
    18a4:	29 f1       	breq	.+74     	; 0x18f0 <MDIO_voidGetPinValue+0xa4>
    18a6:	47 c0       	rjmp	.+142    	; 0x1936 <MDIO_voidGetPinValue+0xea>
		{
			case MDIO_PORTA: L_u8Value =GET_BIT(GPIOA -> PIN, ARG_u8Pin); break;
    18a8:	e9 e3       	ldi	r30, 0x39	; 57
    18aa:	f0 e0       	ldi	r31, 0x00	; 0
    18ac:	80 81       	ld	r24, Z
    18ae:	28 2f       	mov	r18, r24
    18b0:	30 e0       	ldi	r19, 0x00	; 0
    18b2:	8b 81       	ldd	r24, Y+3	; 0x03
    18b4:	88 2f       	mov	r24, r24
    18b6:	90 e0       	ldi	r25, 0x00	; 0
    18b8:	a9 01       	movw	r20, r18
    18ba:	02 c0       	rjmp	.+4      	; 0x18c0 <MDIO_voidGetPinValue+0x74>
    18bc:	55 95       	asr	r21
    18be:	47 95       	ror	r20
    18c0:	8a 95       	dec	r24
    18c2:	e2 f7       	brpl	.-8      	; 0x18bc <MDIO_voidGetPinValue+0x70>
    18c4:	ca 01       	movw	r24, r20
    18c6:	81 70       	andi	r24, 0x01	; 1
    18c8:	89 83       	std	Y+1, r24	; 0x01
    18ca:	35 c0       	rjmp	.+106    	; 0x1936 <MDIO_voidGetPinValue+0xea>
			case MDIO_PORTB: L_u8Value =GET_BIT(GPIOB -> PIN, ARG_u8Pin); break;
    18cc:	e6 e3       	ldi	r30, 0x36	; 54
    18ce:	f0 e0       	ldi	r31, 0x00	; 0
    18d0:	80 81       	ld	r24, Z
    18d2:	28 2f       	mov	r18, r24
    18d4:	30 e0       	ldi	r19, 0x00	; 0
    18d6:	8b 81       	ldd	r24, Y+3	; 0x03
    18d8:	88 2f       	mov	r24, r24
    18da:	90 e0       	ldi	r25, 0x00	; 0
    18dc:	a9 01       	movw	r20, r18
    18de:	02 c0       	rjmp	.+4      	; 0x18e4 <MDIO_voidGetPinValue+0x98>
    18e0:	55 95       	asr	r21
    18e2:	47 95       	ror	r20
    18e4:	8a 95       	dec	r24
    18e6:	e2 f7       	brpl	.-8      	; 0x18e0 <MDIO_voidGetPinValue+0x94>
    18e8:	ca 01       	movw	r24, r20
    18ea:	81 70       	andi	r24, 0x01	; 1
    18ec:	89 83       	std	Y+1, r24	; 0x01
    18ee:	23 c0       	rjmp	.+70     	; 0x1936 <MDIO_voidGetPinValue+0xea>
			case MDIO_PORTC: L_u8Value =GET_BIT(GPIOC -> PIN, ARG_u8Pin); break;
    18f0:	e3 e3       	ldi	r30, 0x33	; 51
    18f2:	f0 e0       	ldi	r31, 0x00	; 0
    18f4:	80 81       	ld	r24, Z
    18f6:	28 2f       	mov	r18, r24
    18f8:	30 e0       	ldi	r19, 0x00	; 0
    18fa:	8b 81       	ldd	r24, Y+3	; 0x03
    18fc:	88 2f       	mov	r24, r24
    18fe:	90 e0       	ldi	r25, 0x00	; 0
    1900:	a9 01       	movw	r20, r18
    1902:	02 c0       	rjmp	.+4      	; 0x1908 <MDIO_voidGetPinValue+0xbc>
    1904:	55 95       	asr	r21
    1906:	47 95       	ror	r20
    1908:	8a 95       	dec	r24
    190a:	e2 f7       	brpl	.-8      	; 0x1904 <MDIO_voidGetPinValue+0xb8>
    190c:	ca 01       	movw	r24, r20
    190e:	81 70       	andi	r24, 0x01	; 1
    1910:	89 83       	std	Y+1, r24	; 0x01
    1912:	11 c0       	rjmp	.+34     	; 0x1936 <MDIO_voidGetPinValue+0xea>
			case MDIO_PORTD: L_u8Value =GET_BIT(GPIOD -> PIN, ARG_u8Pin); break;
    1914:	e0 e3       	ldi	r30, 0x30	; 48
    1916:	f0 e0       	ldi	r31, 0x00	; 0
    1918:	80 81       	ld	r24, Z
    191a:	28 2f       	mov	r18, r24
    191c:	30 e0       	ldi	r19, 0x00	; 0
    191e:	8b 81       	ldd	r24, Y+3	; 0x03
    1920:	88 2f       	mov	r24, r24
    1922:	90 e0       	ldi	r25, 0x00	; 0
    1924:	a9 01       	movw	r20, r18
    1926:	02 c0       	rjmp	.+4      	; 0x192c <MDIO_voidGetPinValue+0xe0>
    1928:	55 95       	asr	r21
    192a:	47 95       	ror	r20
    192c:	8a 95       	dec	r24
    192e:	e2 f7       	brpl	.-8      	; 0x1928 <MDIO_voidGetPinValue+0xdc>
    1930:	ca 01       	movw	r24, r20
    1932:	81 70       	andi	r24, 0x01	; 1
    1934:	89 83       	std	Y+1, r24	; 0x01
	}
	else
	{
		/*report on error*/	
	}
	return L_u8Value;
    1936:	89 81       	ldd	r24, Y+1	; 0x01
}
    1938:	0f 90       	pop	r0
    193a:	0f 90       	pop	r0
    193c:	0f 90       	pop	r0
    193e:	0f 90       	pop	r0
    1940:	0f 90       	pop	r0
    1942:	cf 91       	pop	r28
    1944:	df 91       	pop	r29
    1946:	08 95       	ret

00001948 <MTIM_voidInit>:
static void (*MTIM_pvoidfUserFunctionT0OVF)(void) = NULL_POINTER;
static void (*MTIM_pvoidfUserFunctionT0OCM)(void) = NULL_POINTER;


void MTIM_voidInit(u8 ARG_u8TimerNo, u8 ARG_u8Mode, u8 ARG_u8ClockSource, u8 ARG_u8HWPinMode)
{
    1948:	df 93       	push	r29
    194a:	cf 93       	push	r28
    194c:	00 d0       	rcall	.+0      	; 0x194e <MTIM_voidInit+0x6>
    194e:	00 d0       	rcall	.+0      	; 0x1950 <MTIM_voidInit+0x8>
    1950:	00 d0       	rcall	.+0      	; 0x1952 <MTIM_voidInit+0xa>
    1952:	cd b7       	in	r28, 0x3d	; 61
    1954:	de b7       	in	r29, 0x3e	; 62
    1956:	89 83       	std	Y+1, r24	; 0x01
    1958:	6a 83       	std	Y+2, r22	; 0x02
    195a:	4b 83       	std	Y+3, r20	; 0x03
    195c:	2c 83       	std	Y+4, r18	; 0x04
	if((ARG_u8TimerNo<=2)&&(ARG_u8Mode<=3)&&(ARG_u8ClockSource<=7)&&(ARG_u8HWPinMode<=3))
    195e:	89 81       	ldd	r24, Y+1	; 0x01
    1960:	83 30       	cpi	r24, 0x03	; 3
    1962:	08 f0       	brcs	.+2      	; 0x1966 <MTIM_voidInit+0x1e>
    1964:	81 c0       	rjmp	.+258    	; 0x1a68 <MTIM_voidInit+0x120>
    1966:	8a 81       	ldd	r24, Y+2	; 0x02
    1968:	84 30       	cpi	r24, 0x04	; 4
    196a:	08 f0       	brcs	.+2      	; 0x196e <MTIM_voidInit+0x26>
    196c:	7d c0       	rjmp	.+250    	; 0x1a68 <MTIM_voidInit+0x120>
    196e:	8b 81       	ldd	r24, Y+3	; 0x03
    1970:	88 30       	cpi	r24, 0x08	; 8
    1972:	08 f0       	brcs	.+2      	; 0x1976 <MTIM_voidInit+0x2e>
    1974:	79 c0       	rjmp	.+242    	; 0x1a68 <MTIM_voidInit+0x120>
    1976:	8c 81       	ldd	r24, Y+4	; 0x04
    1978:	84 30       	cpi	r24, 0x04	; 4
    197a:	08 f0       	brcs	.+2      	; 0x197e <MTIM_voidInit+0x36>
    197c:	75 c0       	rjmp	.+234    	; 0x1a68 <MTIM_voidInit+0x120>
	{
		switch(ARG_u8TimerNo)
    197e:	89 81       	ldd	r24, Y+1	; 0x01
    1980:	88 2f       	mov	r24, r24
    1982:	90 e0       	ldi	r25, 0x00	; 0
    1984:	00 97       	sbiw	r24, 0x00	; 0
    1986:	09 f0       	breq	.+2      	; 0x198a <MTIM_voidInit+0x42>
    1988:	6f c0       	rjmp	.+222    	; 0x1a68 <MTIM_voidInit+0x120>
		{
			case MTIM_TIMER0:
			{
				switch(ARG_u8Mode)
    198a:	8a 81       	ldd	r24, Y+2	; 0x02
    198c:	28 2f       	mov	r18, r24
    198e:	30 e0       	ldi	r19, 0x00	; 0
    1990:	3e 83       	std	Y+6, r19	; 0x06
    1992:	2d 83       	std	Y+5, r18	; 0x05
    1994:	8d 81       	ldd	r24, Y+5	; 0x05
    1996:	9e 81       	ldd	r25, Y+6	; 0x06
    1998:	81 30       	cpi	r24, 0x01	; 1
    199a:	91 05       	cpc	r25, r1
    199c:	21 f1       	breq	.+72     	; 0x19e6 <MTIM_voidInit+0x9e>
    199e:	2d 81       	ldd	r18, Y+5	; 0x05
    19a0:	3e 81       	ldd	r19, Y+6	; 0x06
    19a2:	22 30       	cpi	r18, 0x02	; 2
    19a4:	31 05       	cpc	r19, r1
    19a6:	2c f4       	brge	.+10     	; 0x19b2 <MTIM_voidInit+0x6a>
    19a8:	8d 81       	ldd	r24, Y+5	; 0x05
    19aa:	9e 81       	ldd	r25, Y+6	; 0x06
    19ac:	00 97       	sbiw	r24, 0x00	; 0
    19ae:	61 f0       	breq	.+24     	; 0x19c8 <MTIM_voidInit+0x80>
    19b0:	46 c0       	rjmp	.+140    	; 0x1a3e <MTIM_voidInit+0xf6>
    19b2:	2d 81       	ldd	r18, Y+5	; 0x05
    19b4:	3e 81       	ldd	r19, Y+6	; 0x06
    19b6:	22 30       	cpi	r18, 0x02	; 2
    19b8:	31 05       	cpc	r19, r1
    19ba:	21 f1       	breq	.+72     	; 0x1a04 <MTIM_voidInit+0xbc>
    19bc:	8d 81       	ldd	r24, Y+5	; 0x05
    19be:	9e 81       	ldd	r25, Y+6	; 0x06
    19c0:	83 30       	cpi	r24, 0x03	; 3
    19c2:	91 05       	cpc	r25, r1
    19c4:	71 f1       	breq	.+92     	; 0x1a22 <MTIM_voidInit+0xda>
    19c6:	3b c0       	rjmp	.+118    	; 0x1a3e <MTIM_voidInit+0xf6>
				{
					case MTIM_MODE_NORMAL:
					{
						CLEAR_BIT(TCCR0, WGM01);
    19c8:	a3 e5       	ldi	r26, 0x53	; 83
    19ca:	b0 e0       	ldi	r27, 0x00	; 0
    19cc:	e3 e5       	ldi	r30, 0x53	; 83
    19ce:	f0 e0       	ldi	r31, 0x00	; 0
    19d0:	80 81       	ld	r24, Z
    19d2:	87 7f       	andi	r24, 0xF7	; 247
    19d4:	8c 93       	st	X, r24
						CLEAR_BIT(TCCR0, WGM00);
    19d6:	a3 e5       	ldi	r26, 0x53	; 83
    19d8:	b0 e0       	ldi	r27, 0x00	; 0
    19da:	e3 e5       	ldi	r30, 0x53	; 83
    19dc:	f0 e0       	ldi	r31, 0x00	; 0
    19de:	80 81       	ld	r24, Z
    19e0:	8f 7b       	andi	r24, 0xBF	; 191
    19e2:	8c 93       	st	X, r24
    19e4:	2c c0       	rjmp	.+88     	; 0x1a3e <MTIM_voidInit+0xf6>
						break;
					}
					case MTIM_MODE_CTC:
					{
						SET_BIT(TCCR0, WGM01);
    19e6:	a3 e5       	ldi	r26, 0x53	; 83
    19e8:	b0 e0       	ldi	r27, 0x00	; 0
    19ea:	e3 e5       	ldi	r30, 0x53	; 83
    19ec:	f0 e0       	ldi	r31, 0x00	; 0
    19ee:	80 81       	ld	r24, Z
    19f0:	88 60       	ori	r24, 0x08	; 8
    19f2:	8c 93       	st	X, r24
						CLEAR_BIT(TCCR0, WGM00);
    19f4:	a3 e5       	ldi	r26, 0x53	; 83
    19f6:	b0 e0       	ldi	r27, 0x00	; 0
    19f8:	e3 e5       	ldi	r30, 0x53	; 83
    19fa:	f0 e0       	ldi	r31, 0x00	; 0
    19fc:	80 81       	ld	r24, Z
    19fe:	8f 7b       	andi	r24, 0xBF	; 191
    1a00:	8c 93       	st	X, r24
    1a02:	1d c0       	rjmp	.+58     	; 0x1a3e <MTIM_voidInit+0xf6>
						break;
					}
					case MTIM_MODE_FASTPWM:
					{
						SET_BIT(TCCR0, WGM01);
    1a04:	a3 e5       	ldi	r26, 0x53	; 83
    1a06:	b0 e0       	ldi	r27, 0x00	; 0
    1a08:	e3 e5       	ldi	r30, 0x53	; 83
    1a0a:	f0 e0       	ldi	r31, 0x00	; 0
    1a0c:	80 81       	ld	r24, Z
    1a0e:	88 60       	ori	r24, 0x08	; 8
    1a10:	8c 93       	st	X, r24
						SET_BIT(TCCR0, WGM00);
    1a12:	a3 e5       	ldi	r26, 0x53	; 83
    1a14:	b0 e0       	ldi	r27, 0x00	; 0
    1a16:	e3 e5       	ldi	r30, 0x53	; 83
    1a18:	f0 e0       	ldi	r31, 0x00	; 0
    1a1a:	80 81       	ld	r24, Z
    1a1c:	80 64       	ori	r24, 0x40	; 64
    1a1e:	8c 93       	st	X, r24
    1a20:	0e c0       	rjmp	.+28     	; 0x1a3e <MTIM_voidInit+0xf6>
						break;
					}
					case MTIM_MODE_PHASECORRECTPWM:
					{
						CLEAR_BIT(TCCR0, WGM01);
    1a22:	a3 e5       	ldi	r26, 0x53	; 83
    1a24:	b0 e0       	ldi	r27, 0x00	; 0
    1a26:	e3 e5       	ldi	r30, 0x53	; 83
    1a28:	f0 e0       	ldi	r31, 0x00	; 0
    1a2a:	80 81       	ld	r24, Z
    1a2c:	87 7f       	andi	r24, 0xF7	; 247
    1a2e:	8c 93       	st	X, r24
						SET_BIT(TCCR0, WGM00);
    1a30:	a3 e5       	ldi	r26, 0x53	; 83
    1a32:	b0 e0       	ldi	r27, 0x00	; 0
    1a34:	e3 e5       	ldi	r30, 0x53	; 83
    1a36:	f0 e0       	ldi	r31, 0x00	; 0
    1a38:	80 81       	ld	r24, Z
    1a3a:	80 64       	ori	r24, 0x40	; 64
    1a3c:	8c 93       	st	X, r24
						break;
					}
					default: break; /* Report an error*/
				}
				TCCR0 = (TCCR0&0xCF) | (ARG_u8HWPinMode << COM00);
    1a3e:	a3 e5       	ldi	r26, 0x53	; 83
    1a40:	b0 e0       	ldi	r27, 0x00	; 0
    1a42:	e3 e5       	ldi	r30, 0x53	; 83
    1a44:	f0 e0       	ldi	r31, 0x00	; 0
    1a46:	80 81       	ld	r24, Z
    1a48:	28 2f       	mov	r18, r24
    1a4a:	2f 7c       	andi	r18, 0xCF	; 207
    1a4c:	8c 81       	ldd	r24, Y+4	; 0x04
    1a4e:	88 2f       	mov	r24, r24
    1a50:	90 e0       	ldi	r25, 0x00	; 0
    1a52:	82 95       	swap	r24
    1a54:	92 95       	swap	r25
    1a56:	90 7f       	andi	r25, 0xF0	; 240
    1a58:	98 27       	eor	r25, r24
    1a5a:	80 7f       	andi	r24, 0xF0	; 240
    1a5c:	98 27       	eor	r25, r24
    1a5e:	82 2b       	or	r24, r18
    1a60:	8c 93       	st	X, r24
				MTIM_u8TIMER0Clock = ARG_u8ClockSource;
    1a62:	8b 81       	ldd	r24, Y+3	; 0x03
    1a64:	80 93 6a 01 	sts	0x016A, r24
	}
	else
	{
		/* Report an Error */
	}
}
    1a68:	26 96       	adiw	r28, 0x06	; 6
    1a6a:	0f b6       	in	r0, 0x3f	; 63
    1a6c:	f8 94       	cli
    1a6e:	de bf       	out	0x3e, r29	; 62
    1a70:	0f be       	out	0x3f, r0	; 63
    1a72:	cd bf       	out	0x3d, r28	; 61
    1a74:	cf 91       	pop	r28
    1a76:	df 91       	pop	r29
    1a78:	08 95       	ret

00001a7a <MTIM_voidForceOutputCompare>:

void MTIM_voidForceOutputCompare(u8 ARG_u8TimerNo)
{
    1a7a:	df 93       	push	r29
    1a7c:	cf 93       	push	r28
    1a7e:	0f 92       	push	r0
    1a80:	cd b7       	in	r28, 0x3d	; 61
    1a82:	de b7       	in	r29, 0x3e	; 62
    1a84:	89 83       	std	Y+1, r24	; 0x01
	SET_BIT(TCCR0, FOC0);
    1a86:	a3 e5       	ldi	r26, 0x53	; 83
    1a88:	b0 e0       	ldi	r27, 0x00	; 0
    1a8a:	e3 e5       	ldi	r30, 0x53	; 83
    1a8c:	f0 e0       	ldi	r31, 0x00	; 0
    1a8e:	80 81       	ld	r24, Z
    1a90:	80 68       	ori	r24, 0x80	; 128
    1a92:	8c 93       	st	X, r24
}
    1a94:	0f 90       	pop	r0
    1a96:	cf 91       	pop	r28
    1a98:	df 91       	pop	r29
    1a9a:	08 95       	ret

00001a9c <MTIM_voidEnableInterrupt>:

void MTIM_voidEnableInterrupt(u8 ARG_u8InterruptSource)
{
    1a9c:	df 93       	push	r29
    1a9e:	cf 93       	push	r28
    1aa0:	0f 92       	push	r0
    1aa2:	cd b7       	in	r28, 0x3d	; 61
    1aa4:	de b7       	in	r29, 0x3e	; 62
    1aa6:	89 83       	std	Y+1, r24	; 0x01
	if(ARG_u8InterruptSource<=7)
    1aa8:	89 81       	ldd	r24, Y+1	; 0x01
    1aaa:	88 30       	cpi	r24, 0x08	; 8
    1aac:	98 f4       	brcc	.+38     	; 0x1ad4 <MTIM_voidEnableInterrupt+0x38>
	{
		SET_BIT(TIMSK, ARG_u8InterruptSource);
    1aae:	a9 e5       	ldi	r26, 0x59	; 89
    1ab0:	b0 e0       	ldi	r27, 0x00	; 0
    1ab2:	e9 e5       	ldi	r30, 0x59	; 89
    1ab4:	f0 e0       	ldi	r31, 0x00	; 0
    1ab6:	80 81       	ld	r24, Z
    1ab8:	48 2f       	mov	r20, r24
    1aba:	89 81       	ldd	r24, Y+1	; 0x01
    1abc:	28 2f       	mov	r18, r24
    1abe:	30 e0       	ldi	r19, 0x00	; 0
    1ac0:	81 e0       	ldi	r24, 0x01	; 1
    1ac2:	90 e0       	ldi	r25, 0x00	; 0
    1ac4:	02 2e       	mov	r0, r18
    1ac6:	02 c0       	rjmp	.+4      	; 0x1acc <MTIM_voidEnableInterrupt+0x30>
    1ac8:	88 0f       	add	r24, r24
    1aca:	99 1f       	adc	r25, r25
    1acc:	0a 94       	dec	r0
    1ace:	e2 f7       	brpl	.-8      	; 0x1ac8 <MTIM_voidEnableInterrupt+0x2c>
    1ad0:	84 2b       	or	r24, r20
    1ad2:	8c 93       	st	X, r24
	}
	else
	{
		/*Report an Error */
	}
}
    1ad4:	0f 90       	pop	r0
    1ad6:	cf 91       	pop	r28
    1ad8:	df 91       	pop	r29
    1ada:	08 95       	ret

00001adc <MTIM_voidDisableInterrupt>:

void MTIM_voidDisableInterrupt(u8 ARG_u8InterruptSource)
{
    1adc:	df 93       	push	r29
    1ade:	cf 93       	push	r28
    1ae0:	0f 92       	push	r0
    1ae2:	cd b7       	in	r28, 0x3d	; 61
    1ae4:	de b7       	in	r29, 0x3e	; 62
    1ae6:	89 83       	std	Y+1, r24	; 0x01
	if(ARG_u8InterruptSource<=7)
    1ae8:	89 81       	ldd	r24, Y+1	; 0x01
    1aea:	88 30       	cpi	r24, 0x08	; 8
    1aec:	a0 f4       	brcc	.+40     	; 0x1b16 <MTIM_voidDisableInterrupt+0x3a>
	{
		CLEAR_BIT(TIMSK, ARG_u8InterruptSource);
    1aee:	a9 e5       	ldi	r26, 0x59	; 89
    1af0:	b0 e0       	ldi	r27, 0x00	; 0
    1af2:	e9 e5       	ldi	r30, 0x59	; 89
    1af4:	f0 e0       	ldi	r31, 0x00	; 0
    1af6:	80 81       	ld	r24, Z
    1af8:	48 2f       	mov	r20, r24
    1afa:	89 81       	ldd	r24, Y+1	; 0x01
    1afc:	28 2f       	mov	r18, r24
    1afe:	30 e0       	ldi	r19, 0x00	; 0
    1b00:	81 e0       	ldi	r24, 0x01	; 1
    1b02:	90 e0       	ldi	r25, 0x00	; 0
    1b04:	02 2e       	mov	r0, r18
    1b06:	02 c0       	rjmp	.+4      	; 0x1b0c <MTIM_voidDisableInterrupt+0x30>
    1b08:	88 0f       	add	r24, r24
    1b0a:	99 1f       	adc	r25, r25
    1b0c:	0a 94       	dec	r0
    1b0e:	e2 f7       	brpl	.-8      	; 0x1b08 <MTIM_voidDisableInterrupt+0x2c>
    1b10:	80 95       	com	r24
    1b12:	84 23       	and	r24, r20
    1b14:	8c 93       	st	X, r24
	}
	else
	{
		/*Report an Error */
	}
}
    1b16:	0f 90       	pop	r0
    1b18:	cf 91       	pop	r28
    1b1a:	df 91       	pop	r29
    1b1c:	08 95       	ret

00001b1e <MTIM_voidSetCallback>:

void MTIM_voidSetCallback(void(*ARG_pvoidfUserFunction)(void), u8 ARG_u8InterruptSource)
{
    1b1e:	df 93       	push	r29
    1b20:	cf 93       	push	r28
    1b22:	00 d0       	rcall	.+0      	; 0x1b24 <MTIM_voidSetCallback+0x6>
    1b24:	00 d0       	rcall	.+0      	; 0x1b26 <MTIM_voidSetCallback+0x8>
    1b26:	0f 92       	push	r0
    1b28:	cd b7       	in	r28, 0x3d	; 61
    1b2a:	de b7       	in	r29, 0x3e	; 62
    1b2c:	9a 83       	std	Y+2, r25	; 0x02
    1b2e:	89 83       	std	Y+1, r24	; 0x01
    1b30:	6b 83       	std	Y+3, r22	; 0x03
	if(ARG_pvoidfUserFunction!=NULL_POINTER)
    1b32:	89 81       	ldd	r24, Y+1	; 0x01
    1b34:	9a 81       	ldd	r25, Y+2	; 0x02
    1b36:	00 97       	sbiw	r24, 0x00	; 0
    1b38:	e1 f0       	breq	.+56     	; 0x1b72 <MTIM_voidSetCallback+0x54>
	{
		switch(ARG_u8InterruptSource)
    1b3a:	8b 81       	ldd	r24, Y+3	; 0x03
    1b3c:	28 2f       	mov	r18, r24
    1b3e:	30 e0       	ldi	r19, 0x00	; 0
    1b40:	3d 83       	std	Y+5, r19	; 0x05
    1b42:	2c 83       	std	Y+4, r18	; 0x04
    1b44:	8c 81       	ldd	r24, Y+4	; 0x04
    1b46:	9d 81       	ldd	r25, Y+5	; 0x05
    1b48:	00 97       	sbiw	r24, 0x00	; 0
    1b4a:	31 f0       	breq	.+12     	; 0x1b58 <MTIM_voidSetCallback+0x3a>
    1b4c:	2c 81       	ldd	r18, Y+4	; 0x04
    1b4e:	3d 81       	ldd	r19, Y+5	; 0x05
    1b50:	21 30       	cpi	r18, 0x01	; 1
    1b52:	31 05       	cpc	r19, r1
    1b54:	41 f0       	breq	.+16     	; 0x1b66 <MTIM_voidSetCallback+0x48>
    1b56:	0d c0       	rjmp	.+26     	; 0x1b72 <MTIM_voidSetCallback+0x54>
		{
			case MTIM_INTERRUPT_T0_OVF: MTIM_pvoidfUserFunctionT0OVF = ARG_pvoidfUserFunction; break; 
    1b58:	89 81       	ldd	r24, Y+1	; 0x01
    1b5a:	9a 81       	ldd	r25, Y+2	; 0x02
    1b5c:	90 93 6f 01 	sts	0x016F, r25
    1b60:	80 93 6e 01 	sts	0x016E, r24
    1b64:	06 c0       	rjmp	.+12     	; 0x1b72 <MTIM_voidSetCallback+0x54>
			case MTIM_INTERRUPT_T0_OCM: MTIM_pvoidfUserFunctionT0OCM = ARG_pvoidfUserFunction; break;
    1b66:	89 81       	ldd	r24, Y+1	; 0x01
    1b68:	9a 81       	ldd	r25, Y+2	; 0x02
    1b6a:	90 93 71 01 	sts	0x0171, r25
    1b6e:	80 93 70 01 	sts	0x0170, r24
	}
	else
	{
		/* Report an Error */
	}
}
    1b72:	0f 90       	pop	r0
    1b74:	0f 90       	pop	r0
    1b76:	0f 90       	pop	r0
    1b78:	0f 90       	pop	r0
    1b7a:	0f 90       	pop	r0
    1b7c:	cf 91       	pop	r28
    1b7e:	df 91       	pop	r29
    1b80:	08 95       	ret

00001b82 <MTIM_voidStartTimer>:

void MTIM_voidStartTimer(u8 ARG_u8TimerNo)
{
    1b82:	df 93       	push	r29
    1b84:	cf 93       	push	r28
    1b86:	0f 92       	push	r0
    1b88:	cd b7       	in	r28, 0x3d	; 61
    1b8a:	de b7       	in	r29, 0x3e	; 62
    1b8c:	89 83       	std	Y+1, r24	; 0x01
	switch(ARG_u8TimerNo)
    1b8e:	89 81       	ldd	r24, Y+1	; 0x01
    1b90:	88 2f       	mov	r24, r24
    1b92:	90 e0       	ldi	r25, 0x00	; 0
    1b94:	00 97       	sbiw	r24, 0x00	; 0
    1b96:	59 f4       	brne	.+22     	; 0x1bae <MTIM_voidStartTimer+0x2c>
	{
		case MTIM_TIMER0: TCCR0 = (TCCR0 & 0xF8) | MTIM_u8TIMER0Clock; break; 
    1b98:	a3 e5       	ldi	r26, 0x53	; 83
    1b9a:	b0 e0       	ldi	r27, 0x00	; 0
    1b9c:	e3 e5       	ldi	r30, 0x53	; 83
    1b9e:	f0 e0       	ldi	r31, 0x00	; 0
    1ba0:	80 81       	ld	r24, Z
    1ba2:	98 2f       	mov	r25, r24
    1ba4:	98 7f       	andi	r25, 0xF8	; 248
    1ba6:	80 91 6a 01 	lds	r24, 0x016A
    1baa:	89 2b       	or	r24, r25
    1bac:	8c 93       	st	X, r24
		case MTIM_TIMER1: break;
		case MTIM_TIMER2: break;
		default: break; /* Report an Error */
	}
}
    1bae:	0f 90       	pop	r0
    1bb0:	cf 91       	pop	r28
    1bb2:	df 91       	pop	r29
    1bb4:	08 95       	ret

00001bb6 <MTIM_voidStopTimer>:

void MTIM_voidStopTimer(u8 ARG_u8TimerNo)
{
    1bb6:	df 93       	push	r29
    1bb8:	cf 93       	push	r28
    1bba:	0f 92       	push	r0
    1bbc:	cd b7       	in	r28, 0x3d	; 61
    1bbe:	de b7       	in	r29, 0x3e	; 62
    1bc0:	89 83       	std	Y+1, r24	; 0x01
	switch(ARG_u8TimerNo)
    1bc2:	89 81       	ldd	r24, Y+1	; 0x01
    1bc4:	88 2f       	mov	r24, r24
    1bc6:	90 e0       	ldi	r25, 0x00	; 0
    1bc8:	00 97       	sbiw	r24, 0x00	; 0
    1bca:	39 f4       	brne	.+14     	; 0x1bda <MTIM_voidStopTimer+0x24>
	{
		case MTIM_TIMER0: TCCR0 = (TCCR0 & 0xF8) | MTIM_CS_NOCLOCK; break; 
    1bcc:	a3 e5       	ldi	r26, 0x53	; 83
    1bce:	b0 e0       	ldi	r27, 0x00	; 0
    1bd0:	e3 e5       	ldi	r30, 0x53	; 83
    1bd2:	f0 e0       	ldi	r31, 0x00	; 0
    1bd4:	80 81       	ld	r24, Z
    1bd6:	88 7f       	andi	r24, 0xF8	; 248
    1bd8:	8c 93       	st	X, r24
		case MTIM_TIMER1: break;
		case MTIM_TIMER2: break;
		default: break; /* Report an Error */
	}
}
    1bda:	0f 90       	pop	r0
    1bdc:	cf 91       	pop	r28
    1bde:	df 91       	pop	r29
    1be0:	08 95       	ret

00001be2 <MTIM_voidSetOCR>:

void MTIM_voidSetOCR(u8 ARG_u8TimerNo, u16 ARG_u16OCRValue)
{
    1be2:	df 93       	push	r29
    1be4:	cf 93       	push	r28
    1be6:	00 d0       	rcall	.+0      	; 0x1be8 <MTIM_voidSetOCR+0x6>
    1be8:	0f 92       	push	r0
    1bea:	cd b7       	in	r28, 0x3d	; 61
    1bec:	de b7       	in	r29, 0x3e	; 62
    1bee:	89 83       	std	Y+1, r24	; 0x01
    1bf0:	7b 83       	std	Y+3, r23	; 0x03
    1bf2:	6a 83       	std	Y+2, r22	; 0x02
	switch(ARG_u8TimerNo)
    1bf4:	89 81       	ldd	r24, Y+1	; 0x01
    1bf6:	88 2f       	mov	r24, r24
    1bf8:	90 e0       	ldi	r25, 0x00	; 0
    1bfa:	00 97       	sbiw	r24, 0x00	; 0
    1bfc:	21 f4       	brne	.+8      	; 0x1c06 <MTIM_voidSetOCR+0x24>
	{
		case MTIM_TIMER0: OCR0 = (u8)ARG_u16OCRValue; break; 
    1bfe:	ec e5       	ldi	r30, 0x5C	; 92
    1c00:	f0 e0       	ldi	r31, 0x00	; 0
    1c02:	8a 81       	ldd	r24, Y+2	; 0x02
    1c04:	80 83       	st	Z, r24
		case MTIM_TIMER1: break;
		case MTIM_TIMER2: break;
		default: break; /* Report an Error */
	}
}
    1c06:	0f 90       	pop	r0
    1c08:	0f 90       	pop	r0
    1c0a:	0f 90       	pop	r0
    1c0c:	cf 91       	pop	r28
    1c0e:	df 91       	pop	r29
    1c10:	08 95       	ret

00001c12 <MTIM_voidTimerDelay>:

void MTIM_voidTimerDelay(u8 ARG_u8TimerNo, u32 ARG_u32Delay)
{
    1c12:	ef 92       	push	r14
    1c14:	ff 92       	push	r15
    1c16:	0f 93       	push	r16
    1c18:	1f 93       	push	r17
    1c1a:	df 93       	push	r29
    1c1c:	cf 93       	push	r28
    1c1e:	cd b7       	in	r28, 0x3d	; 61
    1c20:	de b7       	in	r29, 0x3e	; 62
    1c22:	61 97       	sbiw	r28, 0x11	; 17
    1c24:	0f b6       	in	r0, 0x3f	; 63
    1c26:	f8 94       	cli
    1c28:	de bf       	out	0x3e, r29	; 62
    1c2a:	0f be       	out	0x3f, r0	; 63
    1c2c:	cd bf       	out	0x3d, r28	; 61
    1c2e:	8b 87       	std	Y+11, r24	; 0x0b
    1c30:	4c 87       	std	Y+12, r20	; 0x0c
    1c32:	5d 87       	std	Y+13, r21	; 0x0d
    1c34:	6e 87       	std	Y+14, r22	; 0x0e
    1c36:	7f 87       	std	Y+15, r23	; 0x0f
	f32 L_f32TickTime, L_f32OVFTime;
	u16 L_u16Prescaler;
	switch(ARG_u8TimerNo)
    1c38:	8b 85       	ldd	r24, Y+11	; 0x0b
    1c3a:	88 2f       	mov	r24, r24
    1c3c:	90 e0       	ldi	r25, 0x00	; 0
    1c3e:	00 97       	sbiw	r24, 0x00	; 0
    1c40:	09 f0       	breq	.+2      	; 0x1c44 <MTIM_voidTimerDelay+0x32>
    1c42:	b3 c0       	rjmp	.+358    	; 0x1daa <MTIM_voidTimerDelay+0x198>
	{
		case MTIM_TIMER0:
		{
			switch(MTIM_u8TIMER0Clock)
    1c44:	80 91 6a 01 	lds	r24, 0x016A
    1c48:	28 2f       	mov	r18, r24
    1c4a:	30 e0       	ldi	r19, 0x00	; 0
    1c4c:	39 8b       	std	Y+17, r19	; 0x11
    1c4e:	28 8b       	std	Y+16, r18	; 0x10
    1c50:	88 89       	ldd	r24, Y+16	; 0x10
    1c52:	99 89       	ldd	r25, Y+17	; 0x11
    1c54:	83 30       	cpi	r24, 0x03	; 3
    1c56:	91 05       	cpc	r25, r1
    1c58:	29 f1       	breq	.+74     	; 0x1ca4 <MTIM_voidTimerDelay+0x92>
    1c5a:	28 89       	ldd	r18, Y+16	; 0x10
    1c5c:	39 89       	ldd	r19, Y+17	; 0x11
    1c5e:	24 30       	cpi	r18, 0x04	; 4
    1c60:	31 05       	cpc	r19, r1
    1c62:	5c f4       	brge	.+22     	; 0x1c7a <MTIM_voidTimerDelay+0x68>
    1c64:	88 89       	ldd	r24, Y+16	; 0x10
    1c66:	99 89       	ldd	r25, Y+17	; 0x11
    1c68:	81 30       	cpi	r24, 0x01	; 1
    1c6a:	91 05       	cpc	r25, r1
    1c6c:	89 f0       	breq	.+34     	; 0x1c90 <MTIM_voidTimerDelay+0x7e>
    1c6e:	28 89       	ldd	r18, Y+16	; 0x10
    1c70:	39 89       	ldd	r19, Y+17	; 0x11
    1c72:	22 30       	cpi	r18, 0x02	; 2
    1c74:	31 05       	cpc	r19, r1
    1c76:	89 f0       	breq	.+34     	; 0x1c9a <MTIM_voidTimerDelay+0x88>
    1c78:	23 c0       	rjmp	.+70     	; 0x1cc0 <MTIM_voidTimerDelay+0xae>
    1c7a:	88 89       	ldd	r24, Y+16	; 0x10
    1c7c:	99 89       	ldd	r25, Y+17	; 0x11
    1c7e:	84 30       	cpi	r24, 0x04	; 4
    1c80:	91 05       	cpc	r25, r1
    1c82:	a9 f0       	breq	.+42     	; 0x1cae <MTIM_voidTimerDelay+0x9c>
    1c84:	28 89       	ldd	r18, Y+16	; 0x10
    1c86:	39 89       	ldd	r19, Y+17	; 0x11
    1c88:	25 30       	cpi	r18, 0x05	; 5
    1c8a:	31 05       	cpc	r19, r1
    1c8c:	a9 f0       	breq	.+42     	; 0x1cb8 <MTIM_voidTimerDelay+0xa6>
    1c8e:	18 c0       	rjmp	.+48     	; 0x1cc0 <MTIM_voidTimerDelay+0xae>
			{
				case MTIM_CS_PRESCALER_1:		L_u16Prescaler = 1;		 break;
    1c90:	81 e0       	ldi	r24, 0x01	; 1
    1c92:	90 e0       	ldi	r25, 0x00	; 0
    1c94:	9a 83       	std	Y+2, r25	; 0x02
    1c96:	89 83       	std	Y+1, r24	; 0x01
    1c98:	13 c0       	rjmp	.+38     	; 0x1cc0 <MTIM_voidTimerDelay+0xae>
				case MTIM_CS_PRESCALER_8:		L_u16Prescaler = 8;		 break;
    1c9a:	88 e0       	ldi	r24, 0x08	; 8
    1c9c:	90 e0       	ldi	r25, 0x00	; 0
    1c9e:	9a 83       	std	Y+2, r25	; 0x02
    1ca0:	89 83       	std	Y+1, r24	; 0x01
    1ca2:	0e c0       	rjmp	.+28     	; 0x1cc0 <MTIM_voidTimerDelay+0xae>
				case MTIM_CS_PRESCALER_64:		L_u16Prescaler = 64;	 break;		
    1ca4:	80 e4       	ldi	r24, 0x40	; 64
    1ca6:	90 e0       	ldi	r25, 0x00	; 0
    1ca8:	9a 83       	std	Y+2, r25	; 0x02
    1caa:	89 83       	std	Y+1, r24	; 0x01
    1cac:	09 c0       	rjmp	.+18     	; 0x1cc0 <MTIM_voidTimerDelay+0xae>
				case MTIM_CS_PRESCALER_256:		L_u16Prescaler = 256;	 break;
    1cae:	80 e0       	ldi	r24, 0x00	; 0
    1cb0:	91 e0       	ldi	r25, 0x01	; 1
    1cb2:	9a 83       	std	Y+2, r25	; 0x02
    1cb4:	89 83       	std	Y+1, r24	; 0x01
    1cb6:	04 c0       	rjmp	.+8      	; 0x1cc0 <MTIM_voidTimerDelay+0xae>
				case MTIM_CS_PRESCALER_1024:     L_u16Prescaler = 1024;  break;
    1cb8:	80 e0       	ldi	r24, 0x00	; 0
    1cba:	94 e0       	ldi	r25, 0x04	; 4
    1cbc:	9a 83       	std	Y+2, r25	; 0x02
    1cbe:	89 83       	std	Y+1, r24	; 0x01
				default: break; /* Report an Error */
			}
			L_f32TickTime = (f32)L_u16Prescaler / F_CPU;
    1cc0:	89 81       	ldd	r24, Y+1	; 0x01
    1cc2:	9a 81       	ldd	r25, Y+2	; 0x02
    1cc4:	cc 01       	movw	r24, r24
    1cc6:	a0 e0       	ldi	r26, 0x00	; 0
    1cc8:	b0 e0       	ldi	r27, 0x00	; 0
    1cca:	bc 01       	movw	r22, r24
    1ccc:	cd 01       	movw	r24, r26
    1cce:	0e 94 49 04 	call	0x892	; 0x892 <__floatunsisf>
    1cd2:	dc 01       	movw	r26, r24
    1cd4:	cb 01       	movw	r24, r22
    1cd6:	bc 01       	movw	r22, r24
    1cd8:	cd 01       	movw	r24, r26
    1cda:	20 e0       	ldi	r18, 0x00	; 0
    1cdc:	34 e2       	ldi	r19, 0x24	; 36
    1cde:	44 ef       	ldi	r20, 0xF4	; 244
    1ce0:	5a e4       	ldi	r21, 0x4A	; 74
    1ce2:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1ce6:	dc 01       	movw	r26, r24
    1ce8:	cb 01       	movw	r24, r22
    1cea:	8f 83       	std	Y+7, r24	; 0x07
    1cec:	98 87       	std	Y+8, r25	; 0x08
    1cee:	a9 87       	std	Y+9, r26	; 0x09
    1cf0:	ba 87       	std	Y+10, r27	; 0x0a
			L_f32OVFTime = L_f32TickTime * 256;
    1cf2:	6f 81       	ldd	r22, Y+7	; 0x07
    1cf4:	78 85       	ldd	r23, Y+8	; 0x08
    1cf6:	89 85       	ldd	r24, Y+9	; 0x09
    1cf8:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cfa:	20 e0       	ldi	r18, 0x00	; 0
    1cfc:	30 e0       	ldi	r19, 0x00	; 0
    1cfe:	40 e8       	ldi	r20, 0x80	; 128
    1d00:	53 e4       	ldi	r21, 0x43	; 67
    1d02:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1d06:	dc 01       	movw	r26, r24
    1d08:	cb 01       	movw	r24, r22
    1d0a:	8b 83       	std	Y+3, r24	; 0x03
    1d0c:	9c 83       	std	Y+4, r25	; 0x04
    1d0e:	ad 83       	std	Y+5, r26	; 0x05
    1d10:	be 83       	std	Y+6, r27	; 0x06
			MTIM_u16Timer0OVFCount = ((f32)ARG_u32Delay / 1000) / L_f32OVFTime;
    1d12:	6c 85       	ldd	r22, Y+12	; 0x0c
    1d14:	7d 85       	ldd	r23, Y+13	; 0x0d
    1d16:	8e 85       	ldd	r24, Y+14	; 0x0e
    1d18:	9f 85       	ldd	r25, Y+15	; 0x0f
    1d1a:	0e 94 49 04 	call	0x892	; 0x892 <__floatunsisf>
    1d1e:	dc 01       	movw	r26, r24
    1d20:	cb 01       	movw	r24, r22
    1d22:	bc 01       	movw	r22, r24
    1d24:	cd 01       	movw	r24, r26
    1d26:	20 e0       	ldi	r18, 0x00	; 0
    1d28:	30 e0       	ldi	r19, 0x00	; 0
    1d2a:	4a e7       	ldi	r20, 0x7A	; 122
    1d2c:	54 e4       	ldi	r21, 0x44	; 68
    1d2e:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1d32:	dc 01       	movw	r26, r24
    1d34:	cb 01       	movw	r24, r22
    1d36:	bc 01       	movw	r22, r24
    1d38:	cd 01       	movw	r24, r26
    1d3a:	2b 81       	ldd	r18, Y+3	; 0x03
    1d3c:	3c 81       	ldd	r19, Y+4	; 0x04
    1d3e:	4d 81       	ldd	r20, Y+5	; 0x05
    1d40:	5e 81       	ldd	r21, Y+6	; 0x06
    1d42:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1d46:	dc 01       	movw	r26, r24
    1d48:	cb 01       	movw	r24, r22
    1d4a:	bc 01       	movw	r22, r24
    1d4c:	cd 01       	movw	r24, r26
    1d4e:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d52:	dc 01       	movw	r26, r24
    1d54:	cb 01       	movw	r24, r22
    1d56:	90 93 6c 01 	sts	0x016C, r25
    1d5a:	80 93 6b 01 	sts	0x016B, r24
			MTIM_u8Timer0Preload = 256 - ((ARG_u32Delay / 1000) % (u32)L_f32OVFTime);
    1d5e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1d60:	9d 85       	ldd	r25, Y+13	; 0x0d
    1d62:	ae 85       	ldd	r26, Y+14	; 0x0e
    1d64:	bf 85       	ldd	r27, Y+15	; 0x0f
    1d66:	28 ee       	ldi	r18, 0xE8	; 232
    1d68:	33 e0       	ldi	r19, 0x03	; 3
    1d6a:	40 e0       	ldi	r20, 0x00	; 0
    1d6c:	50 e0       	ldi	r21, 0x00	; 0
    1d6e:	bc 01       	movw	r22, r24
    1d70:	cd 01       	movw	r24, r26
    1d72:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__udivmodsi4>
    1d76:	da 01       	movw	r26, r20
    1d78:	c9 01       	movw	r24, r18
    1d7a:	7c 01       	movw	r14, r24
    1d7c:	8d 01       	movw	r16, r26
    1d7e:	6b 81       	ldd	r22, Y+3	; 0x03
    1d80:	7c 81       	ldd	r23, Y+4	; 0x04
    1d82:	8d 81       	ldd	r24, Y+5	; 0x05
    1d84:	9e 81       	ldd	r25, Y+6	; 0x06
    1d86:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1d8a:	9b 01       	movw	r18, r22
    1d8c:	ac 01       	movw	r20, r24
    1d8e:	c8 01       	movw	r24, r16
    1d90:	b7 01       	movw	r22, r14
    1d92:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__udivmodsi4>
    1d96:	dc 01       	movw	r26, r24
    1d98:	cb 01       	movw	r24, r22
    1d9a:	81 95       	neg	r24
    1d9c:	80 93 6d 01 	sts	0x016D, r24
			TCNT0 = MTIM_u8Timer0Preload;
    1da0:	e2 e5       	ldi	r30, 0x52	; 82
    1da2:	f0 e0       	ldi	r31, 0x00	; 0
    1da4:	80 91 6d 01 	lds	r24, 0x016D
    1da8:	80 83       	st	Z, r24
		}
		case MTIM_TIMER1: break;
		case MTIM_TIMER2: break;
		default: break; /* Report an Error */
	}
}
    1daa:	61 96       	adiw	r28, 0x11	; 17
    1dac:	0f b6       	in	r0, 0x3f	; 63
    1dae:	f8 94       	cli
    1db0:	de bf       	out	0x3e, r29	; 62
    1db2:	0f be       	out	0x3f, r0	; 63
    1db4:	cd bf       	out	0x3d, r28	; 61
    1db6:	cf 91       	pop	r28
    1db8:	df 91       	pop	r29
    1dba:	1f 91       	pop	r17
    1dbc:	0f 91       	pop	r16
    1dbe:	ff 90       	pop	r15
    1dc0:	ef 90       	pop	r14
    1dc2:	08 95       	ret

00001dc4 <__vector_11>:

void __vector_11(void) __attribute__((signal));
void __vector_11(void)	/* T0 OVF Vector */
{
    1dc4:	1f 92       	push	r1
    1dc6:	0f 92       	push	r0
    1dc8:	0f b6       	in	r0, 0x3f	; 63
    1dca:	0f 92       	push	r0
    1dcc:	11 24       	eor	r1, r1
    1dce:	2f 93       	push	r18
    1dd0:	3f 93       	push	r19
    1dd2:	4f 93       	push	r20
    1dd4:	5f 93       	push	r21
    1dd6:	6f 93       	push	r22
    1dd8:	7f 93       	push	r23
    1dda:	8f 93       	push	r24
    1ddc:	9f 93       	push	r25
    1dde:	af 93       	push	r26
    1de0:	bf 93       	push	r27
    1de2:	ef 93       	push	r30
    1de4:	ff 93       	push	r31
    1de6:	df 93       	push	r29
    1de8:	cf 93       	push	r28
    1dea:	cd b7       	in	r28, 0x3d	; 61
    1dec:	de b7       	in	r29, 0x3e	; 62
	static volatile u16 L_u16OVFCounter = 0;
	L_u16OVFCounter++;
    1dee:	80 91 72 01 	lds	r24, 0x0172
    1df2:	90 91 73 01 	lds	r25, 0x0173
    1df6:	01 96       	adiw	r24, 0x01	; 1
    1df8:	90 93 73 01 	sts	0x0173, r25
    1dfc:	80 93 72 01 	sts	0x0172, r24
	if(L_u16OVFCounter == (MTIM_u16Timer0OVFCount+1))
    1e00:	80 91 6b 01 	lds	r24, 0x016B
    1e04:	90 91 6c 01 	lds	r25, 0x016C
    1e08:	9c 01       	movw	r18, r24
    1e0a:	2f 5f       	subi	r18, 0xFF	; 255
    1e0c:	3f 4f       	sbci	r19, 0xFF	; 255
    1e0e:	80 91 72 01 	lds	r24, 0x0172
    1e12:	90 91 73 01 	lds	r25, 0x0173
    1e16:	28 17       	cp	r18, r24
    1e18:	39 07       	cpc	r19, r25
    1e1a:	a1 f4       	brne	.+40     	; 0x1e44 <__vector_11+0x80>
	{
		TCNT0 = MTIM_u8Timer0Preload;
    1e1c:	e2 e5       	ldi	r30, 0x52	; 82
    1e1e:	f0 e0       	ldi	r31, 0x00	; 0
    1e20:	80 91 6d 01 	lds	r24, 0x016D
    1e24:	80 83       	st	Z, r24
		L_u16OVFCounter = 0;
    1e26:	10 92 73 01 	sts	0x0173, r1
    1e2a:	10 92 72 01 	sts	0x0172, r1
		if(MTIM_pvoidfUserFunctionT0OVF!=NULL_POINTER)
    1e2e:	80 91 6e 01 	lds	r24, 0x016E
    1e32:	90 91 6f 01 	lds	r25, 0x016F
    1e36:	00 97       	sbiw	r24, 0x00	; 0
    1e38:	29 f0       	breq	.+10     	; 0x1e44 <__vector_11+0x80>
		{
			(*MTIM_pvoidfUserFunctionT0OVF)();
    1e3a:	e0 91 6e 01 	lds	r30, 0x016E
    1e3e:	f0 91 6f 01 	lds	r31, 0x016F
    1e42:	09 95       	icall
	}
	else
	{
		/* Do nothing (MISRA) */
	}
    1e44:	cf 91       	pop	r28
    1e46:	df 91       	pop	r29
    1e48:	ff 91       	pop	r31
    1e4a:	ef 91       	pop	r30
    1e4c:	bf 91       	pop	r27
    1e4e:	af 91       	pop	r26
    1e50:	9f 91       	pop	r25
    1e52:	8f 91       	pop	r24
    1e54:	7f 91       	pop	r23
    1e56:	6f 91       	pop	r22
    1e58:	5f 91       	pop	r21
    1e5a:	4f 91       	pop	r20
    1e5c:	3f 91       	pop	r19
    1e5e:	2f 91       	pop	r18
    1e60:	0f 90       	pop	r0
    1e62:	0f be       	out	0x3f, r0	; 63
    1e64:	0f 90       	pop	r0
    1e66:	1f 90       	pop	r1
    1e68:	18 95       	reti

00001e6a <main>:
#include "MDIO_interface.h"
#include "MADC_interface.h"
#include "MTIM_interface.h"

int main(void)
{
    1e6a:	df 93       	push	r29
    1e6c:	cf 93       	push	r28
    1e6e:	00 d0       	rcall	.+0      	; 0x1e70 <main+0x6>
    1e70:	cd b7       	in	r28, 0x3d	; 61
    1e72:	de b7       	in	r29, 0x3e	; 62
	u8 L_u8ADCValue = 0;
    1e74:	1a 82       	std	Y+2, r1	; 0x02
	u8 L_u8OCRValue = 0;
    1e76:	19 82       	std	Y+1, r1	; 0x01

	MDIO_voidSetPinDirection(MDIO_PORTD,7,MDIO_OUTPUT);
    1e78:	85 e0       	ldi	r24, 0x05	; 5
    1e7a:	67 e0       	ldi	r22, 0x07	; 7
    1e7c:	4a e5       	ldi	r20, 0x5A	; 90
    1e7e:	0e 94 aa 08 	call	0x1154	; 0x1154 <MDIO_voidSetPinDirection>


	MDIO_voidSetPinDirection(MDIO_PORTB, 3, MDIO_OUTPUT);
    1e82:	81 e2       	ldi	r24, 0x21	; 33
    1e84:	63 e0       	ldi	r22, 0x03	; 3
    1e86:	4a e5       	ldi	r20, 0x5A	; 90
    1e88:	0e 94 aa 08 	call	0x1154	; 0x1154 <MDIO_voidSetPinDirection>
	MADC_voidInit(MADC_VREF_AVCC, MADC_PRESCALER_8, MADC_RESOLUTION_8BITS);
    1e8c:	81 e0       	ldi	r24, 0x01	; 1
    1e8e:	63 e0       	ldi	r22, 0x03	; 3
    1e90:	41 e0       	ldi	r20, 0x01	; 1
    1e92:	0e 94 b7 06 	call	0xd6e	; 0xd6e <MADC_voidInit>
	MTIM_voidInit(MTIM_TIMER0, MTIM_MODE_PHASECORRECTPWM, MTIM_CS_PRESCALER_256, MTIM_HWPIN_NONINVERTING_PWM);
    1e96:	80 e0       	ldi	r24, 0x00	; 0
    1e98:	63 e0       	ldi	r22, 0x03	; 3
    1e9a:	44 e0       	ldi	r20, 0x04	; 4
    1e9c:	22 e0       	ldi	r18, 0x02	; 2
    1e9e:	0e 94 a4 0c 	call	0x1948	; 0x1948 <MTIM_voidInit>
	MTIM_voidStartTimer(MTIM_TIMER0);
    1ea2:	80 e0       	ldi	r24, 0x00	; 0
    1ea4:	0e 94 c1 0d 	call	0x1b82	; 0x1b82 <MTIM_voidStartTimer>
	while(1)
	{

		MDIO_voidSetPinValue(MDIO_PORTD,7,MDIO_HIGH);
    1ea8:	85 e0       	ldi	r24, 0x05	; 5
    1eaa:	67 e0       	ldi	r22, 0x07	; 7
    1eac:	41 e0       	ldi	r20, 0x01	; 1
    1eae:	0e 94 90 0a 	call	0x1520	; 0x1520 <MDIO_voidSetPinValue>


		L_u8ADCValue = MADC_u8ReadADC(MADC_CHANNEL_ADC0);
    1eb2:	80 e0       	ldi	r24, 0x00	; 0
    1eb4:	0e 94 49 07 	call	0xe92	; 0xe92 <MADC_u8ReadADC>
    1eb8:	8a 83       	std	Y+2, r24	; 0x02
		L_u8OCRValue = (((f32)L_u8ADCValue*15)/255)+16;
    1eba:	8a 81       	ldd	r24, Y+2	; 0x02
    1ebc:	88 2f       	mov	r24, r24
    1ebe:	90 e0       	ldi	r25, 0x00	; 0
    1ec0:	a0 e0       	ldi	r26, 0x00	; 0
    1ec2:	b0 e0       	ldi	r27, 0x00	; 0
    1ec4:	bc 01       	movw	r22, r24
    1ec6:	cd 01       	movw	r24, r26
    1ec8:	0e 94 49 04 	call	0x892	; 0x892 <__floatunsisf>
    1ecc:	dc 01       	movw	r26, r24
    1ece:	cb 01       	movw	r24, r22
    1ed0:	bc 01       	movw	r22, r24
    1ed2:	cd 01       	movw	r24, r26
    1ed4:	20 e0       	ldi	r18, 0x00	; 0
    1ed6:	30 e0       	ldi	r19, 0x00	; 0
    1ed8:	40 e7       	ldi	r20, 0x70	; 112
    1eda:	51 e4       	ldi	r21, 0x41	; 65
    1edc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ee0:	dc 01       	movw	r26, r24
    1ee2:	cb 01       	movw	r24, r22
    1ee4:	bc 01       	movw	r22, r24
    1ee6:	cd 01       	movw	r24, r26
    1ee8:	20 e0       	ldi	r18, 0x00	; 0
    1eea:	30 e0       	ldi	r19, 0x00	; 0
    1eec:	4f e7       	ldi	r20, 0x7F	; 127
    1eee:	53 e4       	ldi	r21, 0x43	; 67
    1ef0:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1ef4:	dc 01       	movw	r26, r24
    1ef6:	cb 01       	movw	r24, r22
    1ef8:	bc 01       	movw	r22, r24
    1efa:	cd 01       	movw	r24, r26
    1efc:	20 e0       	ldi	r18, 0x00	; 0
    1efe:	30 e0       	ldi	r19, 0x00	; 0
    1f00:	40 e8       	ldi	r20, 0x80	; 128
    1f02:	51 e4       	ldi	r21, 0x41	; 65
    1f04:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__addsf3>
    1f08:	dc 01       	movw	r26, r24
    1f0a:	cb 01       	movw	r24, r22
    1f0c:	bc 01       	movw	r22, r24
    1f0e:	cd 01       	movw	r24, r26
    1f10:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1f14:	dc 01       	movw	r26, r24
    1f16:	cb 01       	movw	r24, r22
    1f18:	89 83       	std	Y+1, r24	; 0x01
		MTIM_voidSetOCR(MTIM_TIMER0, L_u8OCRValue);
    1f1a:	89 81       	ldd	r24, Y+1	; 0x01
    1f1c:	28 2f       	mov	r18, r24
    1f1e:	30 e0       	ldi	r19, 0x00	; 0
    1f20:	80 e0       	ldi	r24, 0x00	; 0
    1f22:	b9 01       	movw	r22, r18
    1f24:	0e 94 f1 0d 	call	0x1be2	; 0x1be2 <MTIM_voidSetOCR>
    1f28:	bf cf       	rjmp	.-130    	; 0x1ea8 <main+0x3e>

00001f2a <__udivmodsi4>:
    1f2a:	a1 e2       	ldi	r26, 0x21	; 33
    1f2c:	1a 2e       	mov	r1, r26
    1f2e:	aa 1b       	sub	r26, r26
    1f30:	bb 1b       	sub	r27, r27
    1f32:	fd 01       	movw	r30, r26
    1f34:	0d c0       	rjmp	.+26     	; 0x1f50 <__udivmodsi4_ep>

00001f36 <__udivmodsi4_loop>:
    1f36:	aa 1f       	adc	r26, r26
    1f38:	bb 1f       	adc	r27, r27
    1f3a:	ee 1f       	adc	r30, r30
    1f3c:	ff 1f       	adc	r31, r31
    1f3e:	a2 17       	cp	r26, r18
    1f40:	b3 07       	cpc	r27, r19
    1f42:	e4 07       	cpc	r30, r20
    1f44:	f5 07       	cpc	r31, r21
    1f46:	20 f0       	brcs	.+8      	; 0x1f50 <__udivmodsi4_ep>
    1f48:	a2 1b       	sub	r26, r18
    1f4a:	b3 0b       	sbc	r27, r19
    1f4c:	e4 0b       	sbc	r30, r20
    1f4e:	f5 0b       	sbc	r31, r21

00001f50 <__udivmodsi4_ep>:
    1f50:	66 1f       	adc	r22, r22
    1f52:	77 1f       	adc	r23, r23
    1f54:	88 1f       	adc	r24, r24
    1f56:	99 1f       	adc	r25, r25
    1f58:	1a 94       	dec	r1
    1f5a:	69 f7       	brne	.-38     	; 0x1f36 <__udivmodsi4_loop>
    1f5c:	60 95       	com	r22
    1f5e:	70 95       	com	r23
    1f60:	80 95       	com	r24
    1f62:	90 95       	com	r25
    1f64:	9b 01       	movw	r18, r22
    1f66:	ac 01       	movw	r20, r24
    1f68:	bd 01       	movw	r22, r26
    1f6a:	cf 01       	movw	r24, r30
    1f6c:	08 95       	ret

00001f6e <__prologue_saves__>:
    1f6e:	2f 92       	push	r2
    1f70:	3f 92       	push	r3
    1f72:	4f 92       	push	r4
    1f74:	5f 92       	push	r5
    1f76:	6f 92       	push	r6
    1f78:	7f 92       	push	r7
    1f7a:	8f 92       	push	r8
    1f7c:	9f 92       	push	r9
    1f7e:	af 92       	push	r10
    1f80:	bf 92       	push	r11
    1f82:	cf 92       	push	r12
    1f84:	df 92       	push	r13
    1f86:	ef 92       	push	r14
    1f88:	ff 92       	push	r15
    1f8a:	0f 93       	push	r16
    1f8c:	1f 93       	push	r17
    1f8e:	cf 93       	push	r28
    1f90:	df 93       	push	r29
    1f92:	cd b7       	in	r28, 0x3d	; 61
    1f94:	de b7       	in	r29, 0x3e	; 62
    1f96:	ca 1b       	sub	r28, r26
    1f98:	db 0b       	sbc	r29, r27
    1f9a:	0f b6       	in	r0, 0x3f	; 63
    1f9c:	f8 94       	cli
    1f9e:	de bf       	out	0x3e, r29	; 62
    1fa0:	0f be       	out	0x3f, r0	; 63
    1fa2:	cd bf       	out	0x3d, r28	; 61
    1fa4:	09 94       	ijmp

00001fa6 <__epilogue_restores__>:
    1fa6:	2a 88       	ldd	r2, Y+18	; 0x12
    1fa8:	39 88       	ldd	r3, Y+17	; 0x11
    1faa:	48 88       	ldd	r4, Y+16	; 0x10
    1fac:	5f 84       	ldd	r5, Y+15	; 0x0f
    1fae:	6e 84       	ldd	r6, Y+14	; 0x0e
    1fb0:	7d 84       	ldd	r7, Y+13	; 0x0d
    1fb2:	8c 84       	ldd	r8, Y+12	; 0x0c
    1fb4:	9b 84       	ldd	r9, Y+11	; 0x0b
    1fb6:	aa 84       	ldd	r10, Y+10	; 0x0a
    1fb8:	b9 84       	ldd	r11, Y+9	; 0x09
    1fba:	c8 84       	ldd	r12, Y+8	; 0x08
    1fbc:	df 80       	ldd	r13, Y+7	; 0x07
    1fbe:	ee 80       	ldd	r14, Y+6	; 0x06
    1fc0:	fd 80       	ldd	r15, Y+5	; 0x05
    1fc2:	0c 81       	ldd	r16, Y+4	; 0x04
    1fc4:	1b 81       	ldd	r17, Y+3	; 0x03
    1fc6:	aa 81       	ldd	r26, Y+2	; 0x02
    1fc8:	b9 81       	ldd	r27, Y+1	; 0x01
    1fca:	ce 0f       	add	r28, r30
    1fcc:	d1 1d       	adc	r29, r1
    1fce:	0f b6       	in	r0, 0x3f	; 63
    1fd0:	f8 94       	cli
    1fd2:	de bf       	out	0x3e, r29	; 62
    1fd4:	0f be       	out	0x3f, r0	; 63
    1fd6:	cd bf       	out	0x3d, r28	; 61
    1fd8:	ed 01       	movw	r28, r26
    1fda:	08 95       	ret

00001fdc <_exit>:
    1fdc:	f8 94       	cli

00001fde <__stop_program>:
    1fde:	ff cf       	rjmp	.-2      	; 0x1fde <__stop_program>
