
LEDS_ANIMATION.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001c46  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00001c46  00001cda  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800068  00800068  00001ce2  2**0
                  ALLOC
  3 .stab         000010a4  00000000  00000000  00001ce4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000b08  00000000  00000000  00002d88  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00003890  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  000039d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  00003b40  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00005789  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  00006674  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00007424  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00007584  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  00007811  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00007fdf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 e7 0b 	jmp	0x17ce	; 0x17ce <__vector_1>
       8:	0c 94 1a 0c 	jmp	0x1834	; 0x1834 <__vector_2>
       c:	0c 94 4d 0c 	jmp	0x189a	; 0x189a <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	ae 36       	cpi	r26, 0x6E	; 110
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e6 e4       	ldi	r30, 0x46	; 70
      78:	fc e1       	ldi	r31, 0x1C	; 28
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 9c 0c 	call	0x1938	; 0x1938 <main>
      8a:	0c 94 21 0e 	jmp	0x1c42	; 0x1c42 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 ea 0d 	jmp	0x1bd4	; 0x1bd4 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a0 e6       	ldi	r26, 0x60	; 96
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 06 0e 	jmp	0x1c0c	; 0x1c0c <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 12 0e 	jmp	0x1c24	; 0x1c24 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 12 0e 	jmp	0x1c24	; 0x1c24 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 ea 0d 	jmp	0x1bd4	; 0x1bd4 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	80 e6       	ldi	r24, 0x60	; 96
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 06 0e 	jmp	0x1c0c	; 0x1c0c <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 12 0e 	jmp	0x1c24	; 0x1c24 <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 12 0e 	jmp	0x1c24	; 0x1c24 <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 12 0e 	jmp	0x1c24	; 0x1c24 <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 fa 0d 	jmp	0x1bf4	; 0x1bf4 <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 16 0e 	jmp	0x1c2c	; 0x1c2c <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <MDIO_voidSetPortDirection>:

#include "MDIO_private.h"
#include "MDIO_interface.h"

void MDIO_voidSetPortDirection(u8 ARG_u8Port,u8 ARG_u8Directoin)
{
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	00 d0       	rcall	.+0      	; 0xb4c <MDIO_voidSetPortDirection+0x6>
     b4c:	00 d0       	rcall	.+0      	; 0xb4e <MDIO_voidSetPortDirection+0x8>
     b4e:	cd b7       	in	r28, 0x3d	; 61
     b50:	de b7       	in	r29, 0x3e	; 62
     b52:	89 83       	std	Y+1, r24	; 0x01
     b54:	6a 83       	std	Y+2, r22	; 0x02
	switch(ARG_u8Port)
     b56:	89 81       	ldd	r24, Y+1	; 0x01
     b58:	28 2f       	mov	r18, r24
     b5a:	30 e0       	ldi	r19, 0x00	; 0
     b5c:	3c 83       	std	Y+4, r19	; 0x04
     b5e:	2b 83       	std	Y+3, r18	; 0x03
     b60:	8b 81       	ldd	r24, Y+3	; 0x03
     b62:	9c 81       	ldd	r25, Y+4	; 0x04
     b64:	8c 30       	cpi	r24, 0x0C	; 12
     b66:	91 05       	cpc	r25, r1
     b68:	b1 f0       	breq	.+44     	; 0xb96 <MDIO_voidSetPortDirection+0x50>
     b6a:	2b 81       	ldd	r18, Y+3	; 0x03
     b6c:	3c 81       	ldd	r19, Y+4	; 0x04
     b6e:	2d 30       	cpi	r18, 0x0D	; 13
     b70:	31 05       	cpc	r19, r1
     b72:	34 f4       	brge	.+12     	; 0xb80 <MDIO_voidSetPortDirection+0x3a>
     b74:	8b 81       	ldd	r24, Y+3	; 0x03
     b76:	9c 81       	ldd	r25, Y+4	; 0x04
     b78:	85 30       	cpi	r24, 0x05	; 5
     b7a:	91 05       	cpc	r25, r1
     b7c:	d9 f0       	breq	.+54     	; 0xbb4 <MDIO_voidSetPortDirection+0x6e>
     b7e:	1e c0       	rjmp	.+60     	; 0xbbc <MDIO_voidSetPortDirection+0x76>
     b80:	2b 81       	ldd	r18, Y+3	; 0x03
     b82:	3c 81       	ldd	r19, Y+4	; 0x04
     b84:	21 32       	cpi	r18, 0x21	; 33
     b86:	31 05       	cpc	r19, r1
     b88:	59 f0       	breq	.+22     	; 0xba0 <MDIO_voidSetPortDirection+0x5a>
     b8a:	8b 81       	ldd	r24, Y+3	; 0x03
     b8c:	9c 81       	ldd	r25, Y+4	; 0x04
     b8e:	88 32       	cpi	r24, 0x28	; 40
     b90:	91 05       	cpc	r25, r1
     b92:	59 f0       	breq	.+22     	; 0xbaa <MDIO_voidSetPortDirection+0x64>
     b94:	13 c0       	rjmp	.+38     	; 0xbbc <MDIO_voidSetPortDirection+0x76>
	{
		case MDIO_PORTA : GPIOA -> DDR = ARG_u8Directoin; break ;
     b96:	e9 e3       	ldi	r30, 0x39	; 57
     b98:	f0 e0       	ldi	r31, 0x00	; 0
     b9a:	8a 81       	ldd	r24, Y+2	; 0x02
     b9c:	81 83       	std	Z+1, r24	; 0x01
     b9e:	0e c0       	rjmp	.+28     	; 0xbbc <MDIO_voidSetPortDirection+0x76>
		
		case MDIO_PORTB : GPIOB -> DDR = ARG_u8Directoin; break ;
     ba0:	e6 e3       	ldi	r30, 0x36	; 54
     ba2:	f0 e0       	ldi	r31, 0x00	; 0
     ba4:	8a 81       	ldd	r24, Y+2	; 0x02
     ba6:	81 83       	std	Z+1, r24	; 0x01
     ba8:	09 c0       	rjmp	.+18     	; 0xbbc <MDIO_voidSetPortDirection+0x76>
		
		case MDIO_PORTC : GPIOC -> DDR = ARG_u8Directoin; break ;
     baa:	e3 e3       	ldi	r30, 0x33	; 51
     bac:	f0 e0       	ldi	r31, 0x00	; 0
     bae:	8a 81       	ldd	r24, Y+2	; 0x02
     bb0:	81 83       	std	Z+1, r24	; 0x01
     bb2:	04 c0       	rjmp	.+8      	; 0xbbc <MDIO_voidSetPortDirection+0x76>
		
		case MDIO_PORTD : GPIOD -> DDR = ARG_u8Directoin; break ;
     bb4:	e0 e3       	ldi	r30, 0x30	; 48
     bb6:	f0 e0       	ldi	r31, 0x00	; 0
     bb8:	8a 81       	ldd	r24, Y+2	; 0x02
     bba:	81 83       	std	Z+1, r24	; 0x01
		
		default: break;
		
	}
}
     bbc:	0f 90       	pop	r0
     bbe:	0f 90       	pop	r0
     bc0:	0f 90       	pop	r0
     bc2:	0f 90       	pop	r0
     bc4:	cf 91       	pop	r28
     bc6:	df 91       	pop	r29
     bc8:	08 95       	ret

00000bca <MDIO_voidSetPortValue>:
void MDIO_voidSetPortValue(u8 ARG_u8Port,u8 ARG_u8Value)
{
     bca:	df 93       	push	r29
     bcc:	cf 93       	push	r28
     bce:	00 d0       	rcall	.+0      	; 0xbd0 <MDIO_voidSetPortValue+0x6>
     bd0:	00 d0       	rcall	.+0      	; 0xbd2 <MDIO_voidSetPortValue+0x8>
     bd2:	cd b7       	in	r28, 0x3d	; 61
     bd4:	de b7       	in	r29, 0x3e	; 62
     bd6:	89 83       	std	Y+1, r24	; 0x01
     bd8:	6a 83       	std	Y+2, r22	; 0x02
	switch(ARG_u8Port)
     bda:	89 81       	ldd	r24, Y+1	; 0x01
     bdc:	28 2f       	mov	r18, r24
     bde:	30 e0       	ldi	r19, 0x00	; 0
     be0:	3c 83       	std	Y+4, r19	; 0x04
     be2:	2b 83       	std	Y+3, r18	; 0x03
     be4:	8b 81       	ldd	r24, Y+3	; 0x03
     be6:	9c 81       	ldd	r25, Y+4	; 0x04
     be8:	8c 30       	cpi	r24, 0x0C	; 12
     bea:	91 05       	cpc	r25, r1
     bec:	b1 f0       	breq	.+44     	; 0xc1a <MDIO_voidSetPortValue+0x50>
     bee:	2b 81       	ldd	r18, Y+3	; 0x03
     bf0:	3c 81       	ldd	r19, Y+4	; 0x04
     bf2:	2d 30       	cpi	r18, 0x0D	; 13
     bf4:	31 05       	cpc	r19, r1
     bf6:	34 f4       	brge	.+12     	; 0xc04 <MDIO_voidSetPortValue+0x3a>
     bf8:	8b 81       	ldd	r24, Y+3	; 0x03
     bfa:	9c 81       	ldd	r25, Y+4	; 0x04
     bfc:	85 30       	cpi	r24, 0x05	; 5
     bfe:	91 05       	cpc	r25, r1
     c00:	d9 f0       	breq	.+54     	; 0xc38 <MDIO_voidSetPortValue+0x6e>
     c02:	1e c0       	rjmp	.+60     	; 0xc40 <MDIO_voidSetPortValue+0x76>
     c04:	2b 81       	ldd	r18, Y+3	; 0x03
     c06:	3c 81       	ldd	r19, Y+4	; 0x04
     c08:	21 32       	cpi	r18, 0x21	; 33
     c0a:	31 05       	cpc	r19, r1
     c0c:	59 f0       	breq	.+22     	; 0xc24 <MDIO_voidSetPortValue+0x5a>
     c0e:	8b 81       	ldd	r24, Y+3	; 0x03
     c10:	9c 81       	ldd	r25, Y+4	; 0x04
     c12:	88 32       	cpi	r24, 0x28	; 40
     c14:	91 05       	cpc	r25, r1
     c16:	59 f0       	breq	.+22     	; 0xc2e <MDIO_voidSetPortValue+0x64>
     c18:	13 c0       	rjmp	.+38     	; 0xc40 <MDIO_voidSetPortValue+0x76>
	{
		case MDIO_PORTA : GPIOA -> PORT = ARG_u8Value; break ;
     c1a:	e9 e3       	ldi	r30, 0x39	; 57
     c1c:	f0 e0       	ldi	r31, 0x00	; 0
     c1e:	8a 81       	ldd	r24, Y+2	; 0x02
     c20:	82 83       	std	Z+2, r24	; 0x02
     c22:	0e c0       	rjmp	.+28     	; 0xc40 <MDIO_voidSetPortValue+0x76>
		
		case MDIO_PORTB : GPIOB -> PORT = ARG_u8Value; break ;
     c24:	e6 e3       	ldi	r30, 0x36	; 54
     c26:	f0 e0       	ldi	r31, 0x00	; 0
     c28:	8a 81       	ldd	r24, Y+2	; 0x02
     c2a:	82 83       	std	Z+2, r24	; 0x02
     c2c:	09 c0       	rjmp	.+18     	; 0xc40 <MDIO_voidSetPortValue+0x76>
		
		case MDIO_PORTC : GPIOC -> PORT = ARG_u8Value; break ;
     c2e:	e3 e3       	ldi	r30, 0x33	; 51
     c30:	f0 e0       	ldi	r31, 0x00	; 0
     c32:	8a 81       	ldd	r24, Y+2	; 0x02
     c34:	82 83       	std	Z+2, r24	; 0x02
     c36:	04 c0       	rjmp	.+8      	; 0xc40 <MDIO_voidSetPortValue+0x76>
		
		case MDIO_PORTD : GPIOD -> PORT = ARG_u8Value; break ;
     c38:	e0 e3       	ldi	r30, 0x30	; 48
     c3a:	f0 e0       	ldi	r31, 0x00	; 0
     c3c:	8a 81       	ldd	r24, Y+2	; 0x02
     c3e:	82 83       	std	Z+2, r24	; 0x02
		
		default: break;
		
	}	
}
     c40:	0f 90       	pop	r0
     c42:	0f 90       	pop	r0
     c44:	0f 90       	pop	r0
     c46:	0f 90       	pop	r0
     c48:	cf 91       	pop	r28
     c4a:	df 91       	pop	r29
     c4c:	08 95       	ret

00000c4e <MDIO_voidGetPortValue>:
u8	 MDIO_voidGetPortValue(u8 ARG_u8Port)
{
     c4e:	df 93       	push	r29
     c50:	cf 93       	push	r28
     c52:	00 d0       	rcall	.+0      	; 0xc54 <MDIO_voidGetPortValue+0x6>
     c54:	00 d0       	rcall	.+0      	; 0xc56 <MDIO_voidGetPortValue+0x8>
     c56:	cd b7       	in	r28, 0x3d	; 61
     c58:	de b7       	in	r29, 0x3e	; 62
     c5a:	8a 83       	std	Y+2, r24	; 0x02
	u8 L_u8Value = 0;
     c5c:	19 82       	std	Y+1, r1	; 0x01
		switch(ARG_u8Port)
     c5e:	8a 81       	ldd	r24, Y+2	; 0x02
     c60:	28 2f       	mov	r18, r24
     c62:	30 e0       	ldi	r19, 0x00	; 0
     c64:	3c 83       	std	Y+4, r19	; 0x04
     c66:	2b 83       	std	Y+3, r18	; 0x03
     c68:	8b 81       	ldd	r24, Y+3	; 0x03
     c6a:	9c 81       	ldd	r25, Y+4	; 0x04
     c6c:	8c 30       	cpi	r24, 0x0C	; 12
     c6e:	91 05       	cpc	r25, r1
     c70:	b1 f0       	breq	.+44     	; 0xc9e <MDIO_voidGetPortValue+0x50>
     c72:	2b 81       	ldd	r18, Y+3	; 0x03
     c74:	3c 81       	ldd	r19, Y+4	; 0x04
     c76:	2d 30       	cpi	r18, 0x0D	; 13
     c78:	31 05       	cpc	r19, r1
     c7a:	34 f4       	brge	.+12     	; 0xc88 <MDIO_voidGetPortValue+0x3a>
     c7c:	8b 81       	ldd	r24, Y+3	; 0x03
     c7e:	9c 81       	ldd	r25, Y+4	; 0x04
     c80:	85 30       	cpi	r24, 0x05	; 5
     c82:	91 05       	cpc	r25, r1
     c84:	d9 f0       	breq	.+54     	; 0xcbc <MDIO_voidGetPortValue+0x6e>
     c86:	1e c0       	rjmp	.+60     	; 0xcc4 <MDIO_voidGetPortValue+0x76>
     c88:	2b 81       	ldd	r18, Y+3	; 0x03
     c8a:	3c 81       	ldd	r19, Y+4	; 0x04
     c8c:	21 32       	cpi	r18, 0x21	; 33
     c8e:	31 05       	cpc	r19, r1
     c90:	59 f0       	breq	.+22     	; 0xca8 <MDIO_voidGetPortValue+0x5a>
     c92:	8b 81       	ldd	r24, Y+3	; 0x03
     c94:	9c 81       	ldd	r25, Y+4	; 0x04
     c96:	88 32       	cpi	r24, 0x28	; 40
     c98:	91 05       	cpc	r25, r1
     c9a:	59 f0       	breq	.+22     	; 0xcb2 <MDIO_voidGetPortValue+0x64>
     c9c:	13 c0       	rjmp	.+38     	; 0xcc4 <MDIO_voidGetPortValue+0x76>
	{
		case MDIO_PORTA : L_u8Value = GPIOA -> PIN; break ;
     c9e:	e9 e3       	ldi	r30, 0x39	; 57
     ca0:	f0 e0       	ldi	r31, 0x00	; 0
     ca2:	80 81       	ld	r24, Z
     ca4:	89 83       	std	Y+1, r24	; 0x01
     ca6:	0e c0       	rjmp	.+28     	; 0xcc4 <MDIO_voidGetPortValue+0x76>
		
		case MDIO_PORTB : L_u8Value = GPIOB -> PIN; break ;
     ca8:	e6 e3       	ldi	r30, 0x36	; 54
     caa:	f0 e0       	ldi	r31, 0x00	; 0
     cac:	80 81       	ld	r24, Z
     cae:	89 83       	std	Y+1, r24	; 0x01
     cb0:	09 c0       	rjmp	.+18     	; 0xcc4 <MDIO_voidGetPortValue+0x76>
		
		case MDIO_PORTC : L_u8Value = GPIOC -> PIN; break ;
     cb2:	e3 e3       	ldi	r30, 0x33	; 51
     cb4:	f0 e0       	ldi	r31, 0x00	; 0
     cb6:	80 81       	ld	r24, Z
     cb8:	89 83       	std	Y+1, r24	; 0x01
     cba:	04 c0       	rjmp	.+8      	; 0xcc4 <MDIO_voidGetPortValue+0x76>
		
		case MDIO_PORTD : L_u8Value = GPIOD -> PIN; break ;
     cbc:	e0 e3       	ldi	r30, 0x30	; 48
     cbe:	f0 e0       	ldi	r31, 0x00	; 0
     cc0:	80 81       	ld	r24, Z
     cc2:	89 83       	std	Y+1, r24	; 0x01
		
		default: break;
		
	}
	return L_u8Value;
     cc4:	89 81       	ldd	r24, Y+1	; 0x01
}
     cc6:	0f 90       	pop	r0
     cc8:	0f 90       	pop	r0
     cca:	0f 90       	pop	r0
     ccc:	0f 90       	pop	r0
     cce:	cf 91       	pop	r28
     cd0:	df 91       	pop	r29
     cd2:	08 95       	ret

00000cd4 <MDIO_voidSetPinDirection>:

void MDIO_voidSetPinDirection(u8 ARG_u8Port,u8 ARG_u8Pin,u8 ARG_u8Directoin)
{
     cd4:	df 93       	push	r29
     cd6:	cf 93       	push	r28
     cd8:	cd b7       	in	r28, 0x3d	; 61
     cda:	de b7       	in	r29, 0x3e	; 62
     cdc:	29 97       	sbiw	r28, 0x09	; 9
     cde:	0f b6       	in	r0, 0x3f	; 63
     ce0:	f8 94       	cli
     ce2:	de bf       	out	0x3e, r29	; 62
     ce4:	0f be       	out	0x3f, r0	; 63
     ce6:	cd bf       	out	0x3d, r28	; 61
     ce8:	89 83       	std	Y+1, r24	; 0x01
     cea:	6a 83       	std	Y+2, r22	; 0x02
     cec:	4b 83       	std	Y+3, r20	; 0x03
	if(ARG_u8Pin<=7)
     cee:	8a 81       	ldd	r24, Y+2	; 0x02
     cf0:	88 30       	cpi	r24, 0x08	; 8
     cf2:	08 f0       	brcs	.+2      	; 0xcf6 <MDIO_voidSetPinDirection+0x22>
     cf4:	cc c1       	rjmp	.+920    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
	{
		if(MDIO_OUTPUT==ARG_u8Directoin)
     cf6:	8b 81       	ldd	r24, Y+3	; 0x03
     cf8:	8a 35       	cpi	r24, 0x5A	; 90
     cfa:	09 f0       	breq	.+2      	; 0xcfe <MDIO_voidSetPinDirection+0x2a>
     cfc:	79 c0       	rjmp	.+242    	; 0xdf0 <MDIO_voidSetPinDirection+0x11c>
		{
			switch(ARG_u8Port)
     cfe:	89 81       	ldd	r24, Y+1	; 0x01
     d00:	28 2f       	mov	r18, r24
     d02:	30 e0       	ldi	r19, 0x00	; 0
     d04:	39 87       	std	Y+9, r19	; 0x09
     d06:	28 87       	std	Y+8, r18	; 0x08
     d08:	88 85       	ldd	r24, Y+8	; 0x08
     d0a:	99 85       	ldd	r25, Y+9	; 0x09
     d0c:	8c 30       	cpi	r24, 0x0C	; 12
     d0e:	91 05       	cpc	r25, r1
     d10:	b9 f0       	breq	.+46     	; 0xd40 <MDIO_voidSetPinDirection+0x6c>
     d12:	28 85       	ldd	r18, Y+8	; 0x08
     d14:	39 85       	ldd	r19, Y+9	; 0x09
     d16:	2d 30       	cpi	r18, 0x0D	; 13
     d18:	31 05       	cpc	r19, r1
     d1a:	3c f4       	brge	.+14     	; 0xd2a <MDIO_voidSetPinDirection+0x56>
     d1c:	88 85       	ldd	r24, Y+8	; 0x08
     d1e:	99 85       	ldd	r25, Y+9	; 0x09
     d20:	85 30       	cpi	r24, 0x05	; 5
     d22:	91 05       	cpc	r25, r1
     d24:	09 f4       	brne	.+2      	; 0xd28 <MDIO_voidSetPinDirection+0x54>
     d26:	4e c0       	rjmp	.+156    	; 0xdc4 <MDIO_voidSetPinDirection+0xf0>
     d28:	b2 c1       	rjmp	.+868    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
     d2a:	28 85       	ldd	r18, Y+8	; 0x08
     d2c:	39 85       	ldd	r19, Y+9	; 0x09
     d2e:	21 32       	cpi	r18, 0x21	; 33
     d30:	31 05       	cpc	r19, r1
     d32:	e1 f0       	breq	.+56     	; 0xd6c <MDIO_voidSetPinDirection+0x98>
     d34:	88 85       	ldd	r24, Y+8	; 0x08
     d36:	99 85       	ldd	r25, Y+9	; 0x09
     d38:	88 32       	cpi	r24, 0x28	; 40
     d3a:	91 05       	cpc	r25, r1
     d3c:	69 f1       	breq	.+90     	; 0xd98 <MDIO_voidSetPinDirection+0xc4>
     d3e:	a7 c1       	rjmp	.+846    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
			{
				case MDIO_PORTA: SET_BIT(GPIOA -> DDR, ARG_u8Pin); break;
     d40:	a9 e3       	ldi	r26, 0x39	; 57
     d42:	b0 e0       	ldi	r27, 0x00	; 0
     d44:	e9 e3       	ldi	r30, 0x39	; 57
     d46:	f0 e0       	ldi	r31, 0x00	; 0
     d48:	81 81       	ldd	r24, Z+1	; 0x01
     d4a:	48 2f       	mov	r20, r24
     d4c:	8a 81       	ldd	r24, Y+2	; 0x02
     d4e:	28 2f       	mov	r18, r24
     d50:	30 e0       	ldi	r19, 0x00	; 0
     d52:	81 e0       	ldi	r24, 0x01	; 1
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	02 2e       	mov	r0, r18
     d58:	02 c0       	rjmp	.+4      	; 0xd5e <MDIO_voidSetPinDirection+0x8a>
     d5a:	88 0f       	add	r24, r24
     d5c:	99 1f       	adc	r25, r25
     d5e:	0a 94       	dec	r0
     d60:	e2 f7       	brpl	.-8      	; 0xd5a <MDIO_voidSetPinDirection+0x86>
     d62:	84 2b       	or	r24, r20
     d64:	11 96       	adiw	r26, 0x01	; 1
     d66:	8c 93       	st	X, r24
     d68:	11 97       	sbiw	r26, 0x01	; 1
     d6a:	91 c1       	rjmp	.+802    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTB: SET_BIT(GPIOB -> DDR, ARG_u8Pin); break;
     d6c:	a6 e3       	ldi	r26, 0x36	; 54
     d6e:	b0 e0       	ldi	r27, 0x00	; 0
     d70:	e6 e3       	ldi	r30, 0x36	; 54
     d72:	f0 e0       	ldi	r31, 0x00	; 0
     d74:	81 81       	ldd	r24, Z+1	; 0x01
     d76:	48 2f       	mov	r20, r24
     d78:	8a 81       	ldd	r24, Y+2	; 0x02
     d7a:	28 2f       	mov	r18, r24
     d7c:	30 e0       	ldi	r19, 0x00	; 0
     d7e:	81 e0       	ldi	r24, 0x01	; 1
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	02 2e       	mov	r0, r18
     d84:	02 c0       	rjmp	.+4      	; 0xd8a <MDIO_voidSetPinDirection+0xb6>
     d86:	88 0f       	add	r24, r24
     d88:	99 1f       	adc	r25, r25
     d8a:	0a 94       	dec	r0
     d8c:	e2 f7       	brpl	.-8      	; 0xd86 <MDIO_voidSetPinDirection+0xb2>
     d8e:	84 2b       	or	r24, r20
     d90:	11 96       	adiw	r26, 0x01	; 1
     d92:	8c 93       	st	X, r24
     d94:	11 97       	sbiw	r26, 0x01	; 1
     d96:	7b c1       	rjmp	.+758    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTC: SET_BIT(GPIOC -> DDR, ARG_u8Pin); break;
     d98:	a3 e3       	ldi	r26, 0x33	; 51
     d9a:	b0 e0       	ldi	r27, 0x00	; 0
     d9c:	e3 e3       	ldi	r30, 0x33	; 51
     d9e:	f0 e0       	ldi	r31, 0x00	; 0
     da0:	81 81       	ldd	r24, Z+1	; 0x01
     da2:	48 2f       	mov	r20, r24
     da4:	8a 81       	ldd	r24, Y+2	; 0x02
     da6:	28 2f       	mov	r18, r24
     da8:	30 e0       	ldi	r19, 0x00	; 0
     daa:	81 e0       	ldi	r24, 0x01	; 1
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	02 2e       	mov	r0, r18
     db0:	02 c0       	rjmp	.+4      	; 0xdb6 <MDIO_voidSetPinDirection+0xe2>
     db2:	88 0f       	add	r24, r24
     db4:	99 1f       	adc	r25, r25
     db6:	0a 94       	dec	r0
     db8:	e2 f7       	brpl	.-8      	; 0xdb2 <MDIO_voidSetPinDirection+0xde>
     dba:	84 2b       	or	r24, r20
     dbc:	11 96       	adiw	r26, 0x01	; 1
     dbe:	8c 93       	st	X, r24
     dc0:	11 97       	sbiw	r26, 0x01	; 1
     dc2:	65 c1       	rjmp	.+714    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTD: SET_BIT(GPIOD -> DDR, ARG_u8Pin); break;
     dc4:	a0 e3       	ldi	r26, 0x30	; 48
     dc6:	b0 e0       	ldi	r27, 0x00	; 0
     dc8:	e0 e3       	ldi	r30, 0x30	; 48
     dca:	f0 e0       	ldi	r31, 0x00	; 0
     dcc:	81 81       	ldd	r24, Z+1	; 0x01
     dce:	48 2f       	mov	r20, r24
     dd0:	8a 81       	ldd	r24, Y+2	; 0x02
     dd2:	28 2f       	mov	r18, r24
     dd4:	30 e0       	ldi	r19, 0x00	; 0
     dd6:	81 e0       	ldi	r24, 0x01	; 1
     dd8:	90 e0       	ldi	r25, 0x00	; 0
     dda:	02 2e       	mov	r0, r18
     ddc:	02 c0       	rjmp	.+4      	; 0xde2 <MDIO_voidSetPinDirection+0x10e>
     dde:	88 0f       	add	r24, r24
     de0:	99 1f       	adc	r25, r25
     de2:	0a 94       	dec	r0
     de4:	e2 f7       	brpl	.-8      	; 0xdde <MDIO_voidSetPinDirection+0x10a>
     de6:	84 2b       	or	r24, r20
     de8:	11 96       	adiw	r26, 0x01	; 1
     dea:	8c 93       	st	X, r24
     dec:	11 97       	sbiw	r26, 0x01	; 1
     dee:	4f c1       	rjmp	.+670    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
				default: break;/*report error*/
			}			
		}
		else if(MDIO_INPUT==ARG_u8Directoin)
     df0:	8b 81       	ldd	r24, Y+3	; 0x03
     df2:	84 36       	cpi	r24, 0x64	; 100
     df4:	09 f0       	breq	.+2      	; 0xdf8 <MDIO_voidSetPinDirection+0x124>
     df6:	7e c0       	rjmp	.+252    	; 0xef4 <MDIO_voidSetPinDirection+0x220>
		{
			switch(ARG_u8Port)
     df8:	89 81       	ldd	r24, Y+1	; 0x01
     dfa:	28 2f       	mov	r18, r24
     dfc:	30 e0       	ldi	r19, 0x00	; 0
     dfe:	3f 83       	std	Y+7, r19	; 0x07
     e00:	2e 83       	std	Y+6, r18	; 0x06
     e02:	8e 81       	ldd	r24, Y+6	; 0x06
     e04:	9f 81       	ldd	r25, Y+7	; 0x07
     e06:	8c 30       	cpi	r24, 0x0C	; 12
     e08:	91 05       	cpc	r25, r1
     e0a:	09 f4       	brne	.+2      	; 0xe0e <MDIO_voidSetPinDirection+0x13a>
     e0c:	45 c0       	rjmp	.+138    	; 0xe98 <MDIO_voidSetPinDirection+0x1c4>
     e0e:	2e 81       	ldd	r18, Y+6	; 0x06
     e10:	3f 81       	ldd	r19, Y+7	; 0x07
     e12:	2d 30       	cpi	r18, 0x0D	; 13
     e14:	31 05       	cpc	r19, r1
     e16:	3c f4       	brge	.+14     	; 0xe26 <MDIO_voidSetPinDirection+0x152>
     e18:	8e 81       	ldd	r24, Y+6	; 0x06
     e1a:	9f 81       	ldd	r25, Y+7	; 0x07
     e1c:	85 30       	cpi	r24, 0x05	; 5
     e1e:	91 05       	cpc	r25, r1
     e20:	09 f4       	brne	.+2      	; 0xe24 <MDIO_voidSetPinDirection+0x150>
     e22:	51 c0       	rjmp	.+162    	; 0xec6 <MDIO_voidSetPinDirection+0x1f2>
     e24:	34 c1       	rjmp	.+616    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
     e26:	2e 81       	ldd	r18, Y+6	; 0x06
     e28:	3f 81       	ldd	r19, Y+7	; 0x07
     e2a:	21 32       	cpi	r18, 0x21	; 33
     e2c:	31 05       	cpc	r19, r1
     e2e:	31 f0       	breq	.+12     	; 0xe3c <MDIO_voidSetPinDirection+0x168>
     e30:	8e 81       	ldd	r24, Y+6	; 0x06
     e32:	9f 81       	ldd	r25, Y+7	; 0x07
     e34:	88 32       	cpi	r24, 0x28	; 40
     e36:	91 05       	cpc	r25, r1
     e38:	c1 f0       	breq	.+48     	; 0xe6a <MDIO_voidSetPinDirection+0x196>
     e3a:	29 c1       	rjmp	.+594    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
			{
				case MDIO_PORTB: CLEAR_BIT(GPIOB -> DDR, ARG_u8Pin); break;
     e3c:	a6 e3       	ldi	r26, 0x36	; 54
     e3e:	b0 e0       	ldi	r27, 0x00	; 0
     e40:	e6 e3       	ldi	r30, 0x36	; 54
     e42:	f0 e0       	ldi	r31, 0x00	; 0
     e44:	81 81       	ldd	r24, Z+1	; 0x01
     e46:	48 2f       	mov	r20, r24
     e48:	8a 81       	ldd	r24, Y+2	; 0x02
     e4a:	28 2f       	mov	r18, r24
     e4c:	30 e0       	ldi	r19, 0x00	; 0
     e4e:	81 e0       	ldi	r24, 0x01	; 1
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	02 2e       	mov	r0, r18
     e54:	02 c0       	rjmp	.+4      	; 0xe5a <MDIO_voidSetPinDirection+0x186>
     e56:	88 0f       	add	r24, r24
     e58:	99 1f       	adc	r25, r25
     e5a:	0a 94       	dec	r0
     e5c:	e2 f7       	brpl	.-8      	; 0xe56 <MDIO_voidSetPinDirection+0x182>
     e5e:	80 95       	com	r24
     e60:	84 23       	and	r24, r20
     e62:	11 96       	adiw	r26, 0x01	; 1
     e64:	8c 93       	st	X, r24
     e66:	11 97       	sbiw	r26, 0x01	; 1
     e68:	12 c1       	rjmp	.+548    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTC: CLEAR_BIT(GPIOC -> DDR, ARG_u8Pin); break;
     e6a:	a3 e3       	ldi	r26, 0x33	; 51
     e6c:	b0 e0       	ldi	r27, 0x00	; 0
     e6e:	e3 e3       	ldi	r30, 0x33	; 51
     e70:	f0 e0       	ldi	r31, 0x00	; 0
     e72:	81 81       	ldd	r24, Z+1	; 0x01
     e74:	48 2f       	mov	r20, r24
     e76:	8a 81       	ldd	r24, Y+2	; 0x02
     e78:	28 2f       	mov	r18, r24
     e7a:	30 e0       	ldi	r19, 0x00	; 0
     e7c:	81 e0       	ldi	r24, 0x01	; 1
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	02 2e       	mov	r0, r18
     e82:	02 c0       	rjmp	.+4      	; 0xe88 <MDIO_voidSetPinDirection+0x1b4>
     e84:	88 0f       	add	r24, r24
     e86:	99 1f       	adc	r25, r25
     e88:	0a 94       	dec	r0
     e8a:	e2 f7       	brpl	.-8      	; 0xe84 <MDIO_voidSetPinDirection+0x1b0>
     e8c:	80 95       	com	r24
     e8e:	84 23       	and	r24, r20
     e90:	11 96       	adiw	r26, 0x01	; 1
     e92:	8c 93       	st	X, r24
     e94:	11 97       	sbiw	r26, 0x01	; 1
     e96:	fb c0       	rjmp	.+502    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTA: CLEAR_BIT(GPIOA -> DDR, ARG_u8Pin); break;
     e98:	a9 e3       	ldi	r26, 0x39	; 57
     e9a:	b0 e0       	ldi	r27, 0x00	; 0
     e9c:	e9 e3       	ldi	r30, 0x39	; 57
     e9e:	f0 e0       	ldi	r31, 0x00	; 0
     ea0:	81 81       	ldd	r24, Z+1	; 0x01
     ea2:	48 2f       	mov	r20, r24
     ea4:	8a 81       	ldd	r24, Y+2	; 0x02
     ea6:	28 2f       	mov	r18, r24
     ea8:	30 e0       	ldi	r19, 0x00	; 0
     eaa:	81 e0       	ldi	r24, 0x01	; 1
     eac:	90 e0       	ldi	r25, 0x00	; 0
     eae:	02 2e       	mov	r0, r18
     eb0:	02 c0       	rjmp	.+4      	; 0xeb6 <MDIO_voidSetPinDirection+0x1e2>
     eb2:	88 0f       	add	r24, r24
     eb4:	99 1f       	adc	r25, r25
     eb6:	0a 94       	dec	r0
     eb8:	e2 f7       	brpl	.-8      	; 0xeb2 <MDIO_voidSetPinDirection+0x1de>
     eba:	80 95       	com	r24
     ebc:	84 23       	and	r24, r20
     ebe:	11 96       	adiw	r26, 0x01	; 1
     ec0:	8c 93       	st	X, r24
     ec2:	11 97       	sbiw	r26, 0x01	; 1
     ec4:	e4 c0       	rjmp	.+456    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTD: CLEAR_BIT(GPIOD -> DDR, ARG_u8Pin); break;
     ec6:	a0 e3       	ldi	r26, 0x30	; 48
     ec8:	b0 e0       	ldi	r27, 0x00	; 0
     eca:	e0 e3       	ldi	r30, 0x30	; 48
     ecc:	f0 e0       	ldi	r31, 0x00	; 0
     ece:	81 81       	ldd	r24, Z+1	; 0x01
     ed0:	48 2f       	mov	r20, r24
     ed2:	8a 81       	ldd	r24, Y+2	; 0x02
     ed4:	28 2f       	mov	r18, r24
     ed6:	30 e0       	ldi	r19, 0x00	; 0
     ed8:	81 e0       	ldi	r24, 0x01	; 1
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	02 2e       	mov	r0, r18
     ede:	02 c0       	rjmp	.+4      	; 0xee4 <MDIO_voidSetPinDirection+0x210>
     ee0:	88 0f       	add	r24, r24
     ee2:	99 1f       	adc	r25, r25
     ee4:	0a 94       	dec	r0
     ee6:	e2 f7       	brpl	.-8      	; 0xee0 <MDIO_voidSetPinDirection+0x20c>
     ee8:	80 95       	com	r24
     eea:	84 23       	and	r24, r20
     eec:	11 96       	adiw	r26, 0x01	; 1
     eee:	8c 93       	st	X, r24
     ef0:	11 97       	sbiw	r26, 0x01	; 1
     ef2:	cd c0       	rjmp	.+410    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
				default: break;/*report error*/
			}			
		}
		else if(MDIO_INPUT_PULLUP==ARG_u8Directoin)
     ef4:	8b 81       	ldd	r24, Y+3	; 0x03
     ef6:	88 3c       	cpi	r24, 0xC8	; 200
     ef8:	09 f0       	breq	.+2      	; 0xefc <MDIO_voidSetPinDirection+0x228>
     efa:	c9 c0       	rjmp	.+402    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
		{
			switch(ARG_u8Port)
     efc:	89 81       	ldd	r24, Y+1	; 0x01
     efe:	28 2f       	mov	r18, r24
     f00:	30 e0       	ldi	r19, 0x00	; 0
     f02:	3d 83       	std	Y+5, r19	; 0x05
     f04:	2c 83       	std	Y+4, r18	; 0x04
     f06:	8c 81       	ldd	r24, Y+4	; 0x04
     f08:	9d 81       	ldd	r25, Y+5	; 0x05
     f0a:	8c 30       	cpi	r24, 0x0C	; 12
     f0c:	91 05       	cpc	r25, r1
     f0e:	09 f4       	brne	.+2      	; 0xf12 <MDIO_voidSetPinDirection+0x23e>
     f10:	6b c0       	rjmp	.+214    	; 0xfe8 <MDIO_voidSetPinDirection+0x314>
     f12:	2c 81       	ldd	r18, Y+4	; 0x04
     f14:	3d 81       	ldd	r19, Y+5	; 0x05
     f16:	2d 30       	cpi	r18, 0x0D	; 13
     f18:	31 05       	cpc	r19, r1
     f1a:	3c f4       	brge	.+14     	; 0xf2a <MDIO_voidSetPinDirection+0x256>
     f1c:	8c 81       	ldd	r24, Y+4	; 0x04
     f1e:	9d 81       	ldd	r25, Y+5	; 0x05
     f20:	85 30       	cpi	r24, 0x05	; 5
     f22:	91 05       	cpc	r25, r1
     f24:	09 f4       	brne	.+2      	; 0xf28 <MDIO_voidSetPinDirection+0x254>
     f26:	8a c0       	rjmp	.+276    	; 0x103c <MDIO_voidSetPinDirection+0x368>
     f28:	b2 c0       	rjmp	.+356    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
     f2a:	2c 81       	ldd	r18, Y+4	; 0x04
     f2c:	3d 81       	ldd	r19, Y+5	; 0x05
     f2e:	21 32       	cpi	r18, 0x21	; 33
     f30:	31 05       	cpc	r19, r1
     f32:	31 f0       	breq	.+12     	; 0xf40 <MDIO_voidSetPinDirection+0x26c>
     f34:	8c 81       	ldd	r24, Y+4	; 0x04
     f36:	9d 81       	ldd	r25, Y+5	; 0x05
     f38:	88 32       	cpi	r24, 0x28	; 40
     f3a:	91 05       	cpc	r25, r1
     f3c:	59 f1       	breq	.+86     	; 0xf94 <MDIO_voidSetPinDirection+0x2c0>
     f3e:	a7 c0       	rjmp	.+334    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
			{
				case MDIO_PORTB: CLEAR_BIT(GPIOB -> DDR, ARG_u8Pin); SET_BIT(GPIOA -> PORT, ARG_u8Pin); break;
     f40:	a6 e3       	ldi	r26, 0x36	; 54
     f42:	b0 e0       	ldi	r27, 0x00	; 0
     f44:	e6 e3       	ldi	r30, 0x36	; 54
     f46:	f0 e0       	ldi	r31, 0x00	; 0
     f48:	81 81       	ldd	r24, Z+1	; 0x01
     f4a:	48 2f       	mov	r20, r24
     f4c:	8a 81       	ldd	r24, Y+2	; 0x02
     f4e:	28 2f       	mov	r18, r24
     f50:	30 e0       	ldi	r19, 0x00	; 0
     f52:	81 e0       	ldi	r24, 0x01	; 1
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <MDIO_voidSetPinDirection+0x288>
     f58:	88 0f       	add	r24, r24
     f5a:	99 1f       	adc	r25, r25
     f5c:	2a 95       	dec	r18
     f5e:	e2 f7       	brpl	.-8      	; 0xf58 <MDIO_voidSetPinDirection+0x284>
     f60:	80 95       	com	r24
     f62:	84 23       	and	r24, r20
     f64:	11 96       	adiw	r26, 0x01	; 1
     f66:	8c 93       	st	X, r24
     f68:	a9 e3       	ldi	r26, 0x39	; 57
     f6a:	b0 e0       	ldi	r27, 0x00	; 0
     f6c:	e9 e3       	ldi	r30, 0x39	; 57
     f6e:	f0 e0       	ldi	r31, 0x00	; 0
     f70:	82 81       	ldd	r24, Z+2	; 0x02
     f72:	48 2f       	mov	r20, r24
     f74:	8a 81       	ldd	r24, Y+2	; 0x02
     f76:	28 2f       	mov	r18, r24
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	81 e0       	ldi	r24, 0x01	; 1
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	02 2e       	mov	r0, r18
     f80:	02 c0       	rjmp	.+4      	; 0xf86 <MDIO_voidSetPinDirection+0x2b2>
     f82:	88 0f       	add	r24, r24
     f84:	99 1f       	adc	r25, r25
     f86:	0a 94       	dec	r0
     f88:	e2 f7       	brpl	.-8      	; 0xf82 <MDIO_voidSetPinDirection+0x2ae>
     f8a:	84 2b       	or	r24, r20
     f8c:	12 96       	adiw	r26, 0x02	; 2
     f8e:	8c 93       	st	X, r24
     f90:	12 97       	sbiw	r26, 0x02	; 2
     f92:	7d c0       	rjmp	.+250    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTC: CLEAR_BIT(GPIOC -> DDR, ARG_u8Pin); SET_BIT(GPIOB -> PORT, ARG_u8Pin); break;
     f94:	a3 e3       	ldi	r26, 0x33	; 51
     f96:	b0 e0       	ldi	r27, 0x00	; 0
     f98:	e3 e3       	ldi	r30, 0x33	; 51
     f9a:	f0 e0       	ldi	r31, 0x00	; 0
     f9c:	81 81       	ldd	r24, Z+1	; 0x01
     f9e:	48 2f       	mov	r20, r24
     fa0:	8a 81       	ldd	r24, Y+2	; 0x02
     fa2:	28 2f       	mov	r18, r24
     fa4:	30 e0       	ldi	r19, 0x00	; 0
     fa6:	81 e0       	ldi	r24, 0x01	; 1
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	02 c0       	rjmp	.+4      	; 0xfb0 <MDIO_voidSetPinDirection+0x2dc>
     fac:	88 0f       	add	r24, r24
     fae:	99 1f       	adc	r25, r25
     fb0:	2a 95       	dec	r18
     fb2:	e2 f7       	brpl	.-8      	; 0xfac <MDIO_voidSetPinDirection+0x2d8>
     fb4:	80 95       	com	r24
     fb6:	84 23       	and	r24, r20
     fb8:	11 96       	adiw	r26, 0x01	; 1
     fba:	8c 93       	st	X, r24
     fbc:	a6 e3       	ldi	r26, 0x36	; 54
     fbe:	b0 e0       	ldi	r27, 0x00	; 0
     fc0:	e6 e3       	ldi	r30, 0x36	; 54
     fc2:	f0 e0       	ldi	r31, 0x00	; 0
     fc4:	82 81       	ldd	r24, Z+2	; 0x02
     fc6:	48 2f       	mov	r20, r24
     fc8:	8a 81       	ldd	r24, Y+2	; 0x02
     fca:	28 2f       	mov	r18, r24
     fcc:	30 e0       	ldi	r19, 0x00	; 0
     fce:	81 e0       	ldi	r24, 0x01	; 1
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	02 2e       	mov	r0, r18
     fd4:	02 c0       	rjmp	.+4      	; 0xfda <MDIO_voidSetPinDirection+0x306>
     fd6:	88 0f       	add	r24, r24
     fd8:	99 1f       	adc	r25, r25
     fda:	0a 94       	dec	r0
     fdc:	e2 f7       	brpl	.-8      	; 0xfd6 <MDIO_voidSetPinDirection+0x302>
     fde:	84 2b       	or	r24, r20
     fe0:	12 96       	adiw	r26, 0x02	; 2
     fe2:	8c 93       	st	X, r24
     fe4:	12 97       	sbiw	r26, 0x02	; 2
     fe6:	53 c0       	rjmp	.+166    	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTA: CLEAR_BIT(GPIOA -> DDR, ARG_u8Pin); SET_BIT(GPIOC -> PORT, ARG_u8Pin); break;
     fe8:	a9 e3       	ldi	r26, 0x39	; 57
     fea:	b0 e0       	ldi	r27, 0x00	; 0
     fec:	e9 e3       	ldi	r30, 0x39	; 57
     fee:	f0 e0       	ldi	r31, 0x00	; 0
     ff0:	81 81       	ldd	r24, Z+1	; 0x01
     ff2:	48 2f       	mov	r20, r24
     ff4:	8a 81       	ldd	r24, Y+2	; 0x02
     ff6:	28 2f       	mov	r18, r24
     ff8:	30 e0       	ldi	r19, 0x00	; 0
     ffa:	81 e0       	ldi	r24, 0x01	; 1
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	02 c0       	rjmp	.+4      	; 0x1004 <MDIO_voidSetPinDirection+0x330>
    1000:	88 0f       	add	r24, r24
    1002:	99 1f       	adc	r25, r25
    1004:	2a 95       	dec	r18
    1006:	e2 f7       	brpl	.-8      	; 0x1000 <MDIO_voidSetPinDirection+0x32c>
    1008:	80 95       	com	r24
    100a:	84 23       	and	r24, r20
    100c:	11 96       	adiw	r26, 0x01	; 1
    100e:	8c 93       	st	X, r24
    1010:	a3 e3       	ldi	r26, 0x33	; 51
    1012:	b0 e0       	ldi	r27, 0x00	; 0
    1014:	e3 e3       	ldi	r30, 0x33	; 51
    1016:	f0 e0       	ldi	r31, 0x00	; 0
    1018:	82 81       	ldd	r24, Z+2	; 0x02
    101a:	48 2f       	mov	r20, r24
    101c:	8a 81       	ldd	r24, Y+2	; 0x02
    101e:	28 2f       	mov	r18, r24
    1020:	30 e0       	ldi	r19, 0x00	; 0
    1022:	81 e0       	ldi	r24, 0x01	; 1
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	02 2e       	mov	r0, r18
    1028:	02 c0       	rjmp	.+4      	; 0x102e <MDIO_voidSetPinDirection+0x35a>
    102a:	88 0f       	add	r24, r24
    102c:	99 1f       	adc	r25, r25
    102e:	0a 94       	dec	r0
    1030:	e2 f7       	brpl	.-8      	; 0x102a <MDIO_voidSetPinDirection+0x356>
    1032:	84 2b       	or	r24, r20
    1034:	12 96       	adiw	r26, 0x02	; 2
    1036:	8c 93       	st	X, r24
    1038:	12 97       	sbiw	r26, 0x02	; 2
    103a:	29 c0       	rjmp	.+82     	; 0x108e <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTD: CLEAR_BIT(GPIOD -> DDR, ARG_u8Pin); SET_BIT(GPIOD -> PORT, ARG_u8Pin); break;
    103c:	a0 e3       	ldi	r26, 0x30	; 48
    103e:	b0 e0       	ldi	r27, 0x00	; 0
    1040:	e0 e3       	ldi	r30, 0x30	; 48
    1042:	f0 e0       	ldi	r31, 0x00	; 0
    1044:	81 81       	ldd	r24, Z+1	; 0x01
    1046:	48 2f       	mov	r20, r24
    1048:	8a 81       	ldd	r24, Y+2	; 0x02
    104a:	28 2f       	mov	r18, r24
    104c:	30 e0       	ldi	r19, 0x00	; 0
    104e:	81 e0       	ldi	r24, 0x01	; 1
    1050:	90 e0       	ldi	r25, 0x00	; 0
    1052:	02 c0       	rjmp	.+4      	; 0x1058 <MDIO_voidSetPinDirection+0x384>
    1054:	88 0f       	add	r24, r24
    1056:	99 1f       	adc	r25, r25
    1058:	2a 95       	dec	r18
    105a:	e2 f7       	brpl	.-8      	; 0x1054 <MDIO_voidSetPinDirection+0x380>
    105c:	80 95       	com	r24
    105e:	84 23       	and	r24, r20
    1060:	11 96       	adiw	r26, 0x01	; 1
    1062:	8c 93       	st	X, r24
    1064:	a0 e3       	ldi	r26, 0x30	; 48
    1066:	b0 e0       	ldi	r27, 0x00	; 0
    1068:	e0 e3       	ldi	r30, 0x30	; 48
    106a:	f0 e0       	ldi	r31, 0x00	; 0
    106c:	82 81       	ldd	r24, Z+2	; 0x02
    106e:	48 2f       	mov	r20, r24
    1070:	8a 81       	ldd	r24, Y+2	; 0x02
    1072:	28 2f       	mov	r18, r24
    1074:	30 e0       	ldi	r19, 0x00	; 0
    1076:	81 e0       	ldi	r24, 0x01	; 1
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	02 2e       	mov	r0, r18
    107c:	02 c0       	rjmp	.+4      	; 0x1082 <MDIO_voidSetPinDirection+0x3ae>
    107e:	88 0f       	add	r24, r24
    1080:	99 1f       	adc	r25, r25
    1082:	0a 94       	dec	r0
    1084:	e2 f7       	brpl	.-8      	; 0x107e <MDIO_voidSetPinDirection+0x3aa>
    1086:	84 2b       	or	r24, r20
    1088:	12 96       	adiw	r26, 0x02	; 2
    108a:	8c 93       	st	X, r24
    108c:	12 97       	sbiw	r26, 0x02	; 2
	else
	{
		/*report on error*/
	}
	
}
    108e:	29 96       	adiw	r28, 0x09	; 9
    1090:	0f b6       	in	r0, 0x3f	; 63
    1092:	f8 94       	cli
    1094:	de bf       	out	0x3e, r29	; 62
    1096:	0f be       	out	0x3f, r0	; 63
    1098:	cd bf       	out	0x3d, r28	; 61
    109a:	cf 91       	pop	r28
    109c:	df 91       	pop	r29
    109e:	08 95       	ret

000010a0 <MDIO_voidSetPinValue>:
void MDIO_voidSetPinValue(u8 ARG_u8Port,u8 ARG_u8Pin,u8 ARG_u8Value)
{
    10a0:	df 93       	push	r29
    10a2:	cf 93       	push	r28
    10a4:	cd b7       	in	r28, 0x3d	; 61
    10a6:	de b7       	in	r29, 0x3e	; 62
    10a8:	29 97       	sbiw	r28, 0x09	; 9
    10aa:	0f b6       	in	r0, 0x3f	; 63
    10ac:	f8 94       	cli
    10ae:	de bf       	out	0x3e, r29	; 62
    10b0:	0f be       	out	0x3f, r0	; 63
    10b2:	cd bf       	out	0x3d, r28	; 61
    10b4:	89 83       	std	Y+1, r24	; 0x01
    10b6:	6a 83       	std	Y+2, r22	; 0x02
    10b8:	4b 83       	std	Y+3, r20	; 0x03
	if(ARG_u8Pin<=7)
    10ba:	8a 81       	ldd	r24, Y+2	; 0x02
    10bc:	88 30       	cpi	r24, 0x08	; 8
    10be:	08 f0       	brcs	.+2      	; 0x10c2 <MDIO_voidSetPinValue+0x22>
    10c0:	7c c1       	rjmp	.+760    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
	{
		if(MDIO_HIGH== ARG_u8Value)
    10c2:	8b 81       	ldd	r24, Y+3	; 0x03
    10c4:	81 30       	cpi	r24, 0x01	; 1
    10c6:	09 f0       	breq	.+2      	; 0x10ca <MDIO_voidSetPinValue+0x2a>
    10c8:	79 c0       	rjmp	.+242    	; 0x11bc <MDIO_voidSetPinValue+0x11c>
		{
			switch(ARG_u8Port)
    10ca:	89 81       	ldd	r24, Y+1	; 0x01
    10cc:	28 2f       	mov	r18, r24
    10ce:	30 e0       	ldi	r19, 0x00	; 0
    10d0:	39 87       	std	Y+9, r19	; 0x09
    10d2:	28 87       	std	Y+8, r18	; 0x08
    10d4:	88 85       	ldd	r24, Y+8	; 0x08
    10d6:	99 85       	ldd	r25, Y+9	; 0x09
    10d8:	8c 30       	cpi	r24, 0x0C	; 12
    10da:	91 05       	cpc	r25, r1
    10dc:	b9 f0       	breq	.+46     	; 0x110c <MDIO_voidSetPinValue+0x6c>
    10de:	28 85       	ldd	r18, Y+8	; 0x08
    10e0:	39 85       	ldd	r19, Y+9	; 0x09
    10e2:	2d 30       	cpi	r18, 0x0D	; 13
    10e4:	31 05       	cpc	r19, r1
    10e6:	3c f4       	brge	.+14     	; 0x10f6 <MDIO_voidSetPinValue+0x56>
    10e8:	88 85       	ldd	r24, Y+8	; 0x08
    10ea:	99 85       	ldd	r25, Y+9	; 0x09
    10ec:	85 30       	cpi	r24, 0x05	; 5
    10ee:	91 05       	cpc	r25, r1
    10f0:	09 f4       	brne	.+2      	; 0x10f4 <MDIO_voidSetPinValue+0x54>
    10f2:	4e c0       	rjmp	.+156    	; 0x1190 <MDIO_voidSetPinValue+0xf0>
    10f4:	62 c1       	rjmp	.+708    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
    10f6:	28 85       	ldd	r18, Y+8	; 0x08
    10f8:	39 85       	ldd	r19, Y+9	; 0x09
    10fa:	21 32       	cpi	r18, 0x21	; 33
    10fc:	31 05       	cpc	r19, r1
    10fe:	e1 f0       	breq	.+56     	; 0x1138 <MDIO_voidSetPinValue+0x98>
    1100:	88 85       	ldd	r24, Y+8	; 0x08
    1102:	99 85       	ldd	r25, Y+9	; 0x09
    1104:	88 32       	cpi	r24, 0x28	; 40
    1106:	91 05       	cpc	r25, r1
    1108:	69 f1       	breq	.+90     	; 0x1164 <MDIO_voidSetPinValue+0xc4>
    110a:	57 c1       	rjmp	.+686    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
			{
				case MDIO_PORTA: SET_BIT(GPIOA -> PORT, ARG_u8Pin); break;
    110c:	a9 e3       	ldi	r26, 0x39	; 57
    110e:	b0 e0       	ldi	r27, 0x00	; 0
    1110:	e9 e3       	ldi	r30, 0x39	; 57
    1112:	f0 e0       	ldi	r31, 0x00	; 0
    1114:	82 81       	ldd	r24, Z+2	; 0x02
    1116:	48 2f       	mov	r20, r24
    1118:	8a 81       	ldd	r24, Y+2	; 0x02
    111a:	28 2f       	mov	r18, r24
    111c:	30 e0       	ldi	r19, 0x00	; 0
    111e:	81 e0       	ldi	r24, 0x01	; 1
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	02 2e       	mov	r0, r18
    1124:	02 c0       	rjmp	.+4      	; 0x112a <MDIO_voidSetPinValue+0x8a>
    1126:	88 0f       	add	r24, r24
    1128:	99 1f       	adc	r25, r25
    112a:	0a 94       	dec	r0
    112c:	e2 f7       	brpl	.-8      	; 0x1126 <MDIO_voidSetPinValue+0x86>
    112e:	84 2b       	or	r24, r20
    1130:	12 96       	adiw	r26, 0x02	; 2
    1132:	8c 93       	st	X, r24
    1134:	12 97       	sbiw	r26, 0x02	; 2
    1136:	41 c1       	rjmp	.+642    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTB: SET_BIT(GPIOB -> PORT, ARG_u8Pin); break;
    1138:	a6 e3       	ldi	r26, 0x36	; 54
    113a:	b0 e0       	ldi	r27, 0x00	; 0
    113c:	e6 e3       	ldi	r30, 0x36	; 54
    113e:	f0 e0       	ldi	r31, 0x00	; 0
    1140:	82 81       	ldd	r24, Z+2	; 0x02
    1142:	48 2f       	mov	r20, r24
    1144:	8a 81       	ldd	r24, Y+2	; 0x02
    1146:	28 2f       	mov	r18, r24
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	81 e0       	ldi	r24, 0x01	; 1
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	02 2e       	mov	r0, r18
    1150:	02 c0       	rjmp	.+4      	; 0x1156 <MDIO_voidSetPinValue+0xb6>
    1152:	88 0f       	add	r24, r24
    1154:	99 1f       	adc	r25, r25
    1156:	0a 94       	dec	r0
    1158:	e2 f7       	brpl	.-8      	; 0x1152 <MDIO_voidSetPinValue+0xb2>
    115a:	84 2b       	or	r24, r20
    115c:	12 96       	adiw	r26, 0x02	; 2
    115e:	8c 93       	st	X, r24
    1160:	12 97       	sbiw	r26, 0x02	; 2
    1162:	2b c1       	rjmp	.+598    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTC: SET_BIT(GPIOC -> PORT, ARG_u8Pin); break;
    1164:	a3 e3       	ldi	r26, 0x33	; 51
    1166:	b0 e0       	ldi	r27, 0x00	; 0
    1168:	e3 e3       	ldi	r30, 0x33	; 51
    116a:	f0 e0       	ldi	r31, 0x00	; 0
    116c:	82 81       	ldd	r24, Z+2	; 0x02
    116e:	48 2f       	mov	r20, r24
    1170:	8a 81       	ldd	r24, Y+2	; 0x02
    1172:	28 2f       	mov	r18, r24
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	81 e0       	ldi	r24, 0x01	; 1
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	02 2e       	mov	r0, r18
    117c:	02 c0       	rjmp	.+4      	; 0x1182 <MDIO_voidSetPinValue+0xe2>
    117e:	88 0f       	add	r24, r24
    1180:	99 1f       	adc	r25, r25
    1182:	0a 94       	dec	r0
    1184:	e2 f7       	brpl	.-8      	; 0x117e <MDIO_voidSetPinValue+0xde>
    1186:	84 2b       	or	r24, r20
    1188:	12 96       	adiw	r26, 0x02	; 2
    118a:	8c 93       	st	X, r24
    118c:	12 97       	sbiw	r26, 0x02	; 2
    118e:	15 c1       	rjmp	.+554    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTD: SET_BIT(GPIOD -> PORT, ARG_u8Pin); break;
    1190:	a0 e3       	ldi	r26, 0x30	; 48
    1192:	b0 e0       	ldi	r27, 0x00	; 0
    1194:	e0 e3       	ldi	r30, 0x30	; 48
    1196:	f0 e0       	ldi	r31, 0x00	; 0
    1198:	82 81       	ldd	r24, Z+2	; 0x02
    119a:	48 2f       	mov	r20, r24
    119c:	8a 81       	ldd	r24, Y+2	; 0x02
    119e:	28 2f       	mov	r18, r24
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	81 e0       	ldi	r24, 0x01	; 1
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	02 2e       	mov	r0, r18
    11a8:	02 c0       	rjmp	.+4      	; 0x11ae <MDIO_voidSetPinValue+0x10e>
    11aa:	88 0f       	add	r24, r24
    11ac:	99 1f       	adc	r25, r25
    11ae:	0a 94       	dec	r0
    11b0:	e2 f7       	brpl	.-8      	; 0x11aa <MDIO_voidSetPinValue+0x10a>
    11b2:	84 2b       	or	r24, r20
    11b4:	12 96       	adiw	r26, 0x02	; 2
    11b6:	8c 93       	st	X, r24
    11b8:	12 97       	sbiw	r26, 0x02	; 2
    11ba:	ff c0       	rjmp	.+510    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
				default: break;/*report error*/
			}			
		}
		else if(MDIO_LOW==ARG_u8Value)
    11bc:	8b 81       	ldd	r24, Y+3	; 0x03
    11be:	88 23       	and	r24, r24
    11c0:	09 f0       	breq	.+2      	; 0x11c4 <MDIO_voidSetPinValue+0x124>
    11c2:	7e c0       	rjmp	.+252    	; 0x12c0 <MDIO_voidSetPinValue+0x220>
		{
			switch(ARG_u8Port)
    11c4:	89 81       	ldd	r24, Y+1	; 0x01
    11c6:	28 2f       	mov	r18, r24
    11c8:	30 e0       	ldi	r19, 0x00	; 0
    11ca:	3f 83       	std	Y+7, r19	; 0x07
    11cc:	2e 83       	std	Y+6, r18	; 0x06
    11ce:	8e 81       	ldd	r24, Y+6	; 0x06
    11d0:	9f 81       	ldd	r25, Y+7	; 0x07
    11d2:	8c 30       	cpi	r24, 0x0C	; 12
    11d4:	91 05       	cpc	r25, r1
    11d6:	09 f4       	brne	.+2      	; 0x11da <MDIO_voidSetPinValue+0x13a>
    11d8:	45 c0       	rjmp	.+138    	; 0x1264 <MDIO_voidSetPinValue+0x1c4>
    11da:	2e 81       	ldd	r18, Y+6	; 0x06
    11dc:	3f 81       	ldd	r19, Y+7	; 0x07
    11de:	2d 30       	cpi	r18, 0x0D	; 13
    11e0:	31 05       	cpc	r19, r1
    11e2:	3c f4       	brge	.+14     	; 0x11f2 <MDIO_voidSetPinValue+0x152>
    11e4:	8e 81       	ldd	r24, Y+6	; 0x06
    11e6:	9f 81       	ldd	r25, Y+7	; 0x07
    11e8:	85 30       	cpi	r24, 0x05	; 5
    11ea:	91 05       	cpc	r25, r1
    11ec:	09 f4       	brne	.+2      	; 0x11f0 <MDIO_voidSetPinValue+0x150>
    11ee:	51 c0       	rjmp	.+162    	; 0x1292 <MDIO_voidSetPinValue+0x1f2>
    11f0:	e4 c0       	rjmp	.+456    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
    11f2:	2e 81       	ldd	r18, Y+6	; 0x06
    11f4:	3f 81       	ldd	r19, Y+7	; 0x07
    11f6:	21 32       	cpi	r18, 0x21	; 33
    11f8:	31 05       	cpc	r19, r1
    11fa:	31 f0       	breq	.+12     	; 0x1208 <MDIO_voidSetPinValue+0x168>
    11fc:	8e 81       	ldd	r24, Y+6	; 0x06
    11fe:	9f 81       	ldd	r25, Y+7	; 0x07
    1200:	88 32       	cpi	r24, 0x28	; 40
    1202:	91 05       	cpc	r25, r1
    1204:	c1 f0       	breq	.+48     	; 0x1236 <MDIO_voidSetPinValue+0x196>
    1206:	d9 c0       	rjmp	.+434    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
			{
				case MDIO_PORTB: CLEAR_BIT(GPIOB -> PORT, ARG_u8Pin); break;
    1208:	a6 e3       	ldi	r26, 0x36	; 54
    120a:	b0 e0       	ldi	r27, 0x00	; 0
    120c:	e6 e3       	ldi	r30, 0x36	; 54
    120e:	f0 e0       	ldi	r31, 0x00	; 0
    1210:	82 81       	ldd	r24, Z+2	; 0x02
    1212:	48 2f       	mov	r20, r24
    1214:	8a 81       	ldd	r24, Y+2	; 0x02
    1216:	28 2f       	mov	r18, r24
    1218:	30 e0       	ldi	r19, 0x00	; 0
    121a:	81 e0       	ldi	r24, 0x01	; 1
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	02 2e       	mov	r0, r18
    1220:	02 c0       	rjmp	.+4      	; 0x1226 <MDIO_voidSetPinValue+0x186>
    1222:	88 0f       	add	r24, r24
    1224:	99 1f       	adc	r25, r25
    1226:	0a 94       	dec	r0
    1228:	e2 f7       	brpl	.-8      	; 0x1222 <MDIO_voidSetPinValue+0x182>
    122a:	80 95       	com	r24
    122c:	84 23       	and	r24, r20
    122e:	12 96       	adiw	r26, 0x02	; 2
    1230:	8c 93       	st	X, r24
    1232:	12 97       	sbiw	r26, 0x02	; 2
    1234:	c2 c0       	rjmp	.+388    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTC: CLEAR_BIT(GPIOC -> PORT, ARG_u8Pin); break;
    1236:	a3 e3       	ldi	r26, 0x33	; 51
    1238:	b0 e0       	ldi	r27, 0x00	; 0
    123a:	e3 e3       	ldi	r30, 0x33	; 51
    123c:	f0 e0       	ldi	r31, 0x00	; 0
    123e:	82 81       	ldd	r24, Z+2	; 0x02
    1240:	48 2f       	mov	r20, r24
    1242:	8a 81       	ldd	r24, Y+2	; 0x02
    1244:	28 2f       	mov	r18, r24
    1246:	30 e0       	ldi	r19, 0x00	; 0
    1248:	81 e0       	ldi	r24, 0x01	; 1
    124a:	90 e0       	ldi	r25, 0x00	; 0
    124c:	02 2e       	mov	r0, r18
    124e:	02 c0       	rjmp	.+4      	; 0x1254 <MDIO_voidSetPinValue+0x1b4>
    1250:	88 0f       	add	r24, r24
    1252:	99 1f       	adc	r25, r25
    1254:	0a 94       	dec	r0
    1256:	e2 f7       	brpl	.-8      	; 0x1250 <MDIO_voidSetPinValue+0x1b0>
    1258:	80 95       	com	r24
    125a:	84 23       	and	r24, r20
    125c:	12 96       	adiw	r26, 0x02	; 2
    125e:	8c 93       	st	X, r24
    1260:	12 97       	sbiw	r26, 0x02	; 2
    1262:	ab c0       	rjmp	.+342    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTA: CLEAR_BIT(GPIOA -> PORT, ARG_u8Pin); break;
    1264:	a9 e3       	ldi	r26, 0x39	; 57
    1266:	b0 e0       	ldi	r27, 0x00	; 0
    1268:	e9 e3       	ldi	r30, 0x39	; 57
    126a:	f0 e0       	ldi	r31, 0x00	; 0
    126c:	82 81       	ldd	r24, Z+2	; 0x02
    126e:	48 2f       	mov	r20, r24
    1270:	8a 81       	ldd	r24, Y+2	; 0x02
    1272:	28 2f       	mov	r18, r24
    1274:	30 e0       	ldi	r19, 0x00	; 0
    1276:	81 e0       	ldi	r24, 0x01	; 1
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	02 2e       	mov	r0, r18
    127c:	02 c0       	rjmp	.+4      	; 0x1282 <MDIO_voidSetPinValue+0x1e2>
    127e:	88 0f       	add	r24, r24
    1280:	99 1f       	adc	r25, r25
    1282:	0a 94       	dec	r0
    1284:	e2 f7       	brpl	.-8      	; 0x127e <MDIO_voidSetPinValue+0x1de>
    1286:	80 95       	com	r24
    1288:	84 23       	and	r24, r20
    128a:	12 96       	adiw	r26, 0x02	; 2
    128c:	8c 93       	st	X, r24
    128e:	12 97       	sbiw	r26, 0x02	; 2
    1290:	94 c0       	rjmp	.+296    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTD: CLEAR_BIT(GPIOD -> PORT, ARG_u8Pin); break;
    1292:	a0 e3       	ldi	r26, 0x30	; 48
    1294:	b0 e0       	ldi	r27, 0x00	; 0
    1296:	e0 e3       	ldi	r30, 0x30	; 48
    1298:	f0 e0       	ldi	r31, 0x00	; 0
    129a:	82 81       	ldd	r24, Z+2	; 0x02
    129c:	48 2f       	mov	r20, r24
    129e:	8a 81       	ldd	r24, Y+2	; 0x02
    12a0:	28 2f       	mov	r18, r24
    12a2:	30 e0       	ldi	r19, 0x00	; 0
    12a4:	81 e0       	ldi	r24, 0x01	; 1
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	02 2e       	mov	r0, r18
    12aa:	02 c0       	rjmp	.+4      	; 0x12b0 <MDIO_voidSetPinValue+0x210>
    12ac:	88 0f       	add	r24, r24
    12ae:	99 1f       	adc	r25, r25
    12b0:	0a 94       	dec	r0
    12b2:	e2 f7       	brpl	.-8      	; 0x12ac <MDIO_voidSetPinValue+0x20c>
    12b4:	80 95       	com	r24
    12b6:	84 23       	and	r24, r20
    12b8:	12 96       	adiw	r26, 0x02	; 2
    12ba:	8c 93       	st	X, r24
    12bc:	12 97       	sbiw	r26, 0x02	; 2
    12be:	7d c0       	rjmp	.+250    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
				default: break;/*report error*/
			}			
		}
		
				else if(MDIO_TOGGLE==ARG_u8Value)
    12c0:	8b 81       	ldd	r24, Y+3	; 0x03
    12c2:	82 30       	cpi	r24, 0x02	; 2
    12c4:	09 f0       	breq	.+2      	; 0x12c8 <MDIO_voidSetPinValue+0x228>
    12c6:	79 c0       	rjmp	.+242    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
		{
			switch(ARG_u8Port)
    12c8:	89 81       	ldd	r24, Y+1	; 0x01
    12ca:	28 2f       	mov	r18, r24
    12cc:	30 e0       	ldi	r19, 0x00	; 0
    12ce:	3d 83       	std	Y+5, r19	; 0x05
    12d0:	2c 83       	std	Y+4, r18	; 0x04
    12d2:	8c 81       	ldd	r24, Y+4	; 0x04
    12d4:	9d 81       	ldd	r25, Y+5	; 0x05
    12d6:	8c 30       	cpi	r24, 0x0C	; 12
    12d8:	91 05       	cpc	r25, r1
    12da:	09 f4       	brne	.+2      	; 0x12de <MDIO_voidSetPinValue+0x23e>
    12dc:	43 c0       	rjmp	.+134    	; 0x1364 <MDIO_voidSetPinValue+0x2c4>
    12de:	2c 81       	ldd	r18, Y+4	; 0x04
    12e0:	3d 81       	ldd	r19, Y+5	; 0x05
    12e2:	2d 30       	cpi	r18, 0x0D	; 13
    12e4:	31 05       	cpc	r19, r1
    12e6:	3c f4       	brge	.+14     	; 0x12f6 <MDIO_voidSetPinValue+0x256>
    12e8:	8c 81       	ldd	r24, Y+4	; 0x04
    12ea:	9d 81       	ldd	r25, Y+5	; 0x05
    12ec:	85 30       	cpi	r24, 0x05	; 5
    12ee:	91 05       	cpc	r25, r1
    12f0:	09 f4       	brne	.+2      	; 0x12f4 <MDIO_voidSetPinValue+0x254>
    12f2:	4e c0       	rjmp	.+156    	; 0x1390 <MDIO_voidSetPinValue+0x2f0>
    12f4:	62 c0       	rjmp	.+196    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
    12f6:	2c 81       	ldd	r18, Y+4	; 0x04
    12f8:	3d 81       	ldd	r19, Y+5	; 0x05
    12fa:	21 32       	cpi	r18, 0x21	; 33
    12fc:	31 05       	cpc	r19, r1
    12fe:	31 f0       	breq	.+12     	; 0x130c <MDIO_voidSetPinValue+0x26c>
    1300:	8c 81       	ldd	r24, Y+4	; 0x04
    1302:	9d 81       	ldd	r25, Y+5	; 0x05
    1304:	88 32       	cpi	r24, 0x28	; 40
    1306:	91 05       	cpc	r25, r1
    1308:	b9 f0       	breq	.+46     	; 0x1338 <MDIO_voidSetPinValue+0x298>
    130a:	57 c0       	rjmp	.+174    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
			{
				case MDIO_PORTB: TOGGLE_BIT(GPIOB -> PORT, ARG_u8Pin); break;
    130c:	a6 e3       	ldi	r26, 0x36	; 54
    130e:	b0 e0       	ldi	r27, 0x00	; 0
    1310:	e6 e3       	ldi	r30, 0x36	; 54
    1312:	f0 e0       	ldi	r31, 0x00	; 0
    1314:	82 81       	ldd	r24, Z+2	; 0x02
    1316:	48 2f       	mov	r20, r24
    1318:	8a 81       	ldd	r24, Y+2	; 0x02
    131a:	28 2f       	mov	r18, r24
    131c:	30 e0       	ldi	r19, 0x00	; 0
    131e:	81 e0       	ldi	r24, 0x01	; 1
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	02 2e       	mov	r0, r18
    1324:	02 c0       	rjmp	.+4      	; 0x132a <MDIO_voidSetPinValue+0x28a>
    1326:	88 0f       	add	r24, r24
    1328:	99 1f       	adc	r25, r25
    132a:	0a 94       	dec	r0
    132c:	e2 f7       	brpl	.-8      	; 0x1326 <MDIO_voidSetPinValue+0x286>
    132e:	84 27       	eor	r24, r20
    1330:	12 96       	adiw	r26, 0x02	; 2
    1332:	8c 93       	st	X, r24
    1334:	12 97       	sbiw	r26, 0x02	; 2
    1336:	41 c0       	rjmp	.+130    	; 0x13ba <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTC: TOGGLE_BIT(GPIOC -> PORT, ARG_u8Pin); break;
    1338:	a3 e3       	ldi	r26, 0x33	; 51
    133a:	b0 e0       	ldi	r27, 0x00	; 0
    133c:	e3 e3       	ldi	r30, 0x33	; 51
    133e:	f0 e0       	ldi	r31, 0x00	; 0
    1340:	82 81       	ldd	r24, Z+2	; 0x02
    1342:	48 2f       	mov	r20, r24
    1344:	8a 81       	ldd	r24, Y+2	; 0x02
    1346:	28 2f       	mov	r18, r24
    1348:	30 e0       	ldi	r19, 0x00	; 0
    134a:	81 e0       	ldi	r24, 0x01	; 1
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	02 2e       	mov	r0, r18
    1350:	02 c0       	rjmp	.+4      	; 0x1356 <MDIO_voidSetPinValue+0x2b6>
    1352:	88 0f       	add	r24, r24
    1354:	99 1f       	adc	r25, r25
    1356:	0a 94       	dec	r0
    1358:	e2 f7       	brpl	.-8      	; 0x1352 <MDIO_voidSetPinValue+0x2b2>
    135a:	84 27       	eor	r24, r20
    135c:	12 96       	adiw	r26, 0x02	; 2
    135e:	8c 93       	st	X, r24
    1360:	12 97       	sbiw	r26, 0x02	; 2
    1362:	2b c0       	rjmp	.+86     	; 0x13ba <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTA: TOGGLE_BIT(GPIOA -> PORT, ARG_u8Pin); break;
    1364:	a9 e3       	ldi	r26, 0x39	; 57
    1366:	b0 e0       	ldi	r27, 0x00	; 0
    1368:	e9 e3       	ldi	r30, 0x39	; 57
    136a:	f0 e0       	ldi	r31, 0x00	; 0
    136c:	82 81       	ldd	r24, Z+2	; 0x02
    136e:	48 2f       	mov	r20, r24
    1370:	8a 81       	ldd	r24, Y+2	; 0x02
    1372:	28 2f       	mov	r18, r24
    1374:	30 e0       	ldi	r19, 0x00	; 0
    1376:	81 e0       	ldi	r24, 0x01	; 1
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	02 2e       	mov	r0, r18
    137c:	02 c0       	rjmp	.+4      	; 0x1382 <MDIO_voidSetPinValue+0x2e2>
    137e:	88 0f       	add	r24, r24
    1380:	99 1f       	adc	r25, r25
    1382:	0a 94       	dec	r0
    1384:	e2 f7       	brpl	.-8      	; 0x137e <MDIO_voidSetPinValue+0x2de>
    1386:	84 27       	eor	r24, r20
    1388:	12 96       	adiw	r26, 0x02	; 2
    138a:	8c 93       	st	X, r24
    138c:	12 97       	sbiw	r26, 0x02	; 2
    138e:	15 c0       	rjmp	.+42     	; 0x13ba <MDIO_voidSetPinValue+0x31a>
				case MDIO_PORTD: TOGGLE_BIT(GPIOD -> PORT, ARG_u8Pin); break;
    1390:	a0 e3       	ldi	r26, 0x30	; 48
    1392:	b0 e0       	ldi	r27, 0x00	; 0
    1394:	e0 e3       	ldi	r30, 0x30	; 48
    1396:	f0 e0       	ldi	r31, 0x00	; 0
    1398:	82 81       	ldd	r24, Z+2	; 0x02
    139a:	48 2f       	mov	r20, r24
    139c:	8a 81       	ldd	r24, Y+2	; 0x02
    139e:	28 2f       	mov	r18, r24
    13a0:	30 e0       	ldi	r19, 0x00	; 0
    13a2:	81 e0       	ldi	r24, 0x01	; 1
    13a4:	90 e0       	ldi	r25, 0x00	; 0
    13a6:	02 2e       	mov	r0, r18
    13a8:	02 c0       	rjmp	.+4      	; 0x13ae <MDIO_voidSetPinValue+0x30e>
    13aa:	88 0f       	add	r24, r24
    13ac:	99 1f       	adc	r25, r25
    13ae:	0a 94       	dec	r0
    13b0:	e2 f7       	brpl	.-8      	; 0x13aa <MDIO_voidSetPinValue+0x30a>
    13b2:	84 27       	eor	r24, r20
    13b4:	12 96       	adiw	r26, 0x02	; 2
    13b6:	8c 93       	st	X, r24
    13b8:	12 97       	sbiw	r26, 0x02	; 2
	else
	{
		/*report on error*/
	}

}
    13ba:	29 96       	adiw	r28, 0x09	; 9
    13bc:	0f b6       	in	r0, 0x3f	; 63
    13be:	f8 94       	cli
    13c0:	de bf       	out	0x3e, r29	; 62
    13c2:	0f be       	out	0x3f, r0	; 63
    13c4:	cd bf       	out	0x3d, r28	; 61
    13c6:	cf 91       	pop	r28
    13c8:	df 91       	pop	r29
    13ca:	08 95       	ret

000013cc <MDIO_voidGetPinValue>:
u8	 MDIO_voidGetPinValue(u8 ARG_u8Port,u8 ARG_u8Pin)
{
    13cc:	df 93       	push	r29
    13ce:	cf 93       	push	r28
    13d0:	00 d0       	rcall	.+0      	; 0x13d2 <MDIO_voidGetPinValue+0x6>
    13d2:	00 d0       	rcall	.+0      	; 0x13d4 <MDIO_voidGetPinValue+0x8>
    13d4:	0f 92       	push	r0
    13d6:	cd b7       	in	r28, 0x3d	; 61
    13d8:	de b7       	in	r29, 0x3e	; 62
    13da:	8a 83       	std	Y+2, r24	; 0x02
    13dc:	6b 83       	std	Y+3, r22	; 0x03
	u8 L_u8Value;
	if(ARG_u8Pin<=7)
    13de:	8b 81       	ldd	r24, Y+3	; 0x03
    13e0:	88 30       	cpi	r24, 0x08	; 8
    13e2:	08 f0       	brcs	.+2      	; 0x13e6 <MDIO_voidGetPinValue+0x1a>
    13e4:	68 c0       	rjmp	.+208    	; 0x14b6 <MDIO_voidGetPinValue+0xea>
	{

		switch(ARG_u8Port)
    13e6:	8a 81       	ldd	r24, Y+2	; 0x02
    13e8:	28 2f       	mov	r18, r24
    13ea:	30 e0       	ldi	r19, 0x00	; 0
    13ec:	3d 83       	std	Y+5, r19	; 0x05
    13ee:	2c 83       	std	Y+4, r18	; 0x04
    13f0:	4c 81       	ldd	r20, Y+4	; 0x04
    13f2:	5d 81       	ldd	r21, Y+5	; 0x05
    13f4:	4c 30       	cpi	r20, 0x0C	; 12
    13f6:	51 05       	cpc	r21, r1
    13f8:	b9 f0       	breq	.+46     	; 0x1428 <MDIO_voidGetPinValue+0x5c>
    13fa:	8c 81       	ldd	r24, Y+4	; 0x04
    13fc:	9d 81       	ldd	r25, Y+5	; 0x05
    13fe:	8d 30       	cpi	r24, 0x0D	; 13
    1400:	91 05       	cpc	r25, r1
    1402:	3c f4       	brge	.+14     	; 0x1412 <MDIO_voidGetPinValue+0x46>
    1404:	2c 81       	ldd	r18, Y+4	; 0x04
    1406:	3d 81       	ldd	r19, Y+5	; 0x05
    1408:	25 30       	cpi	r18, 0x05	; 5
    140a:	31 05       	cpc	r19, r1
    140c:	09 f4       	brne	.+2      	; 0x1410 <MDIO_voidGetPinValue+0x44>
    140e:	42 c0       	rjmp	.+132    	; 0x1494 <MDIO_voidGetPinValue+0xc8>
    1410:	52 c0       	rjmp	.+164    	; 0x14b6 <MDIO_voidGetPinValue+0xea>
    1412:	4c 81       	ldd	r20, Y+4	; 0x04
    1414:	5d 81       	ldd	r21, Y+5	; 0x05
    1416:	41 32       	cpi	r20, 0x21	; 33
    1418:	51 05       	cpc	r21, r1
    141a:	c1 f0       	breq	.+48     	; 0x144c <MDIO_voidGetPinValue+0x80>
    141c:	8c 81       	ldd	r24, Y+4	; 0x04
    141e:	9d 81       	ldd	r25, Y+5	; 0x05
    1420:	88 32       	cpi	r24, 0x28	; 40
    1422:	91 05       	cpc	r25, r1
    1424:	29 f1       	breq	.+74     	; 0x1470 <MDIO_voidGetPinValue+0xa4>
    1426:	47 c0       	rjmp	.+142    	; 0x14b6 <MDIO_voidGetPinValue+0xea>
		{
			case MDIO_PORTA: L_u8Value =GET_BIT(GPIOA -> PIN, ARG_u8Pin); break;
    1428:	e9 e3       	ldi	r30, 0x39	; 57
    142a:	f0 e0       	ldi	r31, 0x00	; 0
    142c:	80 81       	ld	r24, Z
    142e:	28 2f       	mov	r18, r24
    1430:	30 e0       	ldi	r19, 0x00	; 0
    1432:	8b 81       	ldd	r24, Y+3	; 0x03
    1434:	88 2f       	mov	r24, r24
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	a9 01       	movw	r20, r18
    143a:	02 c0       	rjmp	.+4      	; 0x1440 <MDIO_voidGetPinValue+0x74>
    143c:	55 95       	asr	r21
    143e:	47 95       	ror	r20
    1440:	8a 95       	dec	r24
    1442:	e2 f7       	brpl	.-8      	; 0x143c <MDIO_voidGetPinValue+0x70>
    1444:	ca 01       	movw	r24, r20
    1446:	81 70       	andi	r24, 0x01	; 1
    1448:	89 83       	std	Y+1, r24	; 0x01
    144a:	35 c0       	rjmp	.+106    	; 0x14b6 <MDIO_voidGetPinValue+0xea>
			case MDIO_PORTB: L_u8Value =GET_BIT(GPIOB -> PIN, ARG_u8Pin); break;
    144c:	e6 e3       	ldi	r30, 0x36	; 54
    144e:	f0 e0       	ldi	r31, 0x00	; 0
    1450:	80 81       	ld	r24, Z
    1452:	28 2f       	mov	r18, r24
    1454:	30 e0       	ldi	r19, 0x00	; 0
    1456:	8b 81       	ldd	r24, Y+3	; 0x03
    1458:	88 2f       	mov	r24, r24
    145a:	90 e0       	ldi	r25, 0x00	; 0
    145c:	a9 01       	movw	r20, r18
    145e:	02 c0       	rjmp	.+4      	; 0x1464 <MDIO_voidGetPinValue+0x98>
    1460:	55 95       	asr	r21
    1462:	47 95       	ror	r20
    1464:	8a 95       	dec	r24
    1466:	e2 f7       	brpl	.-8      	; 0x1460 <MDIO_voidGetPinValue+0x94>
    1468:	ca 01       	movw	r24, r20
    146a:	81 70       	andi	r24, 0x01	; 1
    146c:	89 83       	std	Y+1, r24	; 0x01
    146e:	23 c0       	rjmp	.+70     	; 0x14b6 <MDIO_voidGetPinValue+0xea>
			case MDIO_PORTC: L_u8Value =GET_BIT(GPIOC -> PIN, ARG_u8Pin); break;
    1470:	e3 e3       	ldi	r30, 0x33	; 51
    1472:	f0 e0       	ldi	r31, 0x00	; 0
    1474:	80 81       	ld	r24, Z
    1476:	28 2f       	mov	r18, r24
    1478:	30 e0       	ldi	r19, 0x00	; 0
    147a:	8b 81       	ldd	r24, Y+3	; 0x03
    147c:	88 2f       	mov	r24, r24
    147e:	90 e0       	ldi	r25, 0x00	; 0
    1480:	a9 01       	movw	r20, r18
    1482:	02 c0       	rjmp	.+4      	; 0x1488 <MDIO_voidGetPinValue+0xbc>
    1484:	55 95       	asr	r21
    1486:	47 95       	ror	r20
    1488:	8a 95       	dec	r24
    148a:	e2 f7       	brpl	.-8      	; 0x1484 <MDIO_voidGetPinValue+0xb8>
    148c:	ca 01       	movw	r24, r20
    148e:	81 70       	andi	r24, 0x01	; 1
    1490:	89 83       	std	Y+1, r24	; 0x01
    1492:	11 c0       	rjmp	.+34     	; 0x14b6 <MDIO_voidGetPinValue+0xea>
			case MDIO_PORTD: L_u8Value =GET_BIT(GPIOD -> PIN, ARG_u8Pin); break;
    1494:	e0 e3       	ldi	r30, 0x30	; 48
    1496:	f0 e0       	ldi	r31, 0x00	; 0
    1498:	80 81       	ld	r24, Z
    149a:	28 2f       	mov	r18, r24
    149c:	30 e0       	ldi	r19, 0x00	; 0
    149e:	8b 81       	ldd	r24, Y+3	; 0x03
    14a0:	88 2f       	mov	r24, r24
    14a2:	90 e0       	ldi	r25, 0x00	; 0
    14a4:	a9 01       	movw	r20, r18
    14a6:	02 c0       	rjmp	.+4      	; 0x14ac <MDIO_voidGetPinValue+0xe0>
    14a8:	55 95       	asr	r21
    14aa:	47 95       	ror	r20
    14ac:	8a 95       	dec	r24
    14ae:	e2 f7       	brpl	.-8      	; 0x14a8 <MDIO_voidGetPinValue+0xdc>
    14b0:	ca 01       	movw	r24, r20
    14b2:	81 70       	andi	r24, 0x01	; 1
    14b4:	89 83       	std	Y+1, r24	; 0x01
	}
	else
	{
		/*report on error*/	
	}
	return L_u8Value;
    14b6:	89 81       	ldd	r24, Y+1	; 0x01
}
    14b8:	0f 90       	pop	r0
    14ba:	0f 90       	pop	r0
    14bc:	0f 90       	pop	r0
    14be:	0f 90       	pop	r0
    14c0:	0f 90       	pop	r0
    14c2:	cf 91       	pop	r28
    14c4:	df 91       	pop	r29
    14c6:	08 95       	ret

000014c8 <MEXTI_voidInit>:
static void (*MEXTI_pvoidfUserFunctionINT0)(void)= NULL_POINTER;
static void (*MEXTI_pvoidfUserFunctionINT1)(void)= NULL_POINTER;
static void (*MEXTI_pvoidfUserFunctionINT2)(void)= NULL_POINTER;

void MEXTI_voidInit(u8 ARG_u8InterruptNo, u8 ARG_u8InterruptMode)
{
    14c8:	df 93       	push	r29
    14ca:	cf 93       	push	r28
    14cc:	cd b7       	in	r28, 0x3d	; 61
    14ce:	de b7       	in	r29, 0x3e	; 62
    14d0:	2a 97       	sbiw	r28, 0x0a	; 10
    14d2:	0f b6       	in	r0, 0x3f	; 63
    14d4:	f8 94       	cli
    14d6:	de bf       	out	0x3e, r29	; 62
    14d8:	0f be       	out	0x3f, r0	; 63
    14da:	cd bf       	out	0x3d, r28	; 61
    14dc:	89 83       	std	Y+1, r24	; 0x01
    14de:	6a 83       	std	Y+2, r22	; 0x02
	switch(ARG_u8InterruptNo)
    14e0:	89 81       	ldd	r24, Y+1	; 0x01
    14e2:	28 2f       	mov	r18, r24
    14e4:	30 e0       	ldi	r19, 0x00	; 0
    14e6:	3a 87       	std	Y+10, r19	; 0x0a
    14e8:	29 87       	std	Y+9, r18	; 0x09
    14ea:	89 85       	ldd	r24, Y+9	; 0x09
    14ec:	9a 85       	ldd	r25, Y+10	; 0x0a
    14ee:	86 30       	cpi	r24, 0x06	; 6
    14f0:	91 05       	cpc	r25, r1
    14f2:	69 f0       	breq	.+26     	; 0x150e <MEXTI_voidInit+0x46>
    14f4:	29 85       	ldd	r18, Y+9	; 0x09
    14f6:	3a 85       	ldd	r19, Y+10	; 0x0a
    14f8:	27 30       	cpi	r18, 0x07	; 7
    14fa:	31 05       	cpc	r19, r1
    14fc:	09 f4       	brne	.+2      	; 0x1500 <MEXTI_voidInit+0x38>
    14fe:	62 c0       	rjmp	.+196    	; 0x15c4 <MEXTI_voidInit+0xfc>
    1500:	89 85       	ldd	r24, Y+9	; 0x09
    1502:	9a 85       	ldd	r25, Y+10	; 0x0a
    1504:	85 30       	cpi	r24, 0x05	; 5
    1506:	91 05       	cpc	r25, r1
    1508:	09 f4       	brne	.+2      	; 0x150c <MEXTI_voidInit+0x44>
    150a:	b7 c0       	rjmp	.+366    	; 0x167a <MEXTI_voidInit+0x1b2>
    150c:	d5 c0       	rjmp	.+426    	; 0x16b8 <MEXTI_voidInit+0x1f0>
	{
		case MEXTI_INT0:
		{
			switch(ARG_u8InterruptMode)
    150e:	8a 81       	ldd	r24, Y+2	; 0x02
    1510:	28 2f       	mov	r18, r24
    1512:	30 e0       	ldi	r19, 0x00	; 0
    1514:	38 87       	std	Y+8, r19	; 0x08
    1516:	2f 83       	std	Y+7, r18	; 0x07
    1518:	8f 81       	ldd	r24, Y+7	; 0x07
    151a:	98 85       	ldd	r25, Y+8	; 0x08
    151c:	81 30       	cpi	r24, 0x01	; 1
    151e:	91 05       	cpc	r25, r1
    1520:	21 f1       	breq	.+72     	; 0x156a <MEXTI_voidInit+0xa2>
    1522:	2f 81       	ldd	r18, Y+7	; 0x07
    1524:	38 85       	ldd	r19, Y+8	; 0x08
    1526:	22 30       	cpi	r18, 0x02	; 2
    1528:	31 05       	cpc	r19, r1
    152a:	2c f4       	brge	.+10     	; 0x1536 <MEXTI_voidInit+0x6e>
    152c:	8f 81       	ldd	r24, Y+7	; 0x07
    152e:	98 85       	ldd	r25, Y+8	; 0x08
    1530:	00 97       	sbiw	r24, 0x00	; 0
    1532:	61 f0       	breq	.+24     	; 0x154c <MEXTI_voidInit+0x84>
    1534:	c1 c0       	rjmp	.+386    	; 0x16b8 <MEXTI_voidInit+0x1f0>
    1536:	2f 81       	ldd	r18, Y+7	; 0x07
    1538:	38 85       	ldd	r19, Y+8	; 0x08
    153a:	22 30       	cpi	r18, 0x02	; 2
    153c:	31 05       	cpc	r19, r1
    153e:	21 f1       	breq	.+72     	; 0x1588 <MEXTI_voidInit+0xc0>
    1540:	8f 81       	ldd	r24, Y+7	; 0x07
    1542:	98 85       	ldd	r25, Y+8	; 0x08
    1544:	83 30       	cpi	r24, 0x03	; 3
    1546:	91 05       	cpc	r25, r1
    1548:	71 f1       	breq	.+92     	; 0x15a6 <MEXTI_voidInit+0xde>
    154a:	b6 c0       	rjmp	.+364    	; 0x16b8 <MEXTI_voidInit+0x1f0>
			{
			case MEXTI_MODE_LOW:
			{
				CLEAR_BIT(MCUCR,ISC01);
    154c:	a5 e5       	ldi	r26, 0x55	; 85
    154e:	b0 e0       	ldi	r27, 0x00	; 0
    1550:	e5 e5       	ldi	r30, 0x55	; 85
    1552:	f0 e0       	ldi	r31, 0x00	; 0
    1554:	80 81       	ld	r24, Z
    1556:	8d 7f       	andi	r24, 0xFD	; 253
    1558:	8c 93       	st	X, r24
				CLEAR_BIT(MCUCR,ISC00);
    155a:	a5 e5       	ldi	r26, 0x55	; 85
    155c:	b0 e0       	ldi	r27, 0x00	; 0
    155e:	e5 e5       	ldi	r30, 0x55	; 85
    1560:	f0 e0       	ldi	r31, 0x00	; 0
    1562:	80 81       	ld	r24, Z
    1564:	8e 7f       	andi	r24, 0xFE	; 254
    1566:	8c 93       	st	X, r24
    1568:	a7 c0       	rjmp	.+334    	; 0x16b8 <MEXTI_voidInit+0x1f0>
				break;
			}
			case MEXTI_MODE_IOC:
			{
				CLEAR_BIT(MCUCR,ISC01);
    156a:	a5 e5       	ldi	r26, 0x55	; 85
    156c:	b0 e0       	ldi	r27, 0x00	; 0
    156e:	e5 e5       	ldi	r30, 0x55	; 85
    1570:	f0 e0       	ldi	r31, 0x00	; 0
    1572:	80 81       	ld	r24, Z
    1574:	8d 7f       	andi	r24, 0xFD	; 253
    1576:	8c 93       	st	X, r24
				SET_BIT(MCUCR,ISC00);
    1578:	a5 e5       	ldi	r26, 0x55	; 85
    157a:	b0 e0       	ldi	r27, 0x00	; 0
    157c:	e5 e5       	ldi	r30, 0x55	; 85
    157e:	f0 e0       	ldi	r31, 0x00	; 0
    1580:	80 81       	ld	r24, Z
    1582:	81 60       	ori	r24, 0x01	; 1
    1584:	8c 93       	st	X, r24
    1586:	98 c0       	rjmp	.+304    	; 0x16b8 <MEXTI_voidInit+0x1f0>
				break;
			}
			case MEXTI_MODE_RISING:
			{
				SET_BIT(MCUCR,ISC01);
    1588:	a5 e5       	ldi	r26, 0x55	; 85
    158a:	b0 e0       	ldi	r27, 0x00	; 0
    158c:	e5 e5       	ldi	r30, 0x55	; 85
    158e:	f0 e0       	ldi	r31, 0x00	; 0
    1590:	80 81       	ld	r24, Z
    1592:	82 60       	ori	r24, 0x02	; 2
    1594:	8c 93       	st	X, r24
				SET_BIT(MCUCR,ISC00);
    1596:	a5 e5       	ldi	r26, 0x55	; 85
    1598:	b0 e0       	ldi	r27, 0x00	; 0
    159a:	e5 e5       	ldi	r30, 0x55	; 85
    159c:	f0 e0       	ldi	r31, 0x00	; 0
    159e:	80 81       	ld	r24, Z
    15a0:	81 60       	ori	r24, 0x01	; 1
    15a2:	8c 93       	st	X, r24
    15a4:	89 c0       	rjmp	.+274    	; 0x16b8 <MEXTI_voidInit+0x1f0>
				break;				
			}
			case MEXTI_MODE_FALLING	:	
			{
				SET_BIT(MCUCR,ISC01);
    15a6:	a5 e5       	ldi	r26, 0x55	; 85
    15a8:	b0 e0       	ldi	r27, 0x00	; 0
    15aa:	e5 e5       	ldi	r30, 0x55	; 85
    15ac:	f0 e0       	ldi	r31, 0x00	; 0
    15ae:	80 81       	ld	r24, Z
    15b0:	82 60       	ori	r24, 0x02	; 2
    15b2:	8c 93       	st	X, r24
				CLEAR_BIT(MCUCR,ISC00);
    15b4:	a5 e5       	ldi	r26, 0x55	; 85
    15b6:	b0 e0       	ldi	r27, 0x00	; 0
    15b8:	e5 e5       	ldi	r30, 0x55	; 85
    15ba:	f0 e0       	ldi	r31, 0x00	; 0
    15bc:	80 81       	ld	r24, Z
    15be:	8e 7f       	andi	r24, 0xFE	; 254
    15c0:	8c 93       	st	X, r24
    15c2:	7a c0       	rjmp	.+244    	; 0x16b8 <MEXTI_voidInit+0x1f0>
			}
		break;
		}
		case MEXTI_INT1 :
		{
			switch(ARG_u8InterruptMode)
    15c4:	8a 81       	ldd	r24, Y+2	; 0x02
    15c6:	28 2f       	mov	r18, r24
    15c8:	30 e0       	ldi	r19, 0x00	; 0
    15ca:	3e 83       	std	Y+6, r19	; 0x06
    15cc:	2d 83       	std	Y+5, r18	; 0x05
    15ce:	8d 81       	ldd	r24, Y+5	; 0x05
    15d0:	9e 81       	ldd	r25, Y+6	; 0x06
    15d2:	81 30       	cpi	r24, 0x01	; 1
    15d4:	91 05       	cpc	r25, r1
    15d6:	21 f1       	breq	.+72     	; 0x1620 <MEXTI_voidInit+0x158>
    15d8:	2d 81       	ldd	r18, Y+5	; 0x05
    15da:	3e 81       	ldd	r19, Y+6	; 0x06
    15dc:	22 30       	cpi	r18, 0x02	; 2
    15de:	31 05       	cpc	r19, r1
    15e0:	2c f4       	brge	.+10     	; 0x15ec <MEXTI_voidInit+0x124>
    15e2:	8d 81       	ldd	r24, Y+5	; 0x05
    15e4:	9e 81       	ldd	r25, Y+6	; 0x06
    15e6:	00 97       	sbiw	r24, 0x00	; 0
    15e8:	61 f0       	breq	.+24     	; 0x1602 <MEXTI_voidInit+0x13a>
    15ea:	66 c0       	rjmp	.+204    	; 0x16b8 <MEXTI_voidInit+0x1f0>
    15ec:	2d 81       	ldd	r18, Y+5	; 0x05
    15ee:	3e 81       	ldd	r19, Y+6	; 0x06
    15f0:	22 30       	cpi	r18, 0x02	; 2
    15f2:	31 05       	cpc	r19, r1
    15f4:	21 f1       	breq	.+72     	; 0x163e <MEXTI_voidInit+0x176>
    15f6:	8d 81       	ldd	r24, Y+5	; 0x05
    15f8:	9e 81       	ldd	r25, Y+6	; 0x06
    15fa:	83 30       	cpi	r24, 0x03	; 3
    15fc:	91 05       	cpc	r25, r1
    15fe:	71 f1       	breq	.+92     	; 0x165c <MEXTI_voidInit+0x194>
    1600:	5b c0       	rjmp	.+182    	; 0x16b8 <MEXTI_voidInit+0x1f0>
			{
				case MEXTI_MODE_LOW:
				{
					CLEAR_BIT(MCUCR,ISC11);
    1602:	a5 e5       	ldi	r26, 0x55	; 85
    1604:	b0 e0       	ldi	r27, 0x00	; 0
    1606:	e5 e5       	ldi	r30, 0x55	; 85
    1608:	f0 e0       	ldi	r31, 0x00	; 0
    160a:	80 81       	ld	r24, Z
    160c:	87 7f       	andi	r24, 0xF7	; 247
    160e:	8c 93       	st	X, r24
					CLEAR_BIT(MCUCR,ISC10);
    1610:	a5 e5       	ldi	r26, 0x55	; 85
    1612:	b0 e0       	ldi	r27, 0x00	; 0
    1614:	e5 e5       	ldi	r30, 0x55	; 85
    1616:	f0 e0       	ldi	r31, 0x00	; 0
    1618:	80 81       	ld	r24, Z
    161a:	8b 7f       	andi	r24, 0xFB	; 251
    161c:	8c 93       	st	X, r24
    161e:	4c c0       	rjmp	.+152    	; 0x16b8 <MEXTI_voidInit+0x1f0>
					break;
				}
				case MEXTI_MODE_IOC:
				{
					CLEAR_BIT(MCUCR,ISC11);
    1620:	a5 e5       	ldi	r26, 0x55	; 85
    1622:	b0 e0       	ldi	r27, 0x00	; 0
    1624:	e5 e5       	ldi	r30, 0x55	; 85
    1626:	f0 e0       	ldi	r31, 0x00	; 0
    1628:	80 81       	ld	r24, Z
    162a:	87 7f       	andi	r24, 0xF7	; 247
    162c:	8c 93       	st	X, r24
					SET_BIT(MCUCR,ISC10);
    162e:	a5 e5       	ldi	r26, 0x55	; 85
    1630:	b0 e0       	ldi	r27, 0x00	; 0
    1632:	e5 e5       	ldi	r30, 0x55	; 85
    1634:	f0 e0       	ldi	r31, 0x00	; 0
    1636:	80 81       	ld	r24, Z
    1638:	84 60       	ori	r24, 0x04	; 4
    163a:	8c 93       	st	X, r24
    163c:	3d c0       	rjmp	.+122    	; 0x16b8 <MEXTI_voidInit+0x1f0>
					break;
				}
				case MEXTI_MODE_RISING:
				{
					SET_BIT(MCUCR,ISC11);
    163e:	a5 e5       	ldi	r26, 0x55	; 85
    1640:	b0 e0       	ldi	r27, 0x00	; 0
    1642:	e5 e5       	ldi	r30, 0x55	; 85
    1644:	f0 e0       	ldi	r31, 0x00	; 0
    1646:	80 81       	ld	r24, Z
    1648:	88 60       	ori	r24, 0x08	; 8
    164a:	8c 93       	st	X, r24
					SET_BIT(MCUCR,ISC10);
    164c:	a5 e5       	ldi	r26, 0x55	; 85
    164e:	b0 e0       	ldi	r27, 0x00	; 0
    1650:	e5 e5       	ldi	r30, 0x55	; 85
    1652:	f0 e0       	ldi	r31, 0x00	; 0
    1654:	80 81       	ld	r24, Z
    1656:	84 60       	ori	r24, 0x04	; 4
    1658:	8c 93       	st	X, r24
    165a:	2e c0       	rjmp	.+92     	; 0x16b8 <MEXTI_voidInit+0x1f0>
					break;
				}
				case MEXTI_MODE_FALLING	:
				{
					SET_BIT(MCUCR,ISC11);
    165c:	a5 e5       	ldi	r26, 0x55	; 85
    165e:	b0 e0       	ldi	r27, 0x00	; 0
    1660:	e5 e5       	ldi	r30, 0x55	; 85
    1662:	f0 e0       	ldi	r31, 0x00	; 0
    1664:	80 81       	ld	r24, Z
    1666:	88 60       	ori	r24, 0x08	; 8
    1668:	8c 93       	st	X, r24
					CLEAR_BIT(MCUCR,ISC10);
    166a:	a5 e5       	ldi	r26, 0x55	; 85
    166c:	b0 e0       	ldi	r27, 0x00	; 0
    166e:	e5 e5       	ldi	r30, 0x55	; 85
    1670:	f0 e0       	ldi	r31, 0x00	; 0
    1672:	80 81       	ld	r24, Z
    1674:	8b 7f       	andi	r24, 0xFB	; 251
    1676:	8c 93       	st	X, r24
    1678:	1f c0       	rjmp	.+62     	; 0x16b8 <MEXTI_voidInit+0x1f0>
		}


		case MEXTI_INT2:
		{
			switch(ARG_u8InterruptMode)
    167a:	8a 81       	ldd	r24, Y+2	; 0x02
    167c:	28 2f       	mov	r18, r24
    167e:	30 e0       	ldi	r19, 0x00	; 0
    1680:	3c 83       	std	Y+4, r19	; 0x04
    1682:	2b 83       	std	Y+3, r18	; 0x03
    1684:	8b 81       	ldd	r24, Y+3	; 0x03
    1686:	9c 81       	ldd	r25, Y+4	; 0x04
    1688:	82 30       	cpi	r24, 0x02	; 2
    168a:	91 05       	cpc	r25, r1
    168c:	31 f0       	breq	.+12     	; 0x169a <MEXTI_voidInit+0x1d2>
    168e:	2b 81       	ldd	r18, Y+3	; 0x03
    1690:	3c 81       	ldd	r19, Y+4	; 0x04
    1692:	23 30       	cpi	r18, 0x03	; 3
    1694:	31 05       	cpc	r19, r1
    1696:	49 f0       	breq	.+18     	; 0x16aa <MEXTI_voidInit+0x1e2>
    1698:	0f c0       	rjmp	.+30     	; 0x16b8 <MEXTI_voidInit+0x1f0>
			{

				case MEXTI_MODE_RISING:
				{
					SET_BIT(MCUCR,ISC2);
    169a:	a5 e5       	ldi	r26, 0x55	; 85
    169c:	b0 e0       	ldi	r27, 0x00	; 0
    169e:	e5 e5       	ldi	r30, 0x55	; 85
    16a0:	f0 e0       	ldi	r31, 0x00	; 0
    16a2:	80 81       	ld	r24, Z
    16a4:	80 64       	ori	r24, 0x40	; 64
    16a6:	8c 93       	st	X, r24
    16a8:	07 c0       	rjmp	.+14     	; 0x16b8 <MEXTI_voidInit+0x1f0>
					break;
				}
				case MEXTI_MODE_FALLING	:
				{
					CLEAR_BIT(MCUCR,ISC2);
    16aa:	a5 e5       	ldi	r26, 0x55	; 85
    16ac:	b0 e0       	ldi	r27, 0x00	; 0
    16ae:	e5 e5       	ldi	r30, 0x55	; 85
    16b0:	f0 e0       	ldi	r31, 0x00	; 0
    16b2:	80 81       	ld	r24, Z
    16b4:	8f 7b       	andi	r24, 0xBF	; 191
    16b6:	8c 93       	st	X, r24
			break;
		}

		default :{break;}
	}
}
    16b8:	2a 96       	adiw	r28, 0x0a	; 10
    16ba:	0f b6       	in	r0, 0x3f	; 63
    16bc:	f8 94       	cli
    16be:	de bf       	out	0x3e, r29	; 62
    16c0:	0f be       	out	0x3f, r0	; 63
    16c2:	cd bf       	out	0x3d, r28	; 61
    16c4:	cf 91       	pop	r28
    16c6:	df 91       	pop	r29
    16c8:	08 95       	ret

000016ca <MEXTI_voidEnableInterrupt>:
void MEXTI_voidEnableInterrupt(u8 ARG_u8InterruptNo)
{
    16ca:	df 93       	push	r29
    16cc:	cf 93       	push	r28
    16ce:	0f 92       	push	r0
    16d0:	cd b7       	in	r28, 0x3d	; 61
    16d2:	de b7       	in	r29, 0x3e	; 62
    16d4:	89 83       	std	Y+1, r24	; 0x01
	if(ARG_u8InterruptNo>=5 && ARG_u8InterruptNo<=7)
    16d6:	89 81       	ldd	r24, Y+1	; 0x01
    16d8:	85 30       	cpi	r24, 0x05	; 5
    16da:	b0 f0       	brcs	.+44     	; 0x1708 <MEXTI_voidEnableInterrupt+0x3e>
    16dc:	89 81       	ldd	r24, Y+1	; 0x01
    16de:	88 30       	cpi	r24, 0x08	; 8
    16e0:	98 f4       	brcc	.+38     	; 0x1708 <MEXTI_voidEnableInterrupt+0x3e>
	{
		SET_BIT(GICR,ARG_u8InterruptNo);
    16e2:	ab e5       	ldi	r26, 0x5B	; 91
    16e4:	b0 e0       	ldi	r27, 0x00	; 0
    16e6:	eb e5       	ldi	r30, 0x5B	; 91
    16e8:	f0 e0       	ldi	r31, 0x00	; 0
    16ea:	80 81       	ld	r24, Z
    16ec:	48 2f       	mov	r20, r24
    16ee:	89 81       	ldd	r24, Y+1	; 0x01
    16f0:	28 2f       	mov	r18, r24
    16f2:	30 e0       	ldi	r19, 0x00	; 0
    16f4:	81 e0       	ldi	r24, 0x01	; 1
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	02 2e       	mov	r0, r18
    16fa:	02 c0       	rjmp	.+4      	; 0x1700 <MEXTI_voidEnableInterrupt+0x36>
    16fc:	88 0f       	add	r24, r24
    16fe:	99 1f       	adc	r25, r25
    1700:	0a 94       	dec	r0
    1702:	e2 f7       	brpl	.-8      	; 0x16fc <MEXTI_voidEnableInterrupt+0x32>
    1704:	84 2b       	or	r24, r20
    1706:	8c 93       	st	X, r24
	}
	else
	{
		//report error
	}	
}
    1708:	0f 90       	pop	r0
    170a:	cf 91       	pop	r28
    170c:	df 91       	pop	r29
    170e:	08 95       	ret

00001710 <MEXTI_voidDisableInterrupt>:
void MEXTI_voidDisableInterrupt(u8 ARG_u8InterruptNo)
{
    1710:	df 93       	push	r29
    1712:	cf 93       	push	r28
    1714:	0f 92       	push	r0
    1716:	cd b7       	in	r28, 0x3d	; 61
    1718:	de b7       	in	r29, 0x3e	; 62
    171a:	89 83       	std	Y+1, r24	; 0x01
	if(ARG_u8InterruptNo>=5 && ARG_u8InterruptNo<=7)
    171c:	89 81       	ldd	r24, Y+1	; 0x01
    171e:	85 30       	cpi	r24, 0x05	; 5
    1720:	b8 f0       	brcs	.+46     	; 0x1750 <MEXTI_voidDisableInterrupt+0x40>
    1722:	89 81       	ldd	r24, Y+1	; 0x01
    1724:	88 30       	cpi	r24, 0x08	; 8
    1726:	a0 f4       	brcc	.+40     	; 0x1750 <MEXTI_voidDisableInterrupt+0x40>
	{
		CLEAR_BIT(GICR,ARG_u8InterruptNo);
    1728:	ab e5       	ldi	r26, 0x5B	; 91
    172a:	b0 e0       	ldi	r27, 0x00	; 0
    172c:	eb e5       	ldi	r30, 0x5B	; 91
    172e:	f0 e0       	ldi	r31, 0x00	; 0
    1730:	80 81       	ld	r24, Z
    1732:	48 2f       	mov	r20, r24
    1734:	89 81       	ldd	r24, Y+1	; 0x01
    1736:	28 2f       	mov	r18, r24
    1738:	30 e0       	ldi	r19, 0x00	; 0
    173a:	81 e0       	ldi	r24, 0x01	; 1
    173c:	90 e0       	ldi	r25, 0x00	; 0
    173e:	02 2e       	mov	r0, r18
    1740:	02 c0       	rjmp	.+4      	; 0x1746 <MEXTI_voidDisableInterrupt+0x36>
    1742:	88 0f       	add	r24, r24
    1744:	99 1f       	adc	r25, r25
    1746:	0a 94       	dec	r0
    1748:	e2 f7       	brpl	.-8      	; 0x1742 <MEXTI_voidDisableInterrupt+0x32>
    174a:	80 95       	com	r24
    174c:	84 23       	and	r24, r20
    174e:	8c 93       	st	X, r24
	}
	else
	{
		//report error
	}
}
    1750:	0f 90       	pop	r0
    1752:	cf 91       	pop	r28
    1754:	df 91       	pop	r29
    1756:	08 95       	ret

00001758 <MEXTI_voidSetCallback>:

void MEXTI_voidSetCallback(void(*ARG_pvoidfUserFunction)(void),u8 ARG_u8InterruptNo)
{
    1758:	df 93       	push	r29
    175a:	cf 93       	push	r28
    175c:	00 d0       	rcall	.+0      	; 0x175e <MEXTI_voidSetCallback+0x6>
    175e:	00 d0       	rcall	.+0      	; 0x1760 <MEXTI_voidSetCallback+0x8>
    1760:	0f 92       	push	r0
    1762:	cd b7       	in	r28, 0x3d	; 61
    1764:	de b7       	in	r29, 0x3e	; 62
    1766:	9a 83       	std	Y+2, r25	; 0x02
    1768:	89 83       	std	Y+1, r24	; 0x01
    176a:	6b 83       	std	Y+3, r22	; 0x03
		switch(ARG_u8InterruptNo)
    176c:	8b 81       	ldd	r24, Y+3	; 0x03
    176e:	28 2f       	mov	r18, r24
    1770:	30 e0       	ldi	r19, 0x00	; 0
    1772:	3d 83       	std	Y+5, r19	; 0x05
    1774:	2c 83       	std	Y+4, r18	; 0x04
    1776:	8c 81       	ldd	r24, Y+4	; 0x04
    1778:	9d 81       	ldd	r25, Y+5	; 0x05
    177a:	86 30       	cpi	r24, 0x06	; 6
    177c:	91 05       	cpc	r25, r1
    177e:	59 f0       	breq	.+22     	; 0x1796 <MEXTI_voidSetCallback+0x3e>
    1780:	2c 81       	ldd	r18, Y+4	; 0x04
    1782:	3d 81       	ldd	r19, Y+5	; 0x05
    1784:	27 30       	cpi	r18, 0x07	; 7
    1786:	31 05       	cpc	r19, r1
    1788:	69 f0       	breq	.+26     	; 0x17a4 <MEXTI_voidSetCallback+0x4c>
    178a:	8c 81       	ldd	r24, Y+4	; 0x04
    178c:	9d 81       	ldd	r25, Y+5	; 0x05
    178e:	85 30       	cpi	r24, 0x05	; 5
    1790:	91 05       	cpc	r25, r1
    1792:	79 f0       	breq	.+30     	; 0x17b2 <MEXTI_voidSetCallback+0x5a>
    1794:	14 c0       	rjmp	.+40     	; 0x17be <MEXTI_voidSetCallback+0x66>
	{
		case MEXTI_INT0: MEXTI_pvoidfUserFunctionINT0 = ARG_pvoidfUserFunction; break;
    1796:	89 81       	ldd	r24, Y+1	; 0x01
    1798:	9a 81       	ldd	r25, Y+2	; 0x02
    179a:	90 93 69 00 	sts	0x0069, r25
    179e:	80 93 68 00 	sts	0x0068, r24
    17a2:	0d c0       	rjmp	.+26     	; 0x17be <MEXTI_voidSetCallback+0x66>
		case MEXTI_INT1: MEXTI_pvoidfUserFunctionINT1 = ARG_pvoidfUserFunction; break;
    17a4:	89 81       	ldd	r24, Y+1	; 0x01
    17a6:	9a 81       	ldd	r25, Y+2	; 0x02
    17a8:	90 93 6b 00 	sts	0x006B, r25
    17ac:	80 93 6a 00 	sts	0x006A, r24
    17b0:	06 c0       	rjmp	.+12     	; 0x17be <MEXTI_voidSetCallback+0x66>
		case MEXTI_INT2: MEXTI_pvoidfUserFunctionINT2 = ARG_pvoidfUserFunction; break;
    17b2:	89 81       	ldd	r24, Y+1	; 0x01
    17b4:	9a 81       	ldd	r25, Y+2	; 0x02
    17b6:	90 93 6d 00 	sts	0x006D, r25
    17ba:	80 93 6c 00 	sts	0x006C, r24
		default :/*report error*/ 		break;		

    }
}
    17be:	0f 90       	pop	r0
    17c0:	0f 90       	pop	r0
    17c2:	0f 90       	pop	r0
    17c4:	0f 90       	pop	r0
    17c6:	0f 90       	pop	r0
    17c8:	cf 91       	pop	r28
    17ca:	df 91       	pop	r29
    17cc:	08 95       	ret

000017ce <__vector_1>:

void __vector_1(void) __attribute__((signal));
void __vector_1(void)
{
    17ce:	1f 92       	push	r1
    17d0:	0f 92       	push	r0
    17d2:	0f b6       	in	r0, 0x3f	; 63
    17d4:	0f 92       	push	r0
    17d6:	11 24       	eor	r1, r1
    17d8:	2f 93       	push	r18
    17da:	3f 93       	push	r19
    17dc:	4f 93       	push	r20
    17de:	5f 93       	push	r21
    17e0:	6f 93       	push	r22
    17e2:	7f 93       	push	r23
    17e4:	8f 93       	push	r24
    17e6:	9f 93       	push	r25
    17e8:	af 93       	push	r26
    17ea:	bf 93       	push	r27
    17ec:	ef 93       	push	r30
    17ee:	ff 93       	push	r31
    17f0:	df 93       	push	r29
    17f2:	cf 93       	push	r28
    17f4:	cd b7       	in	r28, 0x3d	; 61
    17f6:	de b7       	in	r29, 0x3e	; 62
	if(MEXTI_pvoidfUserFunctionINT0 != NULL_POINTER)
    17f8:	80 91 68 00 	lds	r24, 0x0068
    17fc:	90 91 69 00 	lds	r25, 0x0069
    1800:	00 97       	sbiw	r24, 0x00	; 0
    1802:	29 f0       	breq	.+10     	; 0x180e <__vector_1+0x40>
	{	(*MEXTI_pvoidfUserFunctionINT0)();}
    1804:	e0 91 68 00 	lds	r30, 0x0068
    1808:	f0 91 69 00 	lds	r31, 0x0069
    180c:	09 95       	icall
	else
	{	/*misra*/}
		
}
    180e:	cf 91       	pop	r28
    1810:	df 91       	pop	r29
    1812:	ff 91       	pop	r31
    1814:	ef 91       	pop	r30
    1816:	bf 91       	pop	r27
    1818:	af 91       	pop	r26
    181a:	9f 91       	pop	r25
    181c:	8f 91       	pop	r24
    181e:	7f 91       	pop	r23
    1820:	6f 91       	pop	r22
    1822:	5f 91       	pop	r21
    1824:	4f 91       	pop	r20
    1826:	3f 91       	pop	r19
    1828:	2f 91       	pop	r18
    182a:	0f 90       	pop	r0
    182c:	0f be       	out	0x3f, r0	; 63
    182e:	0f 90       	pop	r0
    1830:	1f 90       	pop	r1
    1832:	18 95       	reti

00001834 <__vector_2>:
void __vector_2(void) __attribute__((signal));
void __vector_2(void)
{
    1834:	1f 92       	push	r1
    1836:	0f 92       	push	r0
    1838:	0f b6       	in	r0, 0x3f	; 63
    183a:	0f 92       	push	r0
    183c:	11 24       	eor	r1, r1
    183e:	2f 93       	push	r18
    1840:	3f 93       	push	r19
    1842:	4f 93       	push	r20
    1844:	5f 93       	push	r21
    1846:	6f 93       	push	r22
    1848:	7f 93       	push	r23
    184a:	8f 93       	push	r24
    184c:	9f 93       	push	r25
    184e:	af 93       	push	r26
    1850:	bf 93       	push	r27
    1852:	ef 93       	push	r30
    1854:	ff 93       	push	r31
    1856:	df 93       	push	r29
    1858:	cf 93       	push	r28
    185a:	cd b7       	in	r28, 0x3d	; 61
    185c:	de b7       	in	r29, 0x3e	; 62
	if(MEXTI_pvoidfUserFunctionINT1 != NULL_POINTER)
    185e:	80 91 6a 00 	lds	r24, 0x006A
    1862:	90 91 6b 00 	lds	r25, 0x006B
    1866:	00 97       	sbiw	r24, 0x00	; 0
    1868:	29 f0       	breq	.+10     	; 0x1874 <__vector_2+0x40>
		{(*MEXTI_pvoidfUserFunctionINT1)();}
    186a:	e0 91 6a 00 	lds	r30, 0x006A
    186e:	f0 91 6b 00 	lds	r31, 0x006B
    1872:	09 95       	icall
	else
	{/*misra*/}
		
}
    1874:	cf 91       	pop	r28
    1876:	df 91       	pop	r29
    1878:	ff 91       	pop	r31
    187a:	ef 91       	pop	r30
    187c:	bf 91       	pop	r27
    187e:	af 91       	pop	r26
    1880:	9f 91       	pop	r25
    1882:	8f 91       	pop	r24
    1884:	7f 91       	pop	r23
    1886:	6f 91       	pop	r22
    1888:	5f 91       	pop	r21
    188a:	4f 91       	pop	r20
    188c:	3f 91       	pop	r19
    188e:	2f 91       	pop	r18
    1890:	0f 90       	pop	r0
    1892:	0f be       	out	0x3f, r0	; 63
    1894:	0f 90       	pop	r0
    1896:	1f 90       	pop	r1
    1898:	18 95       	reti

0000189a <__vector_3>:

void __vector_3(void) __attribute__((signal));
void __vector_3(void)
{
    189a:	1f 92       	push	r1
    189c:	0f 92       	push	r0
    189e:	0f b6       	in	r0, 0x3f	; 63
    18a0:	0f 92       	push	r0
    18a2:	11 24       	eor	r1, r1
    18a4:	2f 93       	push	r18
    18a6:	3f 93       	push	r19
    18a8:	4f 93       	push	r20
    18aa:	5f 93       	push	r21
    18ac:	6f 93       	push	r22
    18ae:	7f 93       	push	r23
    18b0:	8f 93       	push	r24
    18b2:	9f 93       	push	r25
    18b4:	af 93       	push	r26
    18b6:	bf 93       	push	r27
    18b8:	ef 93       	push	r30
    18ba:	ff 93       	push	r31
    18bc:	df 93       	push	r29
    18be:	cf 93       	push	r28
    18c0:	cd b7       	in	r28, 0x3d	; 61
    18c2:	de b7       	in	r29, 0x3e	; 62
	if(MEXTI_pvoidfUserFunctionINT2 != NULL_POINTER)
    18c4:	80 91 6c 00 	lds	r24, 0x006C
    18c8:	90 91 6d 00 	lds	r25, 0x006D
    18cc:	00 97       	sbiw	r24, 0x00	; 0
    18ce:	29 f0       	breq	.+10     	; 0x18da <__vector_3+0x40>
	{	(*MEXTI_pvoidfUserFunctionINT2)();}
    18d0:	e0 91 6c 00 	lds	r30, 0x006C
    18d4:	f0 91 6d 00 	lds	r31, 0x006D
    18d8:	09 95       	icall
	else
	{	/*misra*/}

}
    18da:	cf 91       	pop	r28
    18dc:	df 91       	pop	r29
    18de:	ff 91       	pop	r31
    18e0:	ef 91       	pop	r30
    18e2:	bf 91       	pop	r27
    18e4:	af 91       	pop	r26
    18e6:	9f 91       	pop	r25
    18e8:	8f 91       	pop	r24
    18ea:	7f 91       	pop	r23
    18ec:	6f 91       	pop	r22
    18ee:	5f 91       	pop	r21
    18f0:	4f 91       	pop	r20
    18f2:	3f 91       	pop	r19
    18f4:	2f 91       	pop	r18
    18f6:	0f 90       	pop	r0
    18f8:	0f be       	out	0x3f, r0	; 63
    18fa:	0f 90       	pop	r0
    18fc:	1f 90       	pop	r1
    18fe:	18 95       	reti

00001900 <MGIE_voidEnableGI>:

#include "MGIE_private.h"
#include "MGIE_interface.h"

void MGIE_voidEnableGI(void)
{
    1900:	df 93       	push	r29
    1902:	cf 93       	push	r28
    1904:	cd b7       	in	r28, 0x3d	; 61
    1906:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG,I);
    1908:	af e5       	ldi	r26, 0x5F	; 95
    190a:	b0 e0       	ldi	r27, 0x00	; 0
    190c:	ef e5       	ldi	r30, 0x5F	; 95
    190e:	f0 e0       	ldi	r31, 0x00	; 0
    1910:	80 81       	ld	r24, Z
    1912:	80 68       	ori	r24, 0x80	; 128
    1914:	8c 93       	st	X, r24
}
    1916:	cf 91       	pop	r28
    1918:	df 91       	pop	r29
    191a:	08 95       	ret

0000191c <MGIE_voidDisableGI>:
void MGIE_voidDisableGI(void)
{
    191c:	df 93       	push	r29
    191e:	cf 93       	push	r28
    1920:	cd b7       	in	r28, 0x3d	; 61
    1922:	de b7       	in	r29, 0x3e	; 62
	CLEAR_BIT(SREG,I);	
    1924:	af e5       	ldi	r26, 0x5F	; 95
    1926:	b0 e0       	ldi	r27, 0x00	; 0
    1928:	ef e5       	ldi	r30, 0x5F	; 95
    192a:	f0 e0       	ldi	r31, 0x00	; 0
    192c:	80 81       	ld	r24, Z
    192e:	8f 77       	andi	r24, 0x7F	; 127
    1930:	8c 93       	st	X, r24
    1932:	cf 91       	pop	r28
    1934:	df 91       	pop	r29
    1936:	08 95       	ret

00001938 <main>:
#include "MGIE_interface.h"
#include "MEXTI_interface.h"
void func1(void);
void func2(void);
int main(void)
{
    1938:	df 93       	push	r29
    193a:	cf 93       	push	r28
    193c:	cd b7       	in	r28, 0x3d	; 61
    193e:	de b7       	in	r29, 0x3e	; 62
    MDIO_voidSetPortDirection(MDIO_PORTB,MDIO_PORT_OUTPUT);
    1940:	81 e2       	ldi	r24, 0x21	; 33
    1942:	6f ef       	ldi	r22, 0xFF	; 255
    1944:	0e 94 a3 05 	call	0xb46	; 0xb46 <MDIO_voidSetPortDirection>
	MDIO_voidSetPinDirection(MDIO_PORTD,2,MDIO_INPUT_PULLUP);
    1948:	85 e0       	ldi	r24, 0x05	; 5
    194a:	62 e0       	ldi	r22, 0x02	; 2
    194c:	48 ec       	ldi	r20, 0xC8	; 200
    194e:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(MDIO_PORTD,3,MDIO_INPUT_PULLUP);
    1952:	85 e0       	ldi	r24, 0x05	; 5
    1954:	63 e0       	ldi	r22, 0x03	; 3
    1956:	48 ec       	ldi	r20, 0xC8	; 200
    1958:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <MDIO_voidSetPinDirection>

	MDIO_voidSetPinDirection(MDIO_PORTD,0,MDIO_OUTPUT);
    195c:	85 e0       	ldi	r24, 0x05	; 5
    195e:	60 e0       	ldi	r22, 0x00	; 0
    1960:	4a e5       	ldi	r20, 0x5A	; 90
    1962:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(MDIO_PORTD,1,MDIO_OUTPUT);
    1966:	85 e0       	ldi	r24, 0x05	; 5
    1968:	61 e0       	ldi	r22, 0x01	; 1
    196a:	4a e5       	ldi	r20, 0x5A	; 90
    196c:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <MDIO_voidSetPinDirection>

MEXTI_voidInit(MEXTI_INT0,MEXTI_MODE_IOC);  //1---MODE & INTERRUPT
    1970:	86 e0       	ldi	r24, 0x06	; 6
    1972:	61 e0       	ldi	r22, 0x01	; 1
    1974:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <MEXTI_voidInit>
MEXTI_voidInit(MEXTI_INT1,MEXTI_MODE_IOC);
    1978:	87 e0       	ldi	r24, 0x07	; 7
    197a:	61 e0       	ldi	r22, 0x01	; 1
    197c:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <MEXTI_voidInit>

MEXTI_voidSetCallback(func1,MEXTI_INT0);   //2-- ISR FUNCTION CALL
    1980:	83 ed       	ldi	r24, 0xD3	; 211
    1982:	9c e0       	ldi	r25, 0x0C	; 12
    1984:	66 e0       	ldi	r22, 0x06	; 6
    1986:	0e 94 ac 0b 	call	0x1758	; 0x1758 <MEXTI_voidSetCallback>
MEXTI_voidSetCallback(func2,MEXTI_INT1);
    198a:	8e ed       	ldi	r24, 0xDE	; 222
    198c:	9d e0       	ldi	r25, 0x0D	; 13
    198e:	67 e0       	ldi	r22, 0x07	; 7
    1990:	0e 94 ac 0b 	call	0x1758	; 0x1758 <MEXTI_voidSetCallback>

MEXTI_voidEnableInterrupt(MEXTI_INT0);    //3---ENABLE INTERRUPT
    1994:	86 e0       	ldi	r24, 0x06	; 6
    1996:	0e 94 65 0b 	call	0x16ca	; 0x16ca <MEXTI_voidEnableInterrupt>
MEXTI_voidEnableInterrupt(MEXTI_INT1);
    199a:	87 e0       	ldi	r24, 0x07	; 7
    199c:	0e 94 65 0b 	call	0x16ca	; 0x16ca <MEXTI_voidEnableInterrupt>

MGIE_voidEnableGI();                     //4--GLOBAL ENABLE
    19a0:	0e 94 80 0c 	call	0x1900	; 0x1900 <MGIE_voidEnableGI>
    19a4:	ff cf       	rjmp	.-2      	; 0x19a4 <main+0x6c>

000019a6 <func1>:
	}
	return 0;
}

void func1(void)
{
    19a6:	df 93       	push	r29
    19a8:	cf 93       	push	r28
    19aa:	cd b7       	in	r28, 0x3d	; 61
    19ac:	de b7       	in	r29, 0x3e	; 62
    19ae:	6e 97       	sbiw	r28, 0x1e	; 30
    19b0:	0f b6       	in	r0, 0x3f	; 63
    19b2:	f8 94       	cli
    19b4:	de bf       	out	0x3e, r29	; 62
    19b6:	0f be       	out	0x3f, r0	; 63
    19b8:	cd bf       	out	0x3d, r28	; 61
int i;
	for(i=0;i<=8;i++)
    19ba:	1e 8e       	std	Y+30, r1	; 0x1e
    19bc:	1d 8e       	std	Y+29, r1	; 0x1d
    19be:	ef c0       	rjmp	.+478    	; 0x1b9e <func1+0x1f8>
    19c0:	80 e0       	ldi	r24, 0x00	; 0
    19c2:	90 e0       	ldi	r25, 0x00	; 0
    19c4:	a8 e4       	ldi	r26, 0x48	; 72
    19c6:	b2 e4       	ldi	r27, 0x42	; 66
    19c8:	89 8f       	std	Y+25, r24	; 0x19
    19ca:	9a 8f       	std	Y+26, r25	; 0x1a
    19cc:	ab 8f       	std	Y+27, r26	; 0x1b
    19ce:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    19d0:	69 8d       	ldd	r22, Y+25	; 0x19
    19d2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    19d4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    19d6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    19d8:	20 e0       	ldi	r18, 0x00	; 0
    19da:	30 e0       	ldi	r19, 0x00	; 0
    19dc:	4a ef       	ldi	r20, 0xFA	; 250
    19de:	54 e4       	ldi	r21, 0x44	; 68
    19e0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    19e4:	dc 01       	movw	r26, r24
    19e6:	cb 01       	movw	r24, r22
    19e8:	8d 8b       	std	Y+21, r24	; 0x15
    19ea:	9e 8b       	std	Y+22, r25	; 0x16
    19ec:	af 8b       	std	Y+23, r26	; 0x17
    19ee:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    19f0:	6d 89       	ldd	r22, Y+21	; 0x15
    19f2:	7e 89       	ldd	r23, Y+22	; 0x16
    19f4:	8f 89       	ldd	r24, Y+23	; 0x17
    19f6:	98 8d       	ldd	r25, Y+24	; 0x18
    19f8:	20 e0       	ldi	r18, 0x00	; 0
    19fa:	30 e0       	ldi	r19, 0x00	; 0
    19fc:	40 e8       	ldi	r20, 0x80	; 128
    19fe:	5f e3       	ldi	r21, 0x3F	; 63
    1a00:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1a04:	88 23       	and	r24, r24
    1a06:	2c f4       	brge	.+10     	; 0x1a12 <func1+0x6c>
		__ticks = 1;
    1a08:	81 e0       	ldi	r24, 0x01	; 1
    1a0a:	90 e0       	ldi	r25, 0x00	; 0
    1a0c:	9c 8b       	std	Y+20, r25	; 0x14
    1a0e:	8b 8b       	std	Y+19, r24	; 0x13
    1a10:	3f c0       	rjmp	.+126    	; 0x1a90 <func1+0xea>
	else if (__tmp > 65535)
    1a12:	6d 89       	ldd	r22, Y+21	; 0x15
    1a14:	7e 89       	ldd	r23, Y+22	; 0x16
    1a16:	8f 89       	ldd	r24, Y+23	; 0x17
    1a18:	98 8d       	ldd	r25, Y+24	; 0x18
    1a1a:	20 e0       	ldi	r18, 0x00	; 0
    1a1c:	3f ef       	ldi	r19, 0xFF	; 255
    1a1e:	4f e7       	ldi	r20, 0x7F	; 127
    1a20:	57 e4       	ldi	r21, 0x47	; 71
    1a22:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1a26:	18 16       	cp	r1, r24
    1a28:	4c f5       	brge	.+82     	; 0x1a7c <func1+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a2a:	69 8d       	ldd	r22, Y+25	; 0x19
    1a2c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a2e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a30:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a32:	20 e0       	ldi	r18, 0x00	; 0
    1a34:	30 e0       	ldi	r19, 0x00	; 0
    1a36:	40 e2       	ldi	r20, 0x20	; 32
    1a38:	51 e4       	ldi	r21, 0x41	; 65
    1a3a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1a3e:	dc 01       	movw	r26, r24
    1a40:	cb 01       	movw	r24, r22
    1a42:	bc 01       	movw	r22, r24
    1a44:	cd 01       	movw	r24, r26
    1a46:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a4a:	dc 01       	movw	r26, r24
    1a4c:	cb 01       	movw	r24, r22
    1a4e:	9c 8b       	std	Y+20, r25	; 0x14
    1a50:	8b 8b       	std	Y+19, r24	; 0x13
    1a52:	0f c0       	rjmp	.+30     	; 0x1a72 <func1+0xcc>
    1a54:	88 ec       	ldi	r24, 0xC8	; 200
    1a56:	90 e0       	ldi	r25, 0x00	; 0
    1a58:	9a 8b       	std	Y+18, r25	; 0x12
    1a5a:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1a5c:	89 89       	ldd	r24, Y+17	; 0x11
    1a5e:	9a 89       	ldd	r25, Y+18	; 0x12
    1a60:	01 97       	sbiw	r24, 0x01	; 1
    1a62:	f1 f7       	brne	.-4      	; 0x1a60 <func1+0xba>
    1a64:	9a 8b       	std	Y+18, r25	; 0x12
    1a66:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a68:	8b 89       	ldd	r24, Y+19	; 0x13
    1a6a:	9c 89       	ldd	r25, Y+20	; 0x14
    1a6c:	01 97       	sbiw	r24, 0x01	; 1
    1a6e:	9c 8b       	std	Y+20, r25	; 0x14
    1a70:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a72:	8b 89       	ldd	r24, Y+19	; 0x13
    1a74:	9c 89       	ldd	r25, Y+20	; 0x14
    1a76:	00 97       	sbiw	r24, 0x00	; 0
    1a78:	69 f7       	brne	.-38     	; 0x1a54 <func1+0xae>
    1a7a:	14 c0       	rjmp	.+40     	; 0x1aa4 <func1+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a7c:	6d 89       	ldd	r22, Y+21	; 0x15
    1a7e:	7e 89       	ldd	r23, Y+22	; 0x16
    1a80:	8f 89       	ldd	r24, Y+23	; 0x17
    1a82:	98 8d       	ldd	r25, Y+24	; 0x18
    1a84:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1a88:	dc 01       	movw	r26, r24
    1a8a:	cb 01       	movw	r24, r22
    1a8c:	9c 8b       	std	Y+20, r25	; 0x14
    1a8e:	8b 8b       	std	Y+19, r24	; 0x13
    1a90:	8b 89       	ldd	r24, Y+19	; 0x13
    1a92:	9c 89       	ldd	r25, Y+20	; 0x14
    1a94:	98 8b       	std	Y+16, r25	; 0x10
    1a96:	8f 87       	std	Y+15, r24	; 0x0f
    1a98:	8f 85       	ldd	r24, Y+15	; 0x0f
    1a9a:	98 89       	ldd	r25, Y+16	; 0x10
    1a9c:	01 97       	sbiw	r24, 0x01	; 1
    1a9e:	f1 f7       	brne	.-4      	; 0x1a9c <func1+0xf6>
    1aa0:	98 8b       	std	Y+16, r25	; 0x10
    1aa2:	8f 87       	std	Y+15, r24	; 0x0f
	{
		_delay_ms(50);
		MDIO_voidSetPinValue(MDIO_PORTB,i,MDIO_TOGGLE);
    1aa4:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1aa6:	81 e2       	ldi	r24, 0x21	; 33
    1aa8:	69 2f       	mov	r22, r25
    1aaa:	42 e0       	ldi	r20, 0x02	; 2
    1aac:	0e 94 50 08 	call	0x10a0	; 0x10a0 <MDIO_voidSetPinValue>
    1ab0:	80 e0       	ldi	r24, 0x00	; 0
    1ab2:	90 e0       	ldi	r25, 0x00	; 0
    1ab4:	a8 e4       	ldi	r26, 0x48	; 72
    1ab6:	b2 e4       	ldi	r27, 0x42	; 66
    1ab8:	8b 87       	std	Y+11, r24	; 0x0b
    1aba:	9c 87       	std	Y+12, r25	; 0x0c
    1abc:	ad 87       	std	Y+13, r26	; 0x0d
    1abe:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ac0:	6b 85       	ldd	r22, Y+11	; 0x0b
    1ac2:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ac4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ac6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ac8:	20 e0       	ldi	r18, 0x00	; 0
    1aca:	30 e0       	ldi	r19, 0x00	; 0
    1acc:	4a ef       	ldi	r20, 0xFA	; 250
    1ace:	54 e4       	ldi	r21, 0x44	; 68
    1ad0:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1ad4:	dc 01       	movw	r26, r24
    1ad6:	cb 01       	movw	r24, r22
    1ad8:	8f 83       	std	Y+7, r24	; 0x07
    1ada:	98 87       	std	Y+8, r25	; 0x08
    1adc:	a9 87       	std	Y+9, r26	; 0x09
    1ade:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1ae0:	6f 81       	ldd	r22, Y+7	; 0x07
    1ae2:	78 85       	ldd	r23, Y+8	; 0x08
    1ae4:	89 85       	ldd	r24, Y+9	; 0x09
    1ae6:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ae8:	20 e0       	ldi	r18, 0x00	; 0
    1aea:	30 e0       	ldi	r19, 0x00	; 0
    1aec:	40 e8       	ldi	r20, 0x80	; 128
    1aee:	5f e3       	ldi	r21, 0x3F	; 63
    1af0:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
    1af4:	88 23       	and	r24, r24
    1af6:	2c f4       	brge	.+10     	; 0x1b02 <func1+0x15c>
		__ticks = 1;
    1af8:	81 e0       	ldi	r24, 0x01	; 1
    1afa:	90 e0       	ldi	r25, 0x00	; 0
    1afc:	9e 83       	std	Y+6, r25	; 0x06
    1afe:	8d 83       	std	Y+5, r24	; 0x05
    1b00:	3f c0       	rjmp	.+126    	; 0x1b80 <func1+0x1da>
	else if (__tmp > 65535)
    1b02:	6f 81       	ldd	r22, Y+7	; 0x07
    1b04:	78 85       	ldd	r23, Y+8	; 0x08
    1b06:	89 85       	ldd	r24, Y+9	; 0x09
    1b08:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b0a:	20 e0       	ldi	r18, 0x00	; 0
    1b0c:	3f ef       	ldi	r19, 0xFF	; 255
    1b0e:	4f e7       	ldi	r20, 0x7F	; 127
    1b10:	57 e4       	ldi	r21, 0x47	; 71
    1b12:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
    1b16:	18 16       	cp	r1, r24
    1b18:	4c f5       	brge	.+82     	; 0x1b6c <func1+0x1c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b1a:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b1c:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b1e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b20:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b22:	20 e0       	ldi	r18, 0x00	; 0
    1b24:	30 e0       	ldi	r19, 0x00	; 0
    1b26:	40 e2       	ldi	r20, 0x20	; 32
    1b28:	51 e4       	ldi	r21, 0x41	; 65
    1b2a:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1b2e:	dc 01       	movw	r26, r24
    1b30:	cb 01       	movw	r24, r22
    1b32:	bc 01       	movw	r22, r24
    1b34:	cd 01       	movw	r24, r26
    1b36:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b3a:	dc 01       	movw	r26, r24
    1b3c:	cb 01       	movw	r24, r22
    1b3e:	9e 83       	std	Y+6, r25	; 0x06
    1b40:	8d 83       	std	Y+5, r24	; 0x05
    1b42:	0f c0       	rjmp	.+30     	; 0x1b62 <func1+0x1bc>
    1b44:	88 ec       	ldi	r24, 0xC8	; 200
    1b46:	90 e0       	ldi	r25, 0x00	; 0
    1b48:	9c 83       	std	Y+4, r25	; 0x04
    1b4a:	8b 83       	std	Y+3, r24	; 0x03
    1b4c:	8b 81       	ldd	r24, Y+3	; 0x03
    1b4e:	9c 81       	ldd	r25, Y+4	; 0x04
    1b50:	01 97       	sbiw	r24, 0x01	; 1
    1b52:	f1 f7       	brne	.-4      	; 0x1b50 <func1+0x1aa>
    1b54:	9c 83       	std	Y+4, r25	; 0x04
    1b56:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b58:	8d 81       	ldd	r24, Y+5	; 0x05
    1b5a:	9e 81       	ldd	r25, Y+6	; 0x06
    1b5c:	01 97       	sbiw	r24, 0x01	; 1
    1b5e:	9e 83       	std	Y+6, r25	; 0x06
    1b60:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b62:	8d 81       	ldd	r24, Y+5	; 0x05
    1b64:	9e 81       	ldd	r25, Y+6	; 0x06
    1b66:	00 97       	sbiw	r24, 0x00	; 0
    1b68:	69 f7       	brne	.-38     	; 0x1b44 <func1+0x19e>
    1b6a:	14 c0       	rjmp	.+40     	; 0x1b94 <func1+0x1ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b6c:	6f 81       	ldd	r22, Y+7	; 0x07
    1b6e:	78 85       	ldd	r23, Y+8	; 0x08
    1b70:	89 85       	ldd	r24, Y+9	; 0x09
    1b72:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b74:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1b78:	dc 01       	movw	r26, r24
    1b7a:	cb 01       	movw	r24, r22
    1b7c:	9e 83       	std	Y+6, r25	; 0x06
    1b7e:	8d 83       	std	Y+5, r24	; 0x05
    1b80:	8d 81       	ldd	r24, Y+5	; 0x05
    1b82:	9e 81       	ldd	r25, Y+6	; 0x06
    1b84:	9a 83       	std	Y+2, r25	; 0x02
    1b86:	89 83       	std	Y+1, r24	; 0x01
    1b88:	89 81       	ldd	r24, Y+1	; 0x01
    1b8a:	9a 81       	ldd	r25, Y+2	; 0x02
    1b8c:	01 97       	sbiw	r24, 0x01	; 1
    1b8e:	f1 f7       	brne	.-4      	; 0x1b8c <func1+0x1e6>
    1b90:	9a 83       	std	Y+2, r25	; 0x02
    1b92:	89 83       	std	Y+1, r24	; 0x01
}

void func1(void)
{
int i;
	for(i=0;i<=8;i++)
    1b94:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1b96:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1b98:	01 96       	adiw	r24, 0x01	; 1
    1b9a:	9e 8f       	std	Y+30, r25	; 0x1e
    1b9c:	8d 8f       	std	Y+29, r24	; 0x1d
    1b9e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1ba0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1ba2:	89 30       	cpi	r24, 0x09	; 9
    1ba4:	91 05       	cpc	r25, r1
    1ba6:	0c f4       	brge	.+2      	; 0x1baa <func1+0x204>
    1ba8:	0b cf       	rjmp	.-490    	; 0x19c0 <func1+0x1a>
	{
		_delay_ms(50);
		MDIO_voidSetPinValue(MDIO_PORTB,i,MDIO_TOGGLE);
		_delay_ms(50);
	}
}
    1baa:	6e 96       	adiw	r28, 0x1e	; 30
    1bac:	0f b6       	in	r0, 0x3f	; 63
    1bae:	f8 94       	cli
    1bb0:	de bf       	out	0x3e, r29	; 62
    1bb2:	0f be       	out	0x3f, r0	; 63
    1bb4:	cd bf       	out	0x3d, r28	; 61
    1bb6:	cf 91       	pop	r28
    1bb8:	df 91       	pop	r29
    1bba:	08 95       	ret

00001bbc <func2>:
void func2(void)
{
    1bbc:	df 93       	push	r29
    1bbe:	cf 93       	push	r28
    1bc0:	cd b7       	in	r28, 0x3d	; 61
    1bc2:	de b7       	in	r29, 0x3e	; 62
MDIO_voidSetPinValue(MDIO_PORTD,1,MDIO_TOGGLE);
    1bc4:	85 e0       	ldi	r24, 0x05	; 5
    1bc6:	61 e0       	ldi	r22, 0x01	; 1
    1bc8:	42 e0       	ldi	r20, 0x02	; 2
    1bca:	0e 94 50 08 	call	0x10a0	; 0x10a0 <MDIO_voidSetPinValue>
}
    1bce:	cf 91       	pop	r28
    1bd0:	df 91       	pop	r29
    1bd2:	08 95       	ret

00001bd4 <__prologue_saves__>:
    1bd4:	2f 92       	push	r2
    1bd6:	3f 92       	push	r3
    1bd8:	4f 92       	push	r4
    1bda:	5f 92       	push	r5
    1bdc:	6f 92       	push	r6
    1bde:	7f 92       	push	r7
    1be0:	8f 92       	push	r8
    1be2:	9f 92       	push	r9
    1be4:	af 92       	push	r10
    1be6:	bf 92       	push	r11
    1be8:	cf 92       	push	r12
    1bea:	df 92       	push	r13
    1bec:	ef 92       	push	r14
    1bee:	ff 92       	push	r15
    1bf0:	0f 93       	push	r16
    1bf2:	1f 93       	push	r17
    1bf4:	cf 93       	push	r28
    1bf6:	df 93       	push	r29
    1bf8:	cd b7       	in	r28, 0x3d	; 61
    1bfa:	de b7       	in	r29, 0x3e	; 62
    1bfc:	ca 1b       	sub	r28, r26
    1bfe:	db 0b       	sbc	r29, r27
    1c00:	0f b6       	in	r0, 0x3f	; 63
    1c02:	f8 94       	cli
    1c04:	de bf       	out	0x3e, r29	; 62
    1c06:	0f be       	out	0x3f, r0	; 63
    1c08:	cd bf       	out	0x3d, r28	; 61
    1c0a:	09 94       	ijmp

00001c0c <__epilogue_restores__>:
    1c0c:	2a 88       	ldd	r2, Y+18	; 0x12
    1c0e:	39 88       	ldd	r3, Y+17	; 0x11
    1c10:	48 88       	ldd	r4, Y+16	; 0x10
    1c12:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c14:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c16:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c18:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c1a:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c1c:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c1e:	b9 84       	ldd	r11, Y+9	; 0x09
    1c20:	c8 84       	ldd	r12, Y+8	; 0x08
    1c22:	df 80       	ldd	r13, Y+7	; 0x07
    1c24:	ee 80       	ldd	r14, Y+6	; 0x06
    1c26:	fd 80       	ldd	r15, Y+5	; 0x05
    1c28:	0c 81       	ldd	r16, Y+4	; 0x04
    1c2a:	1b 81       	ldd	r17, Y+3	; 0x03
    1c2c:	aa 81       	ldd	r26, Y+2	; 0x02
    1c2e:	b9 81       	ldd	r27, Y+1	; 0x01
    1c30:	ce 0f       	add	r28, r30
    1c32:	d1 1d       	adc	r29, r1
    1c34:	0f b6       	in	r0, 0x3f	; 63
    1c36:	f8 94       	cli
    1c38:	de bf       	out	0x3e, r29	; 62
    1c3a:	0f be       	out	0x3f, r0	; 63
    1c3c:	cd bf       	out	0x3d, r28	; 61
    1c3e:	ed 01       	movw	r28, r26
    1c40:	08 95       	ret

00001c42 <_exit>:
    1c42:	f8 94       	cli

00001c44 <__stop_program>:
    1c44:	ff cf       	rjmp	.-2      	; 0x1c44 <__stop_program>
