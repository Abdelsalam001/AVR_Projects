
FOUR_ISR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f82  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000008  00800060  00800060  00000ff6  2**0
                  ALLOC
  2 .stab         00000f3c  00000000  00000000  00000ff8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000a86  00000000  00000000  00001f34  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 82 06 	jmp	0xd04	; 0xd04 <__vector_1>
   8:	0c 94 b5 06 	jmp	0xd6a	; 0xd6a <__vector_2>
   c:	0c 94 e8 06 	jmp	0xdd0	; 0xdd0 <__vector_3>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a8 36       	cpi	r26, 0x68	; 104
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 37 07 	call	0xe6e	; 0xe6e <main>
  74:	0c 94 bf 07 	jmp	0xf7e	; 0xf7e <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <MDIO_voidSetPortDirection>:

#include "MDIO_private.h"
#include "MDIO_interface.h"

void MDIO_voidSetPortDirection(u8 ARG_u8Port,u8 ARG_u8Directoin)
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	00 d0       	rcall	.+0      	; 0x82 <MDIO_voidSetPortDirection+0x6>
  82:	00 d0       	rcall	.+0      	; 0x84 <MDIO_voidSetPortDirection+0x8>
  84:	cd b7       	in	r28, 0x3d	; 61
  86:	de b7       	in	r29, 0x3e	; 62
  88:	89 83       	std	Y+1, r24	; 0x01
  8a:	6a 83       	std	Y+2, r22	; 0x02
	switch(ARG_u8Port)
  8c:	89 81       	ldd	r24, Y+1	; 0x01
  8e:	28 2f       	mov	r18, r24
  90:	30 e0       	ldi	r19, 0x00	; 0
  92:	3c 83       	std	Y+4, r19	; 0x04
  94:	2b 83       	std	Y+3, r18	; 0x03
  96:	8b 81       	ldd	r24, Y+3	; 0x03
  98:	9c 81       	ldd	r25, Y+4	; 0x04
  9a:	8c 30       	cpi	r24, 0x0C	; 12
  9c:	91 05       	cpc	r25, r1
  9e:	b1 f0       	breq	.+44     	; 0xcc <MDIO_voidSetPortDirection+0x50>
  a0:	2b 81       	ldd	r18, Y+3	; 0x03
  a2:	3c 81       	ldd	r19, Y+4	; 0x04
  a4:	2d 30       	cpi	r18, 0x0D	; 13
  a6:	31 05       	cpc	r19, r1
  a8:	34 f4       	brge	.+12     	; 0xb6 <MDIO_voidSetPortDirection+0x3a>
  aa:	8b 81       	ldd	r24, Y+3	; 0x03
  ac:	9c 81       	ldd	r25, Y+4	; 0x04
  ae:	85 30       	cpi	r24, 0x05	; 5
  b0:	91 05       	cpc	r25, r1
  b2:	d9 f0       	breq	.+54     	; 0xea <MDIO_voidSetPortDirection+0x6e>
  b4:	1e c0       	rjmp	.+60     	; 0xf2 <MDIO_voidSetPortDirection+0x76>
  b6:	2b 81       	ldd	r18, Y+3	; 0x03
  b8:	3c 81       	ldd	r19, Y+4	; 0x04
  ba:	21 32       	cpi	r18, 0x21	; 33
  bc:	31 05       	cpc	r19, r1
  be:	59 f0       	breq	.+22     	; 0xd6 <MDIO_voidSetPortDirection+0x5a>
  c0:	8b 81       	ldd	r24, Y+3	; 0x03
  c2:	9c 81       	ldd	r25, Y+4	; 0x04
  c4:	88 32       	cpi	r24, 0x28	; 40
  c6:	91 05       	cpc	r25, r1
  c8:	59 f0       	breq	.+22     	; 0xe0 <MDIO_voidSetPortDirection+0x64>
  ca:	13 c0       	rjmp	.+38     	; 0xf2 <MDIO_voidSetPortDirection+0x76>
	{
		case MDIO_PORTA : GPIOA -> DDR = ARG_u8Directoin; break ;
  cc:	e9 e3       	ldi	r30, 0x39	; 57
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	8a 81       	ldd	r24, Y+2	; 0x02
  d2:	81 83       	std	Z+1, r24	; 0x01
  d4:	0e c0       	rjmp	.+28     	; 0xf2 <MDIO_voidSetPortDirection+0x76>
		
		case MDIO_PORTB : GPIOB -> DDR = ARG_u8Directoin; break ;
  d6:	e6 e3       	ldi	r30, 0x36	; 54
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	8a 81       	ldd	r24, Y+2	; 0x02
  dc:	81 83       	std	Z+1, r24	; 0x01
  de:	09 c0       	rjmp	.+18     	; 0xf2 <MDIO_voidSetPortDirection+0x76>
		
		case MDIO_PORTC : GPIOC -> DDR = ARG_u8Directoin; break ;
  e0:	e3 e3       	ldi	r30, 0x33	; 51
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	8a 81       	ldd	r24, Y+2	; 0x02
  e6:	81 83       	std	Z+1, r24	; 0x01
  e8:	04 c0       	rjmp	.+8      	; 0xf2 <MDIO_voidSetPortDirection+0x76>
		
		case MDIO_PORTD : GPIOD -> DDR = ARG_u8Directoin; break ;
  ea:	e0 e3       	ldi	r30, 0x30	; 48
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	8a 81       	ldd	r24, Y+2	; 0x02
  f0:	81 83       	std	Z+1, r24	; 0x01
		
		default: break;
		
	}
}
  f2:	0f 90       	pop	r0
  f4:	0f 90       	pop	r0
  f6:	0f 90       	pop	r0
  f8:	0f 90       	pop	r0
  fa:	cf 91       	pop	r28
  fc:	df 91       	pop	r29
  fe:	08 95       	ret

00000100 <MDIO_voidSetPortValue>:
void MDIO_voidSetPortValue(u8 ARG_u8Port,u8 ARG_u8Value)
{
 100:	df 93       	push	r29
 102:	cf 93       	push	r28
 104:	00 d0       	rcall	.+0      	; 0x106 <MDIO_voidSetPortValue+0x6>
 106:	00 d0       	rcall	.+0      	; 0x108 <MDIO_voidSetPortValue+0x8>
 108:	cd b7       	in	r28, 0x3d	; 61
 10a:	de b7       	in	r29, 0x3e	; 62
 10c:	89 83       	std	Y+1, r24	; 0x01
 10e:	6a 83       	std	Y+2, r22	; 0x02
	switch(ARG_u8Port)
 110:	89 81       	ldd	r24, Y+1	; 0x01
 112:	28 2f       	mov	r18, r24
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	3c 83       	std	Y+4, r19	; 0x04
 118:	2b 83       	std	Y+3, r18	; 0x03
 11a:	8b 81       	ldd	r24, Y+3	; 0x03
 11c:	9c 81       	ldd	r25, Y+4	; 0x04
 11e:	8c 30       	cpi	r24, 0x0C	; 12
 120:	91 05       	cpc	r25, r1
 122:	b1 f0       	breq	.+44     	; 0x150 <MDIO_voidSetPortValue+0x50>
 124:	2b 81       	ldd	r18, Y+3	; 0x03
 126:	3c 81       	ldd	r19, Y+4	; 0x04
 128:	2d 30       	cpi	r18, 0x0D	; 13
 12a:	31 05       	cpc	r19, r1
 12c:	34 f4       	brge	.+12     	; 0x13a <MDIO_voidSetPortValue+0x3a>
 12e:	8b 81       	ldd	r24, Y+3	; 0x03
 130:	9c 81       	ldd	r25, Y+4	; 0x04
 132:	85 30       	cpi	r24, 0x05	; 5
 134:	91 05       	cpc	r25, r1
 136:	d9 f0       	breq	.+54     	; 0x16e <MDIO_voidSetPortValue+0x6e>
 138:	1e c0       	rjmp	.+60     	; 0x176 <MDIO_voidSetPortValue+0x76>
 13a:	2b 81       	ldd	r18, Y+3	; 0x03
 13c:	3c 81       	ldd	r19, Y+4	; 0x04
 13e:	21 32       	cpi	r18, 0x21	; 33
 140:	31 05       	cpc	r19, r1
 142:	59 f0       	breq	.+22     	; 0x15a <MDIO_voidSetPortValue+0x5a>
 144:	8b 81       	ldd	r24, Y+3	; 0x03
 146:	9c 81       	ldd	r25, Y+4	; 0x04
 148:	88 32       	cpi	r24, 0x28	; 40
 14a:	91 05       	cpc	r25, r1
 14c:	59 f0       	breq	.+22     	; 0x164 <MDIO_voidSetPortValue+0x64>
 14e:	13 c0       	rjmp	.+38     	; 0x176 <MDIO_voidSetPortValue+0x76>
	{
		case MDIO_PORTA : GPIOA -> PORT = ARG_u8Value; break ;
 150:	e9 e3       	ldi	r30, 0x39	; 57
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	8a 81       	ldd	r24, Y+2	; 0x02
 156:	82 83       	std	Z+2, r24	; 0x02
 158:	0e c0       	rjmp	.+28     	; 0x176 <MDIO_voidSetPortValue+0x76>
		
		case MDIO_PORTB : GPIOB -> PORT = ARG_u8Value; break ;
 15a:	e6 e3       	ldi	r30, 0x36	; 54
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	8a 81       	ldd	r24, Y+2	; 0x02
 160:	82 83       	std	Z+2, r24	; 0x02
 162:	09 c0       	rjmp	.+18     	; 0x176 <MDIO_voidSetPortValue+0x76>
		
		case MDIO_PORTC : GPIOC -> PORT = ARG_u8Value; break ;
 164:	e3 e3       	ldi	r30, 0x33	; 51
 166:	f0 e0       	ldi	r31, 0x00	; 0
 168:	8a 81       	ldd	r24, Y+2	; 0x02
 16a:	82 83       	std	Z+2, r24	; 0x02
 16c:	04 c0       	rjmp	.+8      	; 0x176 <MDIO_voidSetPortValue+0x76>
		
		case MDIO_PORTD : GPIOD -> PORT = ARG_u8Value; break ;
 16e:	e0 e3       	ldi	r30, 0x30	; 48
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	8a 81       	ldd	r24, Y+2	; 0x02
 174:	82 83       	std	Z+2, r24	; 0x02
		
		default: break;
		
	}	
}
 176:	0f 90       	pop	r0
 178:	0f 90       	pop	r0
 17a:	0f 90       	pop	r0
 17c:	0f 90       	pop	r0
 17e:	cf 91       	pop	r28
 180:	df 91       	pop	r29
 182:	08 95       	ret

00000184 <MDIO_voidGetPortValue>:
u8	 MDIO_voidGetPortValue(u8 ARG_u8Port)
{
 184:	df 93       	push	r29
 186:	cf 93       	push	r28
 188:	00 d0       	rcall	.+0      	; 0x18a <MDIO_voidGetPortValue+0x6>
 18a:	00 d0       	rcall	.+0      	; 0x18c <MDIO_voidGetPortValue+0x8>
 18c:	cd b7       	in	r28, 0x3d	; 61
 18e:	de b7       	in	r29, 0x3e	; 62
 190:	8a 83       	std	Y+2, r24	; 0x02
	u8 L_u8Value = 0;
 192:	19 82       	std	Y+1, r1	; 0x01
		switch(ARG_u8Port)
 194:	8a 81       	ldd	r24, Y+2	; 0x02
 196:	28 2f       	mov	r18, r24
 198:	30 e0       	ldi	r19, 0x00	; 0
 19a:	3c 83       	std	Y+4, r19	; 0x04
 19c:	2b 83       	std	Y+3, r18	; 0x03
 19e:	8b 81       	ldd	r24, Y+3	; 0x03
 1a0:	9c 81       	ldd	r25, Y+4	; 0x04
 1a2:	8c 30       	cpi	r24, 0x0C	; 12
 1a4:	91 05       	cpc	r25, r1
 1a6:	b1 f0       	breq	.+44     	; 0x1d4 <MDIO_voidGetPortValue+0x50>
 1a8:	2b 81       	ldd	r18, Y+3	; 0x03
 1aa:	3c 81       	ldd	r19, Y+4	; 0x04
 1ac:	2d 30       	cpi	r18, 0x0D	; 13
 1ae:	31 05       	cpc	r19, r1
 1b0:	34 f4       	brge	.+12     	; 0x1be <MDIO_voidGetPortValue+0x3a>
 1b2:	8b 81       	ldd	r24, Y+3	; 0x03
 1b4:	9c 81       	ldd	r25, Y+4	; 0x04
 1b6:	85 30       	cpi	r24, 0x05	; 5
 1b8:	91 05       	cpc	r25, r1
 1ba:	d9 f0       	breq	.+54     	; 0x1f2 <MDIO_voidGetPortValue+0x6e>
 1bc:	1e c0       	rjmp	.+60     	; 0x1fa <MDIO_voidGetPortValue+0x76>
 1be:	2b 81       	ldd	r18, Y+3	; 0x03
 1c0:	3c 81       	ldd	r19, Y+4	; 0x04
 1c2:	21 32       	cpi	r18, 0x21	; 33
 1c4:	31 05       	cpc	r19, r1
 1c6:	59 f0       	breq	.+22     	; 0x1de <MDIO_voidGetPortValue+0x5a>
 1c8:	8b 81       	ldd	r24, Y+3	; 0x03
 1ca:	9c 81       	ldd	r25, Y+4	; 0x04
 1cc:	88 32       	cpi	r24, 0x28	; 40
 1ce:	91 05       	cpc	r25, r1
 1d0:	59 f0       	breq	.+22     	; 0x1e8 <MDIO_voidGetPortValue+0x64>
 1d2:	13 c0       	rjmp	.+38     	; 0x1fa <MDIO_voidGetPortValue+0x76>
	{
		case MDIO_PORTA : L_u8Value = GPIOA -> PIN; break ;
 1d4:	e9 e3       	ldi	r30, 0x39	; 57
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	80 81       	ld	r24, Z
 1da:	89 83       	std	Y+1, r24	; 0x01
 1dc:	0e c0       	rjmp	.+28     	; 0x1fa <MDIO_voidGetPortValue+0x76>
		
		case MDIO_PORTB : L_u8Value = GPIOB -> PIN; break ;
 1de:	e6 e3       	ldi	r30, 0x36	; 54
 1e0:	f0 e0       	ldi	r31, 0x00	; 0
 1e2:	80 81       	ld	r24, Z
 1e4:	89 83       	std	Y+1, r24	; 0x01
 1e6:	09 c0       	rjmp	.+18     	; 0x1fa <MDIO_voidGetPortValue+0x76>
		
		case MDIO_PORTC : L_u8Value = GPIOC -> PIN; break ;
 1e8:	e3 e3       	ldi	r30, 0x33	; 51
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	80 81       	ld	r24, Z
 1ee:	89 83       	std	Y+1, r24	; 0x01
 1f0:	04 c0       	rjmp	.+8      	; 0x1fa <MDIO_voidGetPortValue+0x76>
		
		case MDIO_PORTD : L_u8Value = GPIOD -> PIN; break ;
 1f2:	e0 e3       	ldi	r30, 0x30	; 48
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	89 83       	std	Y+1, r24	; 0x01
		
		default: break;
		
	}
	return L_u8Value;
 1fa:	89 81       	ldd	r24, Y+1	; 0x01
}
 1fc:	0f 90       	pop	r0
 1fe:	0f 90       	pop	r0
 200:	0f 90       	pop	r0
 202:	0f 90       	pop	r0
 204:	cf 91       	pop	r28
 206:	df 91       	pop	r29
 208:	08 95       	ret

0000020a <MDIO_voidSetPinDirection>:

void MDIO_voidSetPinDirection(u8 ARG_u8Port,u8 ARG_u8Pin,u8 ARG_u8Directoin)
{
 20a:	df 93       	push	r29
 20c:	cf 93       	push	r28
 20e:	cd b7       	in	r28, 0x3d	; 61
 210:	de b7       	in	r29, 0x3e	; 62
 212:	29 97       	sbiw	r28, 0x09	; 9
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	f8 94       	cli
 218:	de bf       	out	0x3e, r29	; 62
 21a:	0f be       	out	0x3f, r0	; 63
 21c:	cd bf       	out	0x3d, r28	; 61
 21e:	89 83       	std	Y+1, r24	; 0x01
 220:	6a 83       	std	Y+2, r22	; 0x02
 222:	4b 83       	std	Y+3, r20	; 0x03
	if(ARG_u8Pin<=7)
 224:	8a 81       	ldd	r24, Y+2	; 0x02
 226:	88 30       	cpi	r24, 0x08	; 8
 228:	08 f0       	brcs	.+2      	; 0x22c <MDIO_voidSetPinDirection+0x22>
 22a:	cc c1       	rjmp	.+920    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
	{
		if(MDIO_OUTPUT==ARG_u8Directoin)
 22c:	8b 81       	ldd	r24, Y+3	; 0x03
 22e:	8a 35       	cpi	r24, 0x5A	; 90
 230:	09 f0       	breq	.+2      	; 0x234 <MDIO_voidSetPinDirection+0x2a>
 232:	79 c0       	rjmp	.+242    	; 0x326 <MDIO_voidSetPinDirection+0x11c>
		{
			switch(ARG_u8Port)
 234:	89 81       	ldd	r24, Y+1	; 0x01
 236:	28 2f       	mov	r18, r24
 238:	30 e0       	ldi	r19, 0x00	; 0
 23a:	39 87       	std	Y+9, r19	; 0x09
 23c:	28 87       	std	Y+8, r18	; 0x08
 23e:	88 85       	ldd	r24, Y+8	; 0x08
 240:	99 85       	ldd	r25, Y+9	; 0x09
 242:	8c 30       	cpi	r24, 0x0C	; 12
 244:	91 05       	cpc	r25, r1
 246:	b9 f0       	breq	.+46     	; 0x276 <MDIO_voidSetPinDirection+0x6c>
 248:	28 85       	ldd	r18, Y+8	; 0x08
 24a:	39 85       	ldd	r19, Y+9	; 0x09
 24c:	2d 30       	cpi	r18, 0x0D	; 13
 24e:	31 05       	cpc	r19, r1
 250:	3c f4       	brge	.+14     	; 0x260 <MDIO_voidSetPinDirection+0x56>
 252:	88 85       	ldd	r24, Y+8	; 0x08
 254:	99 85       	ldd	r25, Y+9	; 0x09
 256:	85 30       	cpi	r24, 0x05	; 5
 258:	91 05       	cpc	r25, r1
 25a:	09 f4       	brne	.+2      	; 0x25e <MDIO_voidSetPinDirection+0x54>
 25c:	4e c0       	rjmp	.+156    	; 0x2fa <MDIO_voidSetPinDirection+0xf0>
 25e:	b2 c1       	rjmp	.+868    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
 260:	28 85       	ldd	r18, Y+8	; 0x08
 262:	39 85       	ldd	r19, Y+9	; 0x09
 264:	21 32       	cpi	r18, 0x21	; 33
 266:	31 05       	cpc	r19, r1
 268:	e1 f0       	breq	.+56     	; 0x2a2 <MDIO_voidSetPinDirection+0x98>
 26a:	88 85       	ldd	r24, Y+8	; 0x08
 26c:	99 85       	ldd	r25, Y+9	; 0x09
 26e:	88 32       	cpi	r24, 0x28	; 40
 270:	91 05       	cpc	r25, r1
 272:	69 f1       	breq	.+90     	; 0x2ce <MDIO_voidSetPinDirection+0xc4>
 274:	a7 c1       	rjmp	.+846    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
			{
				case MDIO_PORTA: SET_BIT(GPIOA -> DDR, ARG_u8Pin); break;
 276:	a9 e3       	ldi	r26, 0x39	; 57
 278:	b0 e0       	ldi	r27, 0x00	; 0
 27a:	e9 e3       	ldi	r30, 0x39	; 57
 27c:	f0 e0       	ldi	r31, 0x00	; 0
 27e:	81 81       	ldd	r24, Z+1	; 0x01
 280:	48 2f       	mov	r20, r24
 282:	8a 81       	ldd	r24, Y+2	; 0x02
 284:	28 2f       	mov	r18, r24
 286:	30 e0       	ldi	r19, 0x00	; 0
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	02 2e       	mov	r0, r18
 28e:	02 c0       	rjmp	.+4      	; 0x294 <MDIO_voidSetPinDirection+0x8a>
 290:	88 0f       	add	r24, r24
 292:	99 1f       	adc	r25, r25
 294:	0a 94       	dec	r0
 296:	e2 f7       	brpl	.-8      	; 0x290 <MDIO_voidSetPinDirection+0x86>
 298:	84 2b       	or	r24, r20
 29a:	11 96       	adiw	r26, 0x01	; 1
 29c:	8c 93       	st	X, r24
 29e:	11 97       	sbiw	r26, 0x01	; 1
 2a0:	91 c1       	rjmp	.+802    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTB: SET_BIT(GPIOB -> DDR, ARG_u8Pin); break;
 2a2:	a6 e3       	ldi	r26, 0x36	; 54
 2a4:	b0 e0       	ldi	r27, 0x00	; 0
 2a6:	e6 e3       	ldi	r30, 0x36	; 54
 2a8:	f0 e0       	ldi	r31, 0x00	; 0
 2aa:	81 81       	ldd	r24, Z+1	; 0x01
 2ac:	48 2f       	mov	r20, r24
 2ae:	8a 81       	ldd	r24, Y+2	; 0x02
 2b0:	28 2f       	mov	r18, r24
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	02 2e       	mov	r0, r18
 2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <MDIO_voidSetPinDirection+0xb6>
 2bc:	88 0f       	add	r24, r24
 2be:	99 1f       	adc	r25, r25
 2c0:	0a 94       	dec	r0
 2c2:	e2 f7       	brpl	.-8      	; 0x2bc <MDIO_voidSetPinDirection+0xb2>
 2c4:	84 2b       	or	r24, r20
 2c6:	11 96       	adiw	r26, 0x01	; 1
 2c8:	8c 93       	st	X, r24
 2ca:	11 97       	sbiw	r26, 0x01	; 1
 2cc:	7b c1       	rjmp	.+758    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTC: SET_BIT(GPIOC -> DDR, ARG_u8Pin); break;
 2ce:	a3 e3       	ldi	r26, 0x33	; 51
 2d0:	b0 e0       	ldi	r27, 0x00	; 0
 2d2:	e3 e3       	ldi	r30, 0x33	; 51
 2d4:	f0 e0       	ldi	r31, 0x00	; 0
 2d6:	81 81       	ldd	r24, Z+1	; 0x01
 2d8:	48 2f       	mov	r20, r24
 2da:	8a 81       	ldd	r24, Y+2	; 0x02
 2dc:	28 2f       	mov	r18, r24
 2de:	30 e0       	ldi	r19, 0x00	; 0
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	02 2e       	mov	r0, r18
 2e6:	02 c0       	rjmp	.+4      	; 0x2ec <MDIO_voidSetPinDirection+0xe2>
 2e8:	88 0f       	add	r24, r24
 2ea:	99 1f       	adc	r25, r25
 2ec:	0a 94       	dec	r0
 2ee:	e2 f7       	brpl	.-8      	; 0x2e8 <MDIO_voidSetPinDirection+0xde>
 2f0:	84 2b       	or	r24, r20
 2f2:	11 96       	adiw	r26, 0x01	; 1
 2f4:	8c 93       	st	X, r24
 2f6:	11 97       	sbiw	r26, 0x01	; 1
 2f8:	65 c1       	rjmp	.+714    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTD: SET_BIT(GPIOD -> DDR, ARG_u8Pin); break;
 2fa:	a0 e3       	ldi	r26, 0x30	; 48
 2fc:	b0 e0       	ldi	r27, 0x00	; 0
 2fe:	e0 e3       	ldi	r30, 0x30	; 48
 300:	f0 e0       	ldi	r31, 0x00	; 0
 302:	81 81       	ldd	r24, Z+1	; 0x01
 304:	48 2f       	mov	r20, r24
 306:	8a 81       	ldd	r24, Y+2	; 0x02
 308:	28 2f       	mov	r18, r24
 30a:	30 e0       	ldi	r19, 0x00	; 0
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	02 2e       	mov	r0, r18
 312:	02 c0       	rjmp	.+4      	; 0x318 <MDIO_voidSetPinDirection+0x10e>
 314:	88 0f       	add	r24, r24
 316:	99 1f       	adc	r25, r25
 318:	0a 94       	dec	r0
 31a:	e2 f7       	brpl	.-8      	; 0x314 <MDIO_voidSetPinDirection+0x10a>
 31c:	84 2b       	or	r24, r20
 31e:	11 96       	adiw	r26, 0x01	; 1
 320:	8c 93       	st	X, r24
 322:	11 97       	sbiw	r26, 0x01	; 1
 324:	4f c1       	rjmp	.+670    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
				default: break;/*report error*/
			}			
		}
		else if(MDIO_INPUT==ARG_u8Directoin)
 326:	8b 81       	ldd	r24, Y+3	; 0x03
 328:	84 36       	cpi	r24, 0x64	; 100
 32a:	09 f0       	breq	.+2      	; 0x32e <MDIO_voidSetPinDirection+0x124>
 32c:	7e c0       	rjmp	.+252    	; 0x42a <MDIO_voidSetPinDirection+0x220>
		{
			switch(ARG_u8Port)
 32e:	89 81       	ldd	r24, Y+1	; 0x01
 330:	28 2f       	mov	r18, r24
 332:	30 e0       	ldi	r19, 0x00	; 0
 334:	3f 83       	std	Y+7, r19	; 0x07
 336:	2e 83       	std	Y+6, r18	; 0x06
 338:	8e 81       	ldd	r24, Y+6	; 0x06
 33a:	9f 81       	ldd	r25, Y+7	; 0x07
 33c:	8c 30       	cpi	r24, 0x0C	; 12
 33e:	91 05       	cpc	r25, r1
 340:	09 f4       	brne	.+2      	; 0x344 <MDIO_voidSetPinDirection+0x13a>
 342:	45 c0       	rjmp	.+138    	; 0x3ce <MDIO_voidSetPinDirection+0x1c4>
 344:	2e 81       	ldd	r18, Y+6	; 0x06
 346:	3f 81       	ldd	r19, Y+7	; 0x07
 348:	2d 30       	cpi	r18, 0x0D	; 13
 34a:	31 05       	cpc	r19, r1
 34c:	3c f4       	brge	.+14     	; 0x35c <MDIO_voidSetPinDirection+0x152>
 34e:	8e 81       	ldd	r24, Y+6	; 0x06
 350:	9f 81       	ldd	r25, Y+7	; 0x07
 352:	85 30       	cpi	r24, 0x05	; 5
 354:	91 05       	cpc	r25, r1
 356:	09 f4       	brne	.+2      	; 0x35a <MDIO_voidSetPinDirection+0x150>
 358:	51 c0       	rjmp	.+162    	; 0x3fc <MDIO_voidSetPinDirection+0x1f2>
 35a:	34 c1       	rjmp	.+616    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
 35c:	2e 81       	ldd	r18, Y+6	; 0x06
 35e:	3f 81       	ldd	r19, Y+7	; 0x07
 360:	21 32       	cpi	r18, 0x21	; 33
 362:	31 05       	cpc	r19, r1
 364:	31 f0       	breq	.+12     	; 0x372 <MDIO_voidSetPinDirection+0x168>
 366:	8e 81       	ldd	r24, Y+6	; 0x06
 368:	9f 81       	ldd	r25, Y+7	; 0x07
 36a:	88 32       	cpi	r24, 0x28	; 40
 36c:	91 05       	cpc	r25, r1
 36e:	c1 f0       	breq	.+48     	; 0x3a0 <MDIO_voidSetPinDirection+0x196>
 370:	29 c1       	rjmp	.+594    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
			{
				case MDIO_PORTB: CLEAR_BIT(GPIOB -> DDR, ARG_u8Pin); break;
 372:	a6 e3       	ldi	r26, 0x36	; 54
 374:	b0 e0       	ldi	r27, 0x00	; 0
 376:	e6 e3       	ldi	r30, 0x36	; 54
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	81 81       	ldd	r24, Z+1	; 0x01
 37c:	48 2f       	mov	r20, r24
 37e:	8a 81       	ldd	r24, Y+2	; 0x02
 380:	28 2f       	mov	r18, r24
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	90 e0       	ldi	r25, 0x00	; 0
 388:	02 2e       	mov	r0, r18
 38a:	02 c0       	rjmp	.+4      	; 0x390 <MDIO_voidSetPinDirection+0x186>
 38c:	88 0f       	add	r24, r24
 38e:	99 1f       	adc	r25, r25
 390:	0a 94       	dec	r0
 392:	e2 f7       	brpl	.-8      	; 0x38c <MDIO_voidSetPinDirection+0x182>
 394:	80 95       	com	r24
 396:	84 23       	and	r24, r20
 398:	11 96       	adiw	r26, 0x01	; 1
 39a:	8c 93       	st	X, r24
 39c:	11 97       	sbiw	r26, 0x01	; 1
 39e:	12 c1       	rjmp	.+548    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTC: CLEAR_BIT(GPIOC -> DDR, ARG_u8Pin); break;
 3a0:	a3 e3       	ldi	r26, 0x33	; 51
 3a2:	b0 e0       	ldi	r27, 0x00	; 0
 3a4:	e3 e3       	ldi	r30, 0x33	; 51
 3a6:	f0 e0       	ldi	r31, 0x00	; 0
 3a8:	81 81       	ldd	r24, Z+1	; 0x01
 3aa:	48 2f       	mov	r20, r24
 3ac:	8a 81       	ldd	r24, Y+2	; 0x02
 3ae:	28 2f       	mov	r18, r24
 3b0:	30 e0       	ldi	r19, 0x00	; 0
 3b2:	81 e0       	ldi	r24, 0x01	; 1
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	02 2e       	mov	r0, r18
 3b8:	02 c0       	rjmp	.+4      	; 0x3be <MDIO_voidSetPinDirection+0x1b4>
 3ba:	88 0f       	add	r24, r24
 3bc:	99 1f       	adc	r25, r25
 3be:	0a 94       	dec	r0
 3c0:	e2 f7       	brpl	.-8      	; 0x3ba <MDIO_voidSetPinDirection+0x1b0>
 3c2:	80 95       	com	r24
 3c4:	84 23       	and	r24, r20
 3c6:	11 96       	adiw	r26, 0x01	; 1
 3c8:	8c 93       	st	X, r24
 3ca:	11 97       	sbiw	r26, 0x01	; 1
 3cc:	fb c0       	rjmp	.+502    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTA: CLEAR_BIT(GPIOA -> DDR, ARG_u8Pin); break;
 3ce:	a9 e3       	ldi	r26, 0x39	; 57
 3d0:	b0 e0       	ldi	r27, 0x00	; 0
 3d2:	e9 e3       	ldi	r30, 0x39	; 57
 3d4:	f0 e0       	ldi	r31, 0x00	; 0
 3d6:	81 81       	ldd	r24, Z+1	; 0x01
 3d8:	48 2f       	mov	r20, r24
 3da:	8a 81       	ldd	r24, Y+2	; 0x02
 3dc:	28 2f       	mov	r18, r24
 3de:	30 e0       	ldi	r19, 0x00	; 0
 3e0:	81 e0       	ldi	r24, 0x01	; 1
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	02 2e       	mov	r0, r18
 3e6:	02 c0       	rjmp	.+4      	; 0x3ec <MDIO_voidSetPinDirection+0x1e2>
 3e8:	88 0f       	add	r24, r24
 3ea:	99 1f       	adc	r25, r25
 3ec:	0a 94       	dec	r0
 3ee:	e2 f7       	brpl	.-8      	; 0x3e8 <MDIO_voidSetPinDirection+0x1de>
 3f0:	80 95       	com	r24
 3f2:	84 23       	and	r24, r20
 3f4:	11 96       	adiw	r26, 0x01	; 1
 3f6:	8c 93       	st	X, r24
 3f8:	11 97       	sbiw	r26, 0x01	; 1
 3fa:	e4 c0       	rjmp	.+456    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTD: CLEAR_BIT(GPIOD -> DDR, ARG_u8Pin); break;
 3fc:	a0 e3       	ldi	r26, 0x30	; 48
 3fe:	b0 e0       	ldi	r27, 0x00	; 0
 400:	e0 e3       	ldi	r30, 0x30	; 48
 402:	f0 e0       	ldi	r31, 0x00	; 0
 404:	81 81       	ldd	r24, Z+1	; 0x01
 406:	48 2f       	mov	r20, r24
 408:	8a 81       	ldd	r24, Y+2	; 0x02
 40a:	28 2f       	mov	r18, r24
 40c:	30 e0       	ldi	r19, 0x00	; 0
 40e:	81 e0       	ldi	r24, 0x01	; 1
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	02 2e       	mov	r0, r18
 414:	02 c0       	rjmp	.+4      	; 0x41a <MDIO_voidSetPinDirection+0x210>
 416:	88 0f       	add	r24, r24
 418:	99 1f       	adc	r25, r25
 41a:	0a 94       	dec	r0
 41c:	e2 f7       	brpl	.-8      	; 0x416 <MDIO_voidSetPinDirection+0x20c>
 41e:	80 95       	com	r24
 420:	84 23       	and	r24, r20
 422:	11 96       	adiw	r26, 0x01	; 1
 424:	8c 93       	st	X, r24
 426:	11 97       	sbiw	r26, 0x01	; 1
 428:	cd c0       	rjmp	.+410    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
				default: break;/*report error*/
			}			
		}
		else if(MDIO_INPUT_PULLUP==ARG_u8Directoin)
 42a:	8b 81       	ldd	r24, Y+3	; 0x03
 42c:	88 3c       	cpi	r24, 0xC8	; 200
 42e:	09 f0       	breq	.+2      	; 0x432 <MDIO_voidSetPinDirection+0x228>
 430:	c9 c0       	rjmp	.+402    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
		{
			switch(ARG_u8Port)
 432:	89 81       	ldd	r24, Y+1	; 0x01
 434:	28 2f       	mov	r18, r24
 436:	30 e0       	ldi	r19, 0x00	; 0
 438:	3d 83       	std	Y+5, r19	; 0x05
 43a:	2c 83       	std	Y+4, r18	; 0x04
 43c:	8c 81       	ldd	r24, Y+4	; 0x04
 43e:	9d 81       	ldd	r25, Y+5	; 0x05
 440:	8c 30       	cpi	r24, 0x0C	; 12
 442:	91 05       	cpc	r25, r1
 444:	09 f4       	brne	.+2      	; 0x448 <MDIO_voidSetPinDirection+0x23e>
 446:	6b c0       	rjmp	.+214    	; 0x51e <MDIO_voidSetPinDirection+0x314>
 448:	2c 81       	ldd	r18, Y+4	; 0x04
 44a:	3d 81       	ldd	r19, Y+5	; 0x05
 44c:	2d 30       	cpi	r18, 0x0D	; 13
 44e:	31 05       	cpc	r19, r1
 450:	3c f4       	brge	.+14     	; 0x460 <MDIO_voidSetPinDirection+0x256>
 452:	8c 81       	ldd	r24, Y+4	; 0x04
 454:	9d 81       	ldd	r25, Y+5	; 0x05
 456:	85 30       	cpi	r24, 0x05	; 5
 458:	91 05       	cpc	r25, r1
 45a:	09 f4       	brne	.+2      	; 0x45e <MDIO_voidSetPinDirection+0x254>
 45c:	8a c0       	rjmp	.+276    	; 0x572 <MDIO_voidSetPinDirection+0x368>
 45e:	b2 c0       	rjmp	.+356    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
 460:	2c 81       	ldd	r18, Y+4	; 0x04
 462:	3d 81       	ldd	r19, Y+5	; 0x05
 464:	21 32       	cpi	r18, 0x21	; 33
 466:	31 05       	cpc	r19, r1
 468:	31 f0       	breq	.+12     	; 0x476 <MDIO_voidSetPinDirection+0x26c>
 46a:	8c 81       	ldd	r24, Y+4	; 0x04
 46c:	9d 81       	ldd	r25, Y+5	; 0x05
 46e:	88 32       	cpi	r24, 0x28	; 40
 470:	91 05       	cpc	r25, r1
 472:	59 f1       	breq	.+86     	; 0x4ca <MDIO_voidSetPinDirection+0x2c0>
 474:	a7 c0       	rjmp	.+334    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
			{
				case MDIO_PORTB: CLEAR_BIT(GPIOB -> DDR, ARG_u8Pin); SET_BIT(GPIOA -> PORT, ARG_u8Pin); break;
 476:	a6 e3       	ldi	r26, 0x36	; 54
 478:	b0 e0       	ldi	r27, 0x00	; 0
 47a:	e6 e3       	ldi	r30, 0x36	; 54
 47c:	f0 e0       	ldi	r31, 0x00	; 0
 47e:	81 81       	ldd	r24, Z+1	; 0x01
 480:	48 2f       	mov	r20, r24
 482:	8a 81       	ldd	r24, Y+2	; 0x02
 484:	28 2f       	mov	r18, r24
 486:	30 e0       	ldi	r19, 0x00	; 0
 488:	81 e0       	ldi	r24, 0x01	; 1
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	02 c0       	rjmp	.+4      	; 0x492 <MDIO_voidSetPinDirection+0x288>
 48e:	88 0f       	add	r24, r24
 490:	99 1f       	adc	r25, r25
 492:	2a 95       	dec	r18
 494:	e2 f7       	brpl	.-8      	; 0x48e <MDIO_voidSetPinDirection+0x284>
 496:	80 95       	com	r24
 498:	84 23       	and	r24, r20
 49a:	11 96       	adiw	r26, 0x01	; 1
 49c:	8c 93       	st	X, r24
 49e:	a9 e3       	ldi	r26, 0x39	; 57
 4a0:	b0 e0       	ldi	r27, 0x00	; 0
 4a2:	e9 e3       	ldi	r30, 0x39	; 57
 4a4:	f0 e0       	ldi	r31, 0x00	; 0
 4a6:	82 81       	ldd	r24, Z+2	; 0x02
 4a8:	48 2f       	mov	r20, r24
 4aa:	8a 81       	ldd	r24, Y+2	; 0x02
 4ac:	28 2f       	mov	r18, r24
 4ae:	30 e0       	ldi	r19, 0x00	; 0
 4b0:	81 e0       	ldi	r24, 0x01	; 1
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	02 2e       	mov	r0, r18
 4b6:	02 c0       	rjmp	.+4      	; 0x4bc <MDIO_voidSetPinDirection+0x2b2>
 4b8:	88 0f       	add	r24, r24
 4ba:	99 1f       	adc	r25, r25
 4bc:	0a 94       	dec	r0
 4be:	e2 f7       	brpl	.-8      	; 0x4b8 <MDIO_voidSetPinDirection+0x2ae>
 4c0:	84 2b       	or	r24, r20
 4c2:	12 96       	adiw	r26, 0x02	; 2
 4c4:	8c 93       	st	X, r24
 4c6:	12 97       	sbiw	r26, 0x02	; 2
 4c8:	7d c0       	rjmp	.+250    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTC: CLEAR_BIT(GPIOC -> DDR, ARG_u8Pin); SET_BIT(GPIOB -> PORT, ARG_u8Pin); break;
 4ca:	a3 e3       	ldi	r26, 0x33	; 51
 4cc:	b0 e0       	ldi	r27, 0x00	; 0
 4ce:	e3 e3       	ldi	r30, 0x33	; 51
 4d0:	f0 e0       	ldi	r31, 0x00	; 0
 4d2:	81 81       	ldd	r24, Z+1	; 0x01
 4d4:	48 2f       	mov	r20, r24
 4d6:	8a 81       	ldd	r24, Y+2	; 0x02
 4d8:	28 2f       	mov	r18, r24
 4da:	30 e0       	ldi	r19, 0x00	; 0
 4dc:	81 e0       	ldi	r24, 0x01	; 1
 4de:	90 e0       	ldi	r25, 0x00	; 0
 4e0:	02 c0       	rjmp	.+4      	; 0x4e6 <MDIO_voidSetPinDirection+0x2dc>
 4e2:	88 0f       	add	r24, r24
 4e4:	99 1f       	adc	r25, r25
 4e6:	2a 95       	dec	r18
 4e8:	e2 f7       	brpl	.-8      	; 0x4e2 <MDIO_voidSetPinDirection+0x2d8>
 4ea:	80 95       	com	r24
 4ec:	84 23       	and	r24, r20
 4ee:	11 96       	adiw	r26, 0x01	; 1
 4f0:	8c 93       	st	X, r24
 4f2:	a6 e3       	ldi	r26, 0x36	; 54
 4f4:	b0 e0       	ldi	r27, 0x00	; 0
 4f6:	e6 e3       	ldi	r30, 0x36	; 54
 4f8:	f0 e0       	ldi	r31, 0x00	; 0
 4fa:	82 81       	ldd	r24, Z+2	; 0x02
 4fc:	48 2f       	mov	r20, r24
 4fe:	8a 81       	ldd	r24, Y+2	; 0x02
 500:	28 2f       	mov	r18, r24
 502:	30 e0       	ldi	r19, 0x00	; 0
 504:	81 e0       	ldi	r24, 0x01	; 1
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	02 2e       	mov	r0, r18
 50a:	02 c0       	rjmp	.+4      	; 0x510 <MDIO_voidSetPinDirection+0x306>
 50c:	88 0f       	add	r24, r24
 50e:	99 1f       	adc	r25, r25
 510:	0a 94       	dec	r0
 512:	e2 f7       	brpl	.-8      	; 0x50c <MDIO_voidSetPinDirection+0x302>
 514:	84 2b       	or	r24, r20
 516:	12 96       	adiw	r26, 0x02	; 2
 518:	8c 93       	st	X, r24
 51a:	12 97       	sbiw	r26, 0x02	; 2
 51c:	53 c0       	rjmp	.+166    	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTA: CLEAR_BIT(GPIOA -> DDR, ARG_u8Pin); SET_BIT(GPIOC -> PORT, ARG_u8Pin); break;
 51e:	a9 e3       	ldi	r26, 0x39	; 57
 520:	b0 e0       	ldi	r27, 0x00	; 0
 522:	e9 e3       	ldi	r30, 0x39	; 57
 524:	f0 e0       	ldi	r31, 0x00	; 0
 526:	81 81       	ldd	r24, Z+1	; 0x01
 528:	48 2f       	mov	r20, r24
 52a:	8a 81       	ldd	r24, Y+2	; 0x02
 52c:	28 2f       	mov	r18, r24
 52e:	30 e0       	ldi	r19, 0x00	; 0
 530:	81 e0       	ldi	r24, 0x01	; 1
 532:	90 e0       	ldi	r25, 0x00	; 0
 534:	02 c0       	rjmp	.+4      	; 0x53a <MDIO_voidSetPinDirection+0x330>
 536:	88 0f       	add	r24, r24
 538:	99 1f       	adc	r25, r25
 53a:	2a 95       	dec	r18
 53c:	e2 f7       	brpl	.-8      	; 0x536 <MDIO_voidSetPinDirection+0x32c>
 53e:	80 95       	com	r24
 540:	84 23       	and	r24, r20
 542:	11 96       	adiw	r26, 0x01	; 1
 544:	8c 93       	st	X, r24
 546:	a3 e3       	ldi	r26, 0x33	; 51
 548:	b0 e0       	ldi	r27, 0x00	; 0
 54a:	e3 e3       	ldi	r30, 0x33	; 51
 54c:	f0 e0       	ldi	r31, 0x00	; 0
 54e:	82 81       	ldd	r24, Z+2	; 0x02
 550:	48 2f       	mov	r20, r24
 552:	8a 81       	ldd	r24, Y+2	; 0x02
 554:	28 2f       	mov	r18, r24
 556:	30 e0       	ldi	r19, 0x00	; 0
 558:	81 e0       	ldi	r24, 0x01	; 1
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	02 2e       	mov	r0, r18
 55e:	02 c0       	rjmp	.+4      	; 0x564 <MDIO_voidSetPinDirection+0x35a>
 560:	88 0f       	add	r24, r24
 562:	99 1f       	adc	r25, r25
 564:	0a 94       	dec	r0
 566:	e2 f7       	brpl	.-8      	; 0x560 <MDIO_voidSetPinDirection+0x356>
 568:	84 2b       	or	r24, r20
 56a:	12 96       	adiw	r26, 0x02	; 2
 56c:	8c 93       	st	X, r24
 56e:	12 97       	sbiw	r26, 0x02	; 2
 570:	29 c0       	rjmp	.+82     	; 0x5c4 <MDIO_voidSetPinDirection+0x3ba>
				case MDIO_PORTD: CLEAR_BIT(GPIOD -> DDR, ARG_u8Pin); SET_BIT(GPIOD -> PORT, ARG_u8Pin); break;
 572:	a0 e3       	ldi	r26, 0x30	; 48
 574:	b0 e0       	ldi	r27, 0x00	; 0
 576:	e0 e3       	ldi	r30, 0x30	; 48
 578:	f0 e0       	ldi	r31, 0x00	; 0
 57a:	81 81       	ldd	r24, Z+1	; 0x01
 57c:	48 2f       	mov	r20, r24
 57e:	8a 81       	ldd	r24, Y+2	; 0x02
 580:	28 2f       	mov	r18, r24
 582:	30 e0       	ldi	r19, 0x00	; 0
 584:	81 e0       	ldi	r24, 0x01	; 1
 586:	90 e0       	ldi	r25, 0x00	; 0
 588:	02 c0       	rjmp	.+4      	; 0x58e <MDIO_voidSetPinDirection+0x384>
 58a:	88 0f       	add	r24, r24
 58c:	99 1f       	adc	r25, r25
 58e:	2a 95       	dec	r18
 590:	e2 f7       	brpl	.-8      	; 0x58a <MDIO_voidSetPinDirection+0x380>
 592:	80 95       	com	r24
 594:	84 23       	and	r24, r20
 596:	11 96       	adiw	r26, 0x01	; 1
 598:	8c 93       	st	X, r24
 59a:	a0 e3       	ldi	r26, 0x30	; 48
 59c:	b0 e0       	ldi	r27, 0x00	; 0
 59e:	e0 e3       	ldi	r30, 0x30	; 48
 5a0:	f0 e0       	ldi	r31, 0x00	; 0
 5a2:	82 81       	ldd	r24, Z+2	; 0x02
 5a4:	48 2f       	mov	r20, r24
 5a6:	8a 81       	ldd	r24, Y+2	; 0x02
 5a8:	28 2f       	mov	r18, r24
 5aa:	30 e0       	ldi	r19, 0x00	; 0
 5ac:	81 e0       	ldi	r24, 0x01	; 1
 5ae:	90 e0       	ldi	r25, 0x00	; 0
 5b0:	02 2e       	mov	r0, r18
 5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <MDIO_voidSetPinDirection+0x3ae>
 5b4:	88 0f       	add	r24, r24
 5b6:	99 1f       	adc	r25, r25
 5b8:	0a 94       	dec	r0
 5ba:	e2 f7       	brpl	.-8      	; 0x5b4 <MDIO_voidSetPinDirection+0x3aa>
 5bc:	84 2b       	or	r24, r20
 5be:	12 96       	adiw	r26, 0x02	; 2
 5c0:	8c 93       	st	X, r24
 5c2:	12 97       	sbiw	r26, 0x02	; 2
	else
	{
		/*report on error*/
	}
	
}
 5c4:	29 96       	adiw	r28, 0x09	; 9
 5c6:	0f b6       	in	r0, 0x3f	; 63
 5c8:	f8 94       	cli
 5ca:	de bf       	out	0x3e, r29	; 62
 5cc:	0f be       	out	0x3f, r0	; 63
 5ce:	cd bf       	out	0x3d, r28	; 61
 5d0:	cf 91       	pop	r28
 5d2:	df 91       	pop	r29
 5d4:	08 95       	ret

000005d6 <MDIO_voidSetPinValue>:
void MDIO_voidSetPinValue(u8 ARG_u8Port,u8 ARG_u8Pin,u8 ARG_u8Value)
{
 5d6:	df 93       	push	r29
 5d8:	cf 93       	push	r28
 5da:	cd b7       	in	r28, 0x3d	; 61
 5dc:	de b7       	in	r29, 0x3e	; 62
 5de:	29 97       	sbiw	r28, 0x09	; 9
 5e0:	0f b6       	in	r0, 0x3f	; 63
 5e2:	f8 94       	cli
 5e4:	de bf       	out	0x3e, r29	; 62
 5e6:	0f be       	out	0x3f, r0	; 63
 5e8:	cd bf       	out	0x3d, r28	; 61
 5ea:	89 83       	std	Y+1, r24	; 0x01
 5ec:	6a 83       	std	Y+2, r22	; 0x02
 5ee:	4b 83       	std	Y+3, r20	; 0x03
	if(ARG_u8Pin<=7)
 5f0:	8a 81       	ldd	r24, Y+2	; 0x02
 5f2:	88 30       	cpi	r24, 0x08	; 8
 5f4:	08 f0       	brcs	.+2      	; 0x5f8 <MDIO_voidSetPinValue+0x22>
 5f6:	7c c1       	rjmp	.+760    	; 0x8f0 <__stack+0x91>
	{
		if(MDIO_HIGH== ARG_u8Value)
 5f8:	8b 81       	ldd	r24, Y+3	; 0x03
 5fa:	81 30       	cpi	r24, 0x01	; 1
 5fc:	09 f0       	breq	.+2      	; 0x600 <MDIO_voidSetPinValue+0x2a>
 5fe:	79 c0       	rjmp	.+242    	; 0x6f2 <MDIO_voidSetPinValue+0x11c>
		{
			switch(ARG_u8Port)
 600:	89 81       	ldd	r24, Y+1	; 0x01
 602:	28 2f       	mov	r18, r24
 604:	30 e0       	ldi	r19, 0x00	; 0
 606:	39 87       	std	Y+9, r19	; 0x09
 608:	28 87       	std	Y+8, r18	; 0x08
 60a:	88 85       	ldd	r24, Y+8	; 0x08
 60c:	99 85       	ldd	r25, Y+9	; 0x09
 60e:	8c 30       	cpi	r24, 0x0C	; 12
 610:	91 05       	cpc	r25, r1
 612:	b9 f0       	breq	.+46     	; 0x642 <MDIO_voidSetPinValue+0x6c>
 614:	28 85       	ldd	r18, Y+8	; 0x08
 616:	39 85       	ldd	r19, Y+9	; 0x09
 618:	2d 30       	cpi	r18, 0x0D	; 13
 61a:	31 05       	cpc	r19, r1
 61c:	3c f4       	brge	.+14     	; 0x62c <MDIO_voidSetPinValue+0x56>
 61e:	88 85       	ldd	r24, Y+8	; 0x08
 620:	99 85       	ldd	r25, Y+9	; 0x09
 622:	85 30       	cpi	r24, 0x05	; 5
 624:	91 05       	cpc	r25, r1
 626:	09 f4       	brne	.+2      	; 0x62a <MDIO_voidSetPinValue+0x54>
 628:	4e c0       	rjmp	.+156    	; 0x6c6 <MDIO_voidSetPinValue+0xf0>
 62a:	62 c1       	rjmp	.+708    	; 0x8f0 <__stack+0x91>
 62c:	28 85       	ldd	r18, Y+8	; 0x08
 62e:	39 85       	ldd	r19, Y+9	; 0x09
 630:	21 32       	cpi	r18, 0x21	; 33
 632:	31 05       	cpc	r19, r1
 634:	e1 f0       	breq	.+56     	; 0x66e <MDIO_voidSetPinValue+0x98>
 636:	88 85       	ldd	r24, Y+8	; 0x08
 638:	99 85       	ldd	r25, Y+9	; 0x09
 63a:	88 32       	cpi	r24, 0x28	; 40
 63c:	91 05       	cpc	r25, r1
 63e:	69 f1       	breq	.+90     	; 0x69a <MDIO_voidSetPinValue+0xc4>
 640:	57 c1       	rjmp	.+686    	; 0x8f0 <__stack+0x91>
			{
				case MDIO_PORTA: SET_BIT(GPIOA -> PORT, ARG_u8Pin); break;
 642:	a9 e3       	ldi	r26, 0x39	; 57
 644:	b0 e0       	ldi	r27, 0x00	; 0
 646:	e9 e3       	ldi	r30, 0x39	; 57
 648:	f0 e0       	ldi	r31, 0x00	; 0
 64a:	82 81       	ldd	r24, Z+2	; 0x02
 64c:	48 2f       	mov	r20, r24
 64e:	8a 81       	ldd	r24, Y+2	; 0x02
 650:	28 2f       	mov	r18, r24
 652:	30 e0       	ldi	r19, 0x00	; 0
 654:	81 e0       	ldi	r24, 0x01	; 1
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	02 2e       	mov	r0, r18
 65a:	02 c0       	rjmp	.+4      	; 0x660 <MDIO_voidSetPinValue+0x8a>
 65c:	88 0f       	add	r24, r24
 65e:	99 1f       	adc	r25, r25
 660:	0a 94       	dec	r0
 662:	e2 f7       	brpl	.-8      	; 0x65c <MDIO_voidSetPinValue+0x86>
 664:	84 2b       	or	r24, r20
 666:	12 96       	adiw	r26, 0x02	; 2
 668:	8c 93       	st	X, r24
 66a:	12 97       	sbiw	r26, 0x02	; 2
 66c:	41 c1       	rjmp	.+642    	; 0x8f0 <__stack+0x91>
				case MDIO_PORTB: SET_BIT(GPIOB -> PORT, ARG_u8Pin); break;
 66e:	a6 e3       	ldi	r26, 0x36	; 54
 670:	b0 e0       	ldi	r27, 0x00	; 0
 672:	e6 e3       	ldi	r30, 0x36	; 54
 674:	f0 e0       	ldi	r31, 0x00	; 0
 676:	82 81       	ldd	r24, Z+2	; 0x02
 678:	48 2f       	mov	r20, r24
 67a:	8a 81       	ldd	r24, Y+2	; 0x02
 67c:	28 2f       	mov	r18, r24
 67e:	30 e0       	ldi	r19, 0x00	; 0
 680:	81 e0       	ldi	r24, 0x01	; 1
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	02 2e       	mov	r0, r18
 686:	02 c0       	rjmp	.+4      	; 0x68c <MDIO_voidSetPinValue+0xb6>
 688:	88 0f       	add	r24, r24
 68a:	99 1f       	adc	r25, r25
 68c:	0a 94       	dec	r0
 68e:	e2 f7       	brpl	.-8      	; 0x688 <MDIO_voidSetPinValue+0xb2>
 690:	84 2b       	or	r24, r20
 692:	12 96       	adiw	r26, 0x02	; 2
 694:	8c 93       	st	X, r24
 696:	12 97       	sbiw	r26, 0x02	; 2
 698:	2b c1       	rjmp	.+598    	; 0x8f0 <__stack+0x91>
				case MDIO_PORTC: SET_BIT(GPIOC -> PORT, ARG_u8Pin); break;
 69a:	a3 e3       	ldi	r26, 0x33	; 51
 69c:	b0 e0       	ldi	r27, 0x00	; 0
 69e:	e3 e3       	ldi	r30, 0x33	; 51
 6a0:	f0 e0       	ldi	r31, 0x00	; 0
 6a2:	82 81       	ldd	r24, Z+2	; 0x02
 6a4:	48 2f       	mov	r20, r24
 6a6:	8a 81       	ldd	r24, Y+2	; 0x02
 6a8:	28 2f       	mov	r18, r24
 6aa:	30 e0       	ldi	r19, 0x00	; 0
 6ac:	81 e0       	ldi	r24, 0x01	; 1
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	02 2e       	mov	r0, r18
 6b2:	02 c0       	rjmp	.+4      	; 0x6b8 <MDIO_voidSetPinValue+0xe2>
 6b4:	88 0f       	add	r24, r24
 6b6:	99 1f       	adc	r25, r25
 6b8:	0a 94       	dec	r0
 6ba:	e2 f7       	brpl	.-8      	; 0x6b4 <MDIO_voidSetPinValue+0xde>
 6bc:	84 2b       	or	r24, r20
 6be:	12 96       	adiw	r26, 0x02	; 2
 6c0:	8c 93       	st	X, r24
 6c2:	12 97       	sbiw	r26, 0x02	; 2
 6c4:	15 c1       	rjmp	.+554    	; 0x8f0 <__stack+0x91>
				case MDIO_PORTD: SET_BIT(GPIOD -> PORT, ARG_u8Pin); break;
 6c6:	a0 e3       	ldi	r26, 0x30	; 48
 6c8:	b0 e0       	ldi	r27, 0x00	; 0
 6ca:	e0 e3       	ldi	r30, 0x30	; 48
 6cc:	f0 e0       	ldi	r31, 0x00	; 0
 6ce:	82 81       	ldd	r24, Z+2	; 0x02
 6d0:	48 2f       	mov	r20, r24
 6d2:	8a 81       	ldd	r24, Y+2	; 0x02
 6d4:	28 2f       	mov	r18, r24
 6d6:	30 e0       	ldi	r19, 0x00	; 0
 6d8:	81 e0       	ldi	r24, 0x01	; 1
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	02 2e       	mov	r0, r18
 6de:	02 c0       	rjmp	.+4      	; 0x6e4 <MDIO_voidSetPinValue+0x10e>
 6e0:	88 0f       	add	r24, r24
 6e2:	99 1f       	adc	r25, r25
 6e4:	0a 94       	dec	r0
 6e6:	e2 f7       	brpl	.-8      	; 0x6e0 <MDIO_voidSetPinValue+0x10a>
 6e8:	84 2b       	or	r24, r20
 6ea:	12 96       	adiw	r26, 0x02	; 2
 6ec:	8c 93       	st	X, r24
 6ee:	12 97       	sbiw	r26, 0x02	; 2
 6f0:	ff c0       	rjmp	.+510    	; 0x8f0 <__stack+0x91>
				default: break;/*report error*/
			}			
		}
		else if(MDIO_LOW==ARG_u8Value)
 6f2:	8b 81       	ldd	r24, Y+3	; 0x03
 6f4:	88 23       	and	r24, r24
 6f6:	09 f0       	breq	.+2      	; 0x6fa <MDIO_voidSetPinValue+0x124>
 6f8:	7e c0       	rjmp	.+252    	; 0x7f6 <MDIO_voidSetPinValue+0x220>
		{
			switch(ARG_u8Port)
 6fa:	89 81       	ldd	r24, Y+1	; 0x01
 6fc:	28 2f       	mov	r18, r24
 6fe:	30 e0       	ldi	r19, 0x00	; 0
 700:	3f 83       	std	Y+7, r19	; 0x07
 702:	2e 83       	std	Y+6, r18	; 0x06
 704:	8e 81       	ldd	r24, Y+6	; 0x06
 706:	9f 81       	ldd	r25, Y+7	; 0x07
 708:	8c 30       	cpi	r24, 0x0C	; 12
 70a:	91 05       	cpc	r25, r1
 70c:	09 f4       	brne	.+2      	; 0x710 <MDIO_voidSetPinValue+0x13a>
 70e:	45 c0       	rjmp	.+138    	; 0x79a <MDIO_voidSetPinValue+0x1c4>
 710:	2e 81       	ldd	r18, Y+6	; 0x06
 712:	3f 81       	ldd	r19, Y+7	; 0x07
 714:	2d 30       	cpi	r18, 0x0D	; 13
 716:	31 05       	cpc	r19, r1
 718:	3c f4       	brge	.+14     	; 0x728 <MDIO_voidSetPinValue+0x152>
 71a:	8e 81       	ldd	r24, Y+6	; 0x06
 71c:	9f 81       	ldd	r25, Y+7	; 0x07
 71e:	85 30       	cpi	r24, 0x05	; 5
 720:	91 05       	cpc	r25, r1
 722:	09 f4       	brne	.+2      	; 0x726 <MDIO_voidSetPinValue+0x150>
 724:	51 c0       	rjmp	.+162    	; 0x7c8 <MDIO_voidSetPinValue+0x1f2>
 726:	e4 c0       	rjmp	.+456    	; 0x8f0 <__stack+0x91>
 728:	2e 81       	ldd	r18, Y+6	; 0x06
 72a:	3f 81       	ldd	r19, Y+7	; 0x07
 72c:	21 32       	cpi	r18, 0x21	; 33
 72e:	31 05       	cpc	r19, r1
 730:	31 f0       	breq	.+12     	; 0x73e <MDIO_voidSetPinValue+0x168>
 732:	8e 81       	ldd	r24, Y+6	; 0x06
 734:	9f 81       	ldd	r25, Y+7	; 0x07
 736:	88 32       	cpi	r24, 0x28	; 40
 738:	91 05       	cpc	r25, r1
 73a:	c1 f0       	breq	.+48     	; 0x76c <MDIO_voidSetPinValue+0x196>
 73c:	d9 c0       	rjmp	.+434    	; 0x8f0 <__stack+0x91>
			{
				case MDIO_PORTB: CLEAR_BIT(GPIOB -> PORT, ARG_u8Pin); break;
 73e:	a6 e3       	ldi	r26, 0x36	; 54
 740:	b0 e0       	ldi	r27, 0x00	; 0
 742:	e6 e3       	ldi	r30, 0x36	; 54
 744:	f0 e0       	ldi	r31, 0x00	; 0
 746:	82 81       	ldd	r24, Z+2	; 0x02
 748:	48 2f       	mov	r20, r24
 74a:	8a 81       	ldd	r24, Y+2	; 0x02
 74c:	28 2f       	mov	r18, r24
 74e:	30 e0       	ldi	r19, 0x00	; 0
 750:	81 e0       	ldi	r24, 0x01	; 1
 752:	90 e0       	ldi	r25, 0x00	; 0
 754:	02 2e       	mov	r0, r18
 756:	02 c0       	rjmp	.+4      	; 0x75c <MDIO_voidSetPinValue+0x186>
 758:	88 0f       	add	r24, r24
 75a:	99 1f       	adc	r25, r25
 75c:	0a 94       	dec	r0
 75e:	e2 f7       	brpl	.-8      	; 0x758 <MDIO_voidSetPinValue+0x182>
 760:	80 95       	com	r24
 762:	84 23       	and	r24, r20
 764:	12 96       	adiw	r26, 0x02	; 2
 766:	8c 93       	st	X, r24
 768:	12 97       	sbiw	r26, 0x02	; 2
 76a:	c2 c0       	rjmp	.+388    	; 0x8f0 <__stack+0x91>
				case MDIO_PORTC: CLEAR_BIT(GPIOC -> PORT, ARG_u8Pin); break;
 76c:	a3 e3       	ldi	r26, 0x33	; 51
 76e:	b0 e0       	ldi	r27, 0x00	; 0
 770:	e3 e3       	ldi	r30, 0x33	; 51
 772:	f0 e0       	ldi	r31, 0x00	; 0
 774:	82 81       	ldd	r24, Z+2	; 0x02
 776:	48 2f       	mov	r20, r24
 778:	8a 81       	ldd	r24, Y+2	; 0x02
 77a:	28 2f       	mov	r18, r24
 77c:	30 e0       	ldi	r19, 0x00	; 0
 77e:	81 e0       	ldi	r24, 0x01	; 1
 780:	90 e0       	ldi	r25, 0x00	; 0
 782:	02 2e       	mov	r0, r18
 784:	02 c0       	rjmp	.+4      	; 0x78a <MDIO_voidSetPinValue+0x1b4>
 786:	88 0f       	add	r24, r24
 788:	99 1f       	adc	r25, r25
 78a:	0a 94       	dec	r0
 78c:	e2 f7       	brpl	.-8      	; 0x786 <MDIO_voidSetPinValue+0x1b0>
 78e:	80 95       	com	r24
 790:	84 23       	and	r24, r20
 792:	12 96       	adiw	r26, 0x02	; 2
 794:	8c 93       	st	X, r24
 796:	12 97       	sbiw	r26, 0x02	; 2
 798:	ab c0       	rjmp	.+342    	; 0x8f0 <__stack+0x91>
				case MDIO_PORTA: CLEAR_BIT(GPIOA -> PORT, ARG_u8Pin); break;
 79a:	a9 e3       	ldi	r26, 0x39	; 57
 79c:	b0 e0       	ldi	r27, 0x00	; 0
 79e:	e9 e3       	ldi	r30, 0x39	; 57
 7a0:	f0 e0       	ldi	r31, 0x00	; 0
 7a2:	82 81       	ldd	r24, Z+2	; 0x02
 7a4:	48 2f       	mov	r20, r24
 7a6:	8a 81       	ldd	r24, Y+2	; 0x02
 7a8:	28 2f       	mov	r18, r24
 7aa:	30 e0       	ldi	r19, 0x00	; 0
 7ac:	81 e0       	ldi	r24, 0x01	; 1
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	02 2e       	mov	r0, r18
 7b2:	02 c0       	rjmp	.+4      	; 0x7b8 <MDIO_voidSetPinValue+0x1e2>
 7b4:	88 0f       	add	r24, r24
 7b6:	99 1f       	adc	r25, r25
 7b8:	0a 94       	dec	r0
 7ba:	e2 f7       	brpl	.-8      	; 0x7b4 <MDIO_voidSetPinValue+0x1de>
 7bc:	80 95       	com	r24
 7be:	84 23       	and	r24, r20
 7c0:	12 96       	adiw	r26, 0x02	; 2
 7c2:	8c 93       	st	X, r24
 7c4:	12 97       	sbiw	r26, 0x02	; 2
 7c6:	94 c0       	rjmp	.+296    	; 0x8f0 <__stack+0x91>
				case MDIO_PORTD: CLEAR_BIT(GPIOD -> PORT, ARG_u8Pin); break;
 7c8:	a0 e3       	ldi	r26, 0x30	; 48
 7ca:	b0 e0       	ldi	r27, 0x00	; 0
 7cc:	e0 e3       	ldi	r30, 0x30	; 48
 7ce:	f0 e0       	ldi	r31, 0x00	; 0
 7d0:	82 81       	ldd	r24, Z+2	; 0x02
 7d2:	48 2f       	mov	r20, r24
 7d4:	8a 81       	ldd	r24, Y+2	; 0x02
 7d6:	28 2f       	mov	r18, r24
 7d8:	30 e0       	ldi	r19, 0x00	; 0
 7da:	81 e0       	ldi	r24, 0x01	; 1
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	02 2e       	mov	r0, r18
 7e0:	02 c0       	rjmp	.+4      	; 0x7e6 <MDIO_voidSetPinValue+0x210>
 7e2:	88 0f       	add	r24, r24
 7e4:	99 1f       	adc	r25, r25
 7e6:	0a 94       	dec	r0
 7e8:	e2 f7       	brpl	.-8      	; 0x7e2 <MDIO_voidSetPinValue+0x20c>
 7ea:	80 95       	com	r24
 7ec:	84 23       	and	r24, r20
 7ee:	12 96       	adiw	r26, 0x02	; 2
 7f0:	8c 93       	st	X, r24
 7f2:	12 97       	sbiw	r26, 0x02	; 2
 7f4:	7d c0       	rjmp	.+250    	; 0x8f0 <__stack+0x91>
				default: break;/*report error*/
			}			
		}
		
				else if(MDIO_TOGGLE==ARG_u8Value)
 7f6:	8b 81       	ldd	r24, Y+3	; 0x03
 7f8:	82 30       	cpi	r24, 0x02	; 2
 7fa:	09 f0       	breq	.+2      	; 0x7fe <MDIO_voidSetPinValue+0x228>
 7fc:	79 c0       	rjmp	.+242    	; 0x8f0 <__stack+0x91>
		{
			switch(ARG_u8Port)
 7fe:	89 81       	ldd	r24, Y+1	; 0x01
 800:	28 2f       	mov	r18, r24
 802:	30 e0       	ldi	r19, 0x00	; 0
 804:	3d 83       	std	Y+5, r19	; 0x05
 806:	2c 83       	std	Y+4, r18	; 0x04
 808:	8c 81       	ldd	r24, Y+4	; 0x04
 80a:	9d 81       	ldd	r25, Y+5	; 0x05
 80c:	8c 30       	cpi	r24, 0x0C	; 12
 80e:	91 05       	cpc	r25, r1
 810:	09 f4       	brne	.+2      	; 0x814 <MDIO_voidSetPinValue+0x23e>
 812:	43 c0       	rjmp	.+134    	; 0x89a <__stack+0x3b>
 814:	2c 81       	ldd	r18, Y+4	; 0x04
 816:	3d 81       	ldd	r19, Y+5	; 0x05
 818:	2d 30       	cpi	r18, 0x0D	; 13
 81a:	31 05       	cpc	r19, r1
 81c:	3c f4       	brge	.+14     	; 0x82c <MDIO_voidSetPinValue+0x256>
 81e:	8c 81       	ldd	r24, Y+4	; 0x04
 820:	9d 81       	ldd	r25, Y+5	; 0x05
 822:	85 30       	cpi	r24, 0x05	; 5
 824:	91 05       	cpc	r25, r1
 826:	09 f4       	brne	.+2      	; 0x82a <MDIO_voidSetPinValue+0x254>
 828:	4e c0       	rjmp	.+156    	; 0x8c6 <__stack+0x67>
 82a:	62 c0       	rjmp	.+196    	; 0x8f0 <__stack+0x91>
 82c:	2c 81       	ldd	r18, Y+4	; 0x04
 82e:	3d 81       	ldd	r19, Y+5	; 0x05
 830:	21 32       	cpi	r18, 0x21	; 33
 832:	31 05       	cpc	r19, r1
 834:	31 f0       	breq	.+12     	; 0x842 <MDIO_voidSetPinValue+0x26c>
 836:	8c 81       	ldd	r24, Y+4	; 0x04
 838:	9d 81       	ldd	r25, Y+5	; 0x05
 83a:	88 32       	cpi	r24, 0x28	; 40
 83c:	91 05       	cpc	r25, r1
 83e:	b9 f0       	breq	.+46     	; 0x86e <__stack+0xf>
 840:	57 c0       	rjmp	.+174    	; 0x8f0 <__stack+0x91>
			{
				case MDIO_PORTB: TOGGLE_BIT(GPIOB -> PORT, ARG_u8Pin); break;
 842:	a6 e3       	ldi	r26, 0x36	; 54
 844:	b0 e0       	ldi	r27, 0x00	; 0
 846:	e6 e3       	ldi	r30, 0x36	; 54
 848:	f0 e0       	ldi	r31, 0x00	; 0
 84a:	82 81       	ldd	r24, Z+2	; 0x02
 84c:	48 2f       	mov	r20, r24
 84e:	8a 81       	ldd	r24, Y+2	; 0x02
 850:	28 2f       	mov	r18, r24
 852:	30 e0       	ldi	r19, 0x00	; 0
 854:	81 e0       	ldi	r24, 0x01	; 1
 856:	90 e0       	ldi	r25, 0x00	; 0
 858:	02 2e       	mov	r0, r18
 85a:	02 c0       	rjmp	.+4      	; 0x860 <__stack+0x1>
 85c:	88 0f       	add	r24, r24
 85e:	99 1f       	adc	r25, r25
 860:	0a 94       	dec	r0
 862:	e2 f7       	brpl	.-8      	; 0x85c <MDIO_voidSetPinValue+0x286>
 864:	84 27       	eor	r24, r20
 866:	12 96       	adiw	r26, 0x02	; 2
 868:	8c 93       	st	X, r24
 86a:	12 97       	sbiw	r26, 0x02	; 2
 86c:	41 c0       	rjmp	.+130    	; 0x8f0 <__stack+0x91>
				case MDIO_PORTC: TOGGLE_BIT(GPIOC -> PORT, ARG_u8Pin); break;
 86e:	a3 e3       	ldi	r26, 0x33	; 51
 870:	b0 e0       	ldi	r27, 0x00	; 0
 872:	e3 e3       	ldi	r30, 0x33	; 51
 874:	f0 e0       	ldi	r31, 0x00	; 0
 876:	82 81       	ldd	r24, Z+2	; 0x02
 878:	48 2f       	mov	r20, r24
 87a:	8a 81       	ldd	r24, Y+2	; 0x02
 87c:	28 2f       	mov	r18, r24
 87e:	30 e0       	ldi	r19, 0x00	; 0
 880:	81 e0       	ldi	r24, 0x01	; 1
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	02 2e       	mov	r0, r18
 886:	02 c0       	rjmp	.+4      	; 0x88c <__stack+0x2d>
 888:	88 0f       	add	r24, r24
 88a:	99 1f       	adc	r25, r25
 88c:	0a 94       	dec	r0
 88e:	e2 f7       	brpl	.-8      	; 0x888 <__stack+0x29>
 890:	84 27       	eor	r24, r20
 892:	12 96       	adiw	r26, 0x02	; 2
 894:	8c 93       	st	X, r24
 896:	12 97       	sbiw	r26, 0x02	; 2
 898:	2b c0       	rjmp	.+86     	; 0x8f0 <__stack+0x91>
				case MDIO_PORTA: TOGGLE_BIT(GPIOA -> PORT, ARG_u8Pin); break;
 89a:	a9 e3       	ldi	r26, 0x39	; 57
 89c:	b0 e0       	ldi	r27, 0x00	; 0
 89e:	e9 e3       	ldi	r30, 0x39	; 57
 8a0:	f0 e0       	ldi	r31, 0x00	; 0
 8a2:	82 81       	ldd	r24, Z+2	; 0x02
 8a4:	48 2f       	mov	r20, r24
 8a6:	8a 81       	ldd	r24, Y+2	; 0x02
 8a8:	28 2f       	mov	r18, r24
 8aa:	30 e0       	ldi	r19, 0x00	; 0
 8ac:	81 e0       	ldi	r24, 0x01	; 1
 8ae:	90 e0       	ldi	r25, 0x00	; 0
 8b0:	02 2e       	mov	r0, r18
 8b2:	02 c0       	rjmp	.+4      	; 0x8b8 <__stack+0x59>
 8b4:	88 0f       	add	r24, r24
 8b6:	99 1f       	adc	r25, r25
 8b8:	0a 94       	dec	r0
 8ba:	e2 f7       	brpl	.-8      	; 0x8b4 <__stack+0x55>
 8bc:	84 27       	eor	r24, r20
 8be:	12 96       	adiw	r26, 0x02	; 2
 8c0:	8c 93       	st	X, r24
 8c2:	12 97       	sbiw	r26, 0x02	; 2
 8c4:	15 c0       	rjmp	.+42     	; 0x8f0 <__stack+0x91>
				case MDIO_PORTD: TOGGLE_BIT(GPIOD -> PORT, ARG_u8Pin); break;
 8c6:	a0 e3       	ldi	r26, 0x30	; 48
 8c8:	b0 e0       	ldi	r27, 0x00	; 0
 8ca:	e0 e3       	ldi	r30, 0x30	; 48
 8cc:	f0 e0       	ldi	r31, 0x00	; 0
 8ce:	82 81       	ldd	r24, Z+2	; 0x02
 8d0:	48 2f       	mov	r20, r24
 8d2:	8a 81       	ldd	r24, Y+2	; 0x02
 8d4:	28 2f       	mov	r18, r24
 8d6:	30 e0       	ldi	r19, 0x00	; 0
 8d8:	81 e0       	ldi	r24, 0x01	; 1
 8da:	90 e0       	ldi	r25, 0x00	; 0
 8dc:	02 2e       	mov	r0, r18
 8de:	02 c0       	rjmp	.+4      	; 0x8e4 <__stack+0x85>
 8e0:	88 0f       	add	r24, r24
 8e2:	99 1f       	adc	r25, r25
 8e4:	0a 94       	dec	r0
 8e6:	e2 f7       	brpl	.-8      	; 0x8e0 <__stack+0x81>
 8e8:	84 27       	eor	r24, r20
 8ea:	12 96       	adiw	r26, 0x02	; 2
 8ec:	8c 93       	st	X, r24
 8ee:	12 97       	sbiw	r26, 0x02	; 2
	else
	{
		/*report on error*/
	}

}
 8f0:	29 96       	adiw	r28, 0x09	; 9
 8f2:	0f b6       	in	r0, 0x3f	; 63
 8f4:	f8 94       	cli
 8f6:	de bf       	out	0x3e, r29	; 62
 8f8:	0f be       	out	0x3f, r0	; 63
 8fa:	cd bf       	out	0x3d, r28	; 61
 8fc:	cf 91       	pop	r28
 8fe:	df 91       	pop	r29
 900:	08 95       	ret

00000902 <MDIO_voidGetPinValue>:
u8 MDIO_voidGetPinValue(u8 ARG_u8Port,u8 ARG_u8Pin)
{
 902:	df 93       	push	r29
 904:	cf 93       	push	r28
 906:	00 d0       	rcall	.+0      	; 0x908 <MDIO_voidGetPinValue+0x6>
 908:	00 d0       	rcall	.+0      	; 0x90a <MDIO_voidGetPinValue+0x8>
 90a:	0f 92       	push	r0
 90c:	cd b7       	in	r28, 0x3d	; 61
 90e:	de b7       	in	r29, 0x3e	; 62
 910:	8a 83       	std	Y+2, r24	; 0x02
 912:	6b 83       	std	Y+3, r22	; 0x03
	u8 L_u8Value;
	if(ARG_u8Pin<=7)
 914:	8b 81       	ldd	r24, Y+3	; 0x03
 916:	88 30       	cpi	r24, 0x08	; 8
 918:	08 f0       	brcs	.+2      	; 0x91c <MDIO_voidGetPinValue+0x1a>
 91a:	68 c0       	rjmp	.+208    	; 0x9ec <MDIO_voidGetPinValue+0xea>
	{

		switch(ARG_u8Port)
 91c:	8a 81       	ldd	r24, Y+2	; 0x02
 91e:	28 2f       	mov	r18, r24
 920:	30 e0       	ldi	r19, 0x00	; 0
 922:	3d 83       	std	Y+5, r19	; 0x05
 924:	2c 83       	std	Y+4, r18	; 0x04
 926:	4c 81       	ldd	r20, Y+4	; 0x04
 928:	5d 81       	ldd	r21, Y+5	; 0x05
 92a:	4c 30       	cpi	r20, 0x0C	; 12
 92c:	51 05       	cpc	r21, r1
 92e:	b9 f0       	breq	.+46     	; 0x95e <MDIO_voidGetPinValue+0x5c>
 930:	8c 81       	ldd	r24, Y+4	; 0x04
 932:	9d 81       	ldd	r25, Y+5	; 0x05
 934:	8d 30       	cpi	r24, 0x0D	; 13
 936:	91 05       	cpc	r25, r1
 938:	3c f4       	brge	.+14     	; 0x948 <MDIO_voidGetPinValue+0x46>
 93a:	2c 81       	ldd	r18, Y+4	; 0x04
 93c:	3d 81       	ldd	r19, Y+5	; 0x05
 93e:	25 30       	cpi	r18, 0x05	; 5
 940:	31 05       	cpc	r19, r1
 942:	09 f4       	brne	.+2      	; 0x946 <MDIO_voidGetPinValue+0x44>
 944:	42 c0       	rjmp	.+132    	; 0x9ca <MDIO_voidGetPinValue+0xc8>
 946:	52 c0       	rjmp	.+164    	; 0x9ec <MDIO_voidGetPinValue+0xea>
 948:	4c 81       	ldd	r20, Y+4	; 0x04
 94a:	5d 81       	ldd	r21, Y+5	; 0x05
 94c:	41 32       	cpi	r20, 0x21	; 33
 94e:	51 05       	cpc	r21, r1
 950:	c1 f0       	breq	.+48     	; 0x982 <MDIO_voidGetPinValue+0x80>
 952:	8c 81       	ldd	r24, Y+4	; 0x04
 954:	9d 81       	ldd	r25, Y+5	; 0x05
 956:	88 32       	cpi	r24, 0x28	; 40
 958:	91 05       	cpc	r25, r1
 95a:	29 f1       	breq	.+74     	; 0x9a6 <MDIO_voidGetPinValue+0xa4>
 95c:	47 c0       	rjmp	.+142    	; 0x9ec <MDIO_voidGetPinValue+0xea>
		{
			case MDIO_PORTA: L_u8Value =GET_BIT(GPIOA -> PIN, ARG_u8Pin); break;
 95e:	e9 e3       	ldi	r30, 0x39	; 57
 960:	f0 e0       	ldi	r31, 0x00	; 0
 962:	80 81       	ld	r24, Z
 964:	28 2f       	mov	r18, r24
 966:	30 e0       	ldi	r19, 0x00	; 0
 968:	8b 81       	ldd	r24, Y+3	; 0x03
 96a:	88 2f       	mov	r24, r24
 96c:	90 e0       	ldi	r25, 0x00	; 0
 96e:	a9 01       	movw	r20, r18
 970:	02 c0       	rjmp	.+4      	; 0x976 <MDIO_voidGetPinValue+0x74>
 972:	55 95       	asr	r21
 974:	47 95       	ror	r20
 976:	8a 95       	dec	r24
 978:	e2 f7       	brpl	.-8      	; 0x972 <MDIO_voidGetPinValue+0x70>
 97a:	ca 01       	movw	r24, r20
 97c:	81 70       	andi	r24, 0x01	; 1
 97e:	89 83       	std	Y+1, r24	; 0x01
 980:	35 c0       	rjmp	.+106    	; 0x9ec <MDIO_voidGetPinValue+0xea>
			case MDIO_PORTB: L_u8Value =GET_BIT(GPIOB -> PIN, ARG_u8Pin); break;
 982:	e6 e3       	ldi	r30, 0x36	; 54
 984:	f0 e0       	ldi	r31, 0x00	; 0
 986:	80 81       	ld	r24, Z
 988:	28 2f       	mov	r18, r24
 98a:	30 e0       	ldi	r19, 0x00	; 0
 98c:	8b 81       	ldd	r24, Y+3	; 0x03
 98e:	88 2f       	mov	r24, r24
 990:	90 e0       	ldi	r25, 0x00	; 0
 992:	a9 01       	movw	r20, r18
 994:	02 c0       	rjmp	.+4      	; 0x99a <MDIO_voidGetPinValue+0x98>
 996:	55 95       	asr	r21
 998:	47 95       	ror	r20
 99a:	8a 95       	dec	r24
 99c:	e2 f7       	brpl	.-8      	; 0x996 <MDIO_voidGetPinValue+0x94>
 99e:	ca 01       	movw	r24, r20
 9a0:	81 70       	andi	r24, 0x01	; 1
 9a2:	89 83       	std	Y+1, r24	; 0x01
 9a4:	23 c0       	rjmp	.+70     	; 0x9ec <MDIO_voidGetPinValue+0xea>
			case MDIO_PORTC: L_u8Value =GET_BIT(GPIOC -> PIN, ARG_u8Pin); break;
 9a6:	e3 e3       	ldi	r30, 0x33	; 51
 9a8:	f0 e0       	ldi	r31, 0x00	; 0
 9aa:	80 81       	ld	r24, Z
 9ac:	28 2f       	mov	r18, r24
 9ae:	30 e0       	ldi	r19, 0x00	; 0
 9b0:	8b 81       	ldd	r24, Y+3	; 0x03
 9b2:	88 2f       	mov	r24, r24
 9b4:	90 e0       	ldi	r25, 0x00	; 0
 9b6:	a9 01       	movw	r20, r18
 9b8:	02 c0       	rjmp	.+4      	; 0x9be <MDIO_voidGetPinValue+0xbc>
 9ba:	55 95       	asr	r21
 9bc:	47 95       	ror	r20
 9be:	8a 95       	dec	r24
 9c0:	e2 f7       	brpl	.-8      	; 0x9ba <MDIO_voidGetPinValue+0xb8>
 9c2:	ca 01       	movw	r24, r20
 9c4:	81 70       	andi	r24, 0x01	; 1
 9c6:	89 83       	std	Y+1, r24	; 0x01
 9c8:	11 c0       	rjmp	.+34     	; 0x9ec <MDIO_voidGetPinValue+0xea>
			case MDIO_PORTD: L_u8Value =GET_BIT(GPIOD -> PIN, ARG_u8Pin); break;
 9ca:	e0 e3       	ldi	r30, 0x30	; 48
 9cc:	f0 e0       	ldi	r31, 0x00	; 0
 9ce:	80 81       	ld	r24, Z
 9d0:	28 2f       	mov	r18, r24
 9d2:	30 e0       	ldi	r19, 0x00	; 0
 9d4:	8b 81       	ldd	r24, Y+3	; 0x03
 9d6:	88 2f       	mov	r24, r24
 9d8:	90 e0       	ldi	r25, 0x00	; 0
 9da:	a9 01       	movw	r20, r18
 9dc:	02 c0       	rjmp	.+4      	; 0x9e2 <MDIO_voidGetPinValue+0xe0>
 9de:	55 95       	asr	r21
 9e0:	47 95       	ror	r20
 9e2:	8a 95       	dec	r24
 9e4:	e2 f7       	brpl	.-8      	; 0x9de <MDIO_voidGetPinValue+0xdc>
 9e6:	ca 01       	movw	r24, r20
 9e8:	81 70       	andi	r24, 0x01	; 1
 9ea:	89 83       	std	Y+1, r24	; 0x01
	}
	else
	{
		/*report on error*/	
	}
	return L_u8Value;
 9ec:	89 81       	ldd	r24, Y+1	; 0x01
}
 9ee:	0f 90       	pop	r0
 9f0:	0f 90       	pop	r0
 9f2:	0f 90       	pop	r0
 9f4:	0f 90       	pop	r0
 9f6:	0f 90       	pop	r0
 9f8:	cf 91       	pop	r28
 9fa:	df 91       	pop	r29
 9fc:	08 95       	ret

000009fe <MEXTI_voidInit>:
static void (*MEXTI_pvoidfUserFunctionINT0)(void)= NULL_POINTER;
static void (*MEXTI_pvoidfUserFunctionINT1)(void)= NULL_POINTER;
static void (*MEXTI_pvoidfUserFunctionINT2)(void)= NULL_POINTER;

void MEXTI_voidInit(u8 ARG_u8InterruptNo, u8 ARG_u8InterruptMode)
{
 9fe:	df 93       	push	r29
 a00:	cf 93       	push	r28
 a02:	cd b7       	in	r28, 0x3d	; 61
 a04:	de b7       	in	r29, 0x3e	; 62
 a06:	2a 97       	sbiw	r28, 0x0a	; 10
 a08:	0f b6       	in	r0, 0x3f	; 63
 a0a:	f8 94       	cli
 a0c:	de bf       	out	0x3e, r29	; 62
 a0e:	0f be       	out	0x3f, r0	; 63
 a10:	cd bf       	out	0x3d, r28	; 61
 a12:	89 83       	std	Y+1, r24	; 0x01
 a14:	6a 83       	std	Y+2, r22	; 0x02
	switch(ARG_u8InterruptNo)
 a16:	89 81       	ldd	r24, Y+1	; 0x01
 a18:	28 2f       	mov	r18, r24
 a1a:	30 e0       	ldi	r19, 0x00	; 0
 a1c:	3a 87       	std	Y+10, r19	; 0x0a
 a1e:	29 87       	std	Y+9, r18	; 0x09
 a20:	89 85       	ldd	r24, Y+9	; 0x09
 a22:	9a 85       	ldd	r25, Y+10	; 0x0a
 a24:	86 30       	cpi	r24, 0x06	; 6
 a26:	91 05       	cpc	r25, r1
 a28:	69 f0       	breq	.+26     	; 0xa44 <MEXTI_voidInit+0x46>
 a2a:	29 85       	ldd	r18, Y+9	; 0x09
 a2c:	3a 85       	ldd	r19, Y+10	; 0x0a
 a2e:	27 30       	cpi	r18, 0x07	; 7
 a30:	31 05       	cpc	r19, r1
 a32:	09 f4       	brne	.+2      	; 0xa36 <MEXTI_voidInit+0x38>
 a34:	62 c0       	rjmp	.+196    	; 0xafa <MEXTI_voidInit+0xfc>
 a36:	89 85       	ldd	r24, Y+9	; 0x09
 a38:	9a 85       	ldd	r25, Y+10	; 0x0a
 a3a:	85 30       	cpi	r24, 0x05	; 5
 a3c:	91 05       	cpc	r25, r1
 a3e:	09 f4       	brne	.+2      	; 0xa42 <MEXTI_voidInit+0x44>
 a40:	b7 c0       	rjmp	.+366    	; 0xbb0 <MEXTI_voidInit+0x1b2>
 a42:	d5 c0       	rjmp	.+426    	; 0xbee <MEXTI_voidInit+0x1f0>
	{
		case MEXTI_INT0:
		{
			switch(ARG_u8InterruptMode)
 a44:	8a 81       	ldd	r24, Y+2	; 0x02
 a46:	28 2f       	mov	r18, r24
 a48:	30 e0       	ldi	r19, 0x00	; 0
 a4a:	38 87       	std	Y+8, r19	; 0x08
 a4c:	2f 83       	std	Y+7, r18	; 0x07
 a4e:	8f 81       	ldd	r24, Y+7	; 0x07
 a50:	98 85       	ldd	r25, Y+8	; 0x08
 a52:	81 30       	cpi	r24, 0x01	; 1
 a54:	91 05       	cpc	r25, r1
 a56:	21 f1       	breq	.+72     	; 0xaa0 <MEXTI_voidInit+0xa2>
 a58:	2f 81       	ldd	r18, Y+7	; 0x07
 a5a:	38 85       	ldd	r19, Y+8	; 0x08
 a5c:	22 30       	cpi	r18, 0x02	; 2
 a5e:	31 05       	cpc	r19, r1
 a60:	2c f4       	brge	.+10     	; 0xa6c <MEXTI_voidInit+0x6e>
 a62:	8f 81       	ldd	r24, Y+7	; 0x07
 a64:	98 85       	ldd	r25, Y+8	; 0x08
 a66:	00 97       	sbiw	r24, 0x00	; 0
 a68:	61 f0       	breq	.+24     	; 0xa82 <MEXTI_voidInit+0x84>
 a6a:	c1 c0       	rjmp	.+386    	; 0xbee <MEXTI_voidInit+0x1f0>
 a6c:	2f 81       	ldd	r18, Y+7	; 0x07
 a6e:	38 85       	ldd	r19, Y+8	; 0x08
 a70:	22 30       	cpi	r18, 0x02	; 2
 a72:	31 05       	cpc	r19, r1
 a74:	21 f1       	breq	.+72     	; 0xabe <MEXTI_voidInit+0xc0>
 a76:	8f 81       	ldd	r24, Y+7	; 0x07
 a78:	98 85       	ldd	r25, Y+8	; 0x08
 a7a:	83 30       	cpi	r24, 0x03	; 3
 a7c:	91 05       	cpc	r25, r1
 a7e:	71 f1       	breq	.+92     	; 0xadc <MEXTI_voidInit+0xde>
 a80:	b6 c0       	rjmp	.+364    	; 0xbee <MEXTI_voidInit+0x1f0>
			{
			case MEXTI_MODE_LOW:
			{
				CLEAR_BIT(MCUCR,ISC01);
 a82:	a5 e5       	ldi	r26, 0x55	; 85
 a84:	b0 e0       	ldi	r27, 0x00	; 0
 a86:	e5 e5       	ldi	r30, 0x55	; 85
 a88:	f0 e0       	ldi	r31, 0x00	; 0
 a8a:	80 81       	ld	r24, Z
 a8c:	8d 7f       	andi	r24, 0xFD	; 253
 a8e:	8c 93       	st	X, r24
				CLEAR_BIT(MCUCR,ISC00);
 a90:	a5 e5       	ldi	r26, 0x55	; 85
 a92:	b0 e0       	ldi	r27, 0x00	; 0
 a94:	e5 e5       	ldi	r30, 0x55	; 85
 a96:	f0 e0       	ldi	r31, 0x00	; 0
 a98:	80 81       	ld	r24, Z
 a9a:	8e 7f       	andi	r24, 0xFE	; 254
 a9c:	8c 93       	st	X, r24
 a9e:	a7 c0       	rjmp	.+334    	; 0xbee <MEXTI_voidInit+0x1f0>
				break;
			}
			case MEXTI_MODE_IOC:
			{
				CLEAR_BIT(MCUCR,ISC01);
 aa0:	a5 e5       	ldi	r26, 0x55	; 85
 aa2:	b0 e0       	ldi	r27, 0x00	; 0
 aa4:	e5 e5       	ldi	r30, 0x55	; 85
 aa6:	f0 e0       	ldi	r31, 0x00	; 0
 aa8:	80 81       	ld	r24, Z
 aaa:	8d 7f       	andi	r24, 0xFD	; 253
 aac:	8c 93       	st	X, r24
				SET_BIT(MCUCR,ISC00);
 aae:	a5 e5       	ldi	r26, 0x55	; 85
 ab0:	b0 e0       	ldi	r27, 0x00	; 0
 ab2:	e5 e5       	ldi	r30, 0x55	; 85
 ab4:	f0 e0       	ldi	r31, 0x00	; 0
 ab6:	80 81       	ld	r24, Z
 ab8:	81 60       	ori	r24, 0x01	; 1
 aba:	8c 93       	st	X, r24
 abc:	98 c0       	rjmp	.+304    	; 0xbee <MEXTI_voidInit+0x1f0>
				break;
			}
			case MEXTI_MODE_RISING:
			{
				SET_BIT(MCUCR,ISC01);
 abe:	a5 e5       	ldi	r26, 0x55	; 85
 ac0:	b0 e0       	ldi	r27, 0x00	; 0
 ac2:	e5 e5       	ldi	r30, 0x55	; 85
 ac4:	f0 e0       	ldi	r31, 0x00	; 0
 ac6:	80 81       	ld	r24, Z
 ac8:	82 60       	ori	r24, 0x02	; 2
 aca:	8c 93       	st	X, r24
				SET_BIT(MCUCR,ISC00);
 acc:	a5 e5       	ldi	r26, 0x55	; 85
 ace:	b0 e0       	ldi	r27, 0x00	; 0
 ad0:	e5 e5       	ldi	r30, 0x55	; 85
 ad2:	f0 e0       	ldi	r31, 0x00	; 0
 ad4:	80 81       	ld	r24, Z
 ad6:	81 60       	ori	r24, 0x01	; 1
 ad8:	8c 93       	st	X, r24
 ada:	89 c0       	rjmp	.+274    	; 0xbee <MEXTI_voidInit+0x1f0>
				break;				
			}
			case MEXTI_MODE_FALLING	:	
			{
				SET_BIT(MCUCR,ISC01);
 adc:	a5 e5       	ldi	r26, 0x55	; 85
 ade:	b0 e0       	ldi	r27, 0x00	; 0
 ae0:	e5 e5       	ldi	r30, 0x55	; 85
 ae2:	f0 e0       	ldi	r31, 0x00	; 0
 ae4:	80 81       	ld	r24, Z
 ae6:	82 60       	ori	r24, 0x02	; 2
 ae8:	8c 93       	st	X, r24
				CLEAR_BIT(MCUCR,ISC00);
 aea:	a5 e5       	ldi	r26, 0x55	; 85
 aec:	b0 e0       	ldi	r27, 0x00	; 0
 aee:	e5 e5       	ldi	r30, 0x55	; 85
 af0:	f0 e0       	ldi	r31, 0x00	; 0
 af2:	80 81       	ld	r24, Z
 af4:	8e 7f       	andi	r24, 0xFE	; 254
 af6:	8c 93       	st	X, r24
 af8:	7a c0       	rjmp	.+244    	; 0xbee <MEXTI_voidInit+0x1f0>
			}
		break;
		}
		case MEXTI_INT1 :
		{
			switch(ARG_u8InterruptMode)
 afa:	8a 81       	ldd	r24, Y+2	; 0x02
 afc:	28 2f       	mov	r18, r24
 afe:	30 e0       	ldi	r19, 0x00	; 0
 b00:	3e 83       	std	Y+6, r19	; 0x06
 b02:	2d 83       	std	Y+5, r18	; 0x05
 b04:	8d 81       	ldd	r24, Y+5	; 0x05
 b06:	9e 81       	ldd	r25, Y+6	; 0x06
 b08:	81 30       	cpi	r24, 0x01	; 1
 b0a:	91 05       	cpc	r25, r1
 b0c:	21 f1       	breq	.+72     	; 0xb56 <MEXTI_voidInit+0x158>
 b0e:	2d 81       	ldd	r18, Y+5	; 0x05
 b10:	3e 81       	ldd	r19, Y+6	; 0x06
 b12:	22 30       	cpi	r18, 0x02	; 2
 b14:	31 05       	cpc	r19, r1
 b16:	2c f4       	brge	.+10     	; 0xb22 <MEXTI_voidInit+0x124>
 b18:	8d 81       	ldd	r24, Y+5	; 0x05
 b1a:	9e 81       	ldd	r25, Y+6	; 0x06
 b1c:	00 97       	sbiw	r24, 0x00	; 0
 b1e:	61 f0       	breq	.+24     	; 0xb38 <MEXTI_voidInit+0x13a>
 b20:	66 c0       	rjmp	.+204    	; 0xbee <MEXTI_voidInit+0x1f0>
 b22:	2d 81       	ldd	r18, Y+5	; 0x05
 b24:	3e 81       	ldd	r19, Y+6	; 0x06
 b26:	22 30       	cpi	r18, 0x02	; 2
 b28:	31 05       	cpc	r19, r1
 b2a:	21 f1       	breq	.+72     	; 0xb74 <MEXTI_voidInit+0x176>
 b2c:	8d 81       	ldd	r24, Y+5	; 0x05
 b2e:	9e 81       	ldd	r25, Y+6	; 0x06
 b30:	83 30       	cpi	r24, 0x03	; 3
 b32:	91 05       	cpc	r25, r1
 b34:	71 f1       	breq	.+92     	; 0xb92 <MEXTI_voidInit+0x194>
 b36:	5b c0       	rjmp	.+182    	; 0xbee <MEXTI_voidInit+0x1f0>
			{
				case MEXTI_MODE_LOW:
				{
					CLEAR_BIT(MCUCR,ISC11);
 b38:	a5 e5       	ldi	r26, 0x55	; 85
 b3a:	b0 e0       	ldi	r27, 0x00	; 0
 b3c:	e5 e5       	ldi	r30, 0x55	; 85
 b3e:	f0 e0       	ldi	r31, 0x00	; 0
 b40:	80 81       	ld	r24, Z
 b42:	87 7f       	andi	r24, 0xF7	; 247
 b44:	8c 93       	st	X, r24
					CLEAR_BIT(MCUCR,ISC10);
 b46:	a5 e5       	ldi	r26, 0x55	; 85
 b48:	b0 e0       	ldi	r27, 0x00	; 0
 b4a:	e5 e5       	ldi	r30, 0x55	; 85
 b4c:	f0 e0       	ldi	r31, 0x00	; 0
 b4e:	80 81       	ld	r24, Z
 b50:	8b 7f       	andi	r24, 0xFB	; 251
 b52:	8c 93       	st	X, r24
 b54:	4c c0       	rjmp	.+152    	; 0xbee <MEXTI_voidInit+0x1f0>
					break;
				}
				case MEXTI_MODE_IOC:
				{
					CLEAR_BIT(MCUCR,ISC11);
 b56:	a5 e5       	ldi	r26, 0x55	; 85
 b58:	b0 e0       	ldi	r27, 0x00	; 0
 b5a:	e5 e5       	ldi	r30, 0x55	; 85
 b5c:	f0 e0       	ldi	r31, 0x00	; 0
 b5e:	80 81       	ld	r24, Z
 b60:	87 7f       	andi	r24, 0xF7	; 247
 b62:	8c 93       	st	X, r24
					SET_BIT(MCUCR,ISC10);
 b64:	a5 e5       	ldi	r26, 0x55	; 85
 b66:	b0 e0       	ldi	r27, 0x00	; 0
 b68:	e5 e5       	ldi	r30, 0x55	; 85
 b6a:	f0 e0       	ldi	r31, 0x00	; 0
 b6c:	80 81       	ld	r24, Z
 b6e:	84 60       	ori	r24, 0x04	; 4
 b70:	8c 93       	st	X, r24
 b72:	3d c0       	rjmp	.+122    	; 0xbee <MEXTI_voidInit+0x1f0>
					break;
				}
				case MEXTI_MODE_RISING:
				{
					SET_BIT(MCUCR,ISC11);
 b74:	a5 e5       	ldi	r26, 0x55	; 85
 b76:	b0 e0       	ldi	r27, 0x00	; 0
 b78:	e5 e5       	ldi	r30, 0x55	; 85
 b7a:	f0 e0       	ldi	r31, 0x00	; 0
 b7c:	80 81       	ld	r24, Z
 b7e:	88 60       	ori	r24, 0x08	; 8
 b80:	8c 93       	st	X, r24
					SET_BIT(MCUCR,ISC10);
 b82:	a5 e5       	ldi	r26, 0x55	; 85
 b84:	b0 e0       	ldi	r27, 0x00	; 0
 b86:	e5 e5       	ldi	r30, 0x55	; 85
 b88:	f0 e0       	ldi	r31, 0x00	; 0
 b8a:	80 81       	ld	r24, Z
 b8c:	84 60       	ori	r24, 0x04	; 4
 b8e:	8c 93       	st	X, r24
 b90:	2e c0       	rjmp	.+92     	; 0xbee <MEXTI_voidInit+0x1f0>
					break;
				}
				case MEXTI_MODE_FALLING	:
				{
					SET_BIT(MCUCR,ISC11);
 b92:	a5 e5       	ldi	r26, 0x55	; 85
 b94:	b0 e0       	ldi	r27, 0x00	; 0
 b96:	e5 e5       	ldi	r30, 0x55	; 85
 b98:	f0 e0       	ldi	r31, 0x00	; 0
 b9a:	80 81       	ld	r24, Z
 b9c:	88 60       	ori	r24, 0x08	; 8
 b9e:	8c 93       	st	X, r24
					CLEAR_BIT(MCUCR,ISC10);
 ba0:	a5 e5       	ldi	r26, 0x55	; 85
 ba2:	b0 e0       	ldi	r27, 0x00	; 0
 ba4:	e5 e5       	ldi	r30, 0x55	; 85
 ba6:	f0 e0       	ldi	r31, 0x00	; 0
 ba8:	80 81       	ld	r24, Z
 baa:	8b 7f       	andi	r24, 0xFB	; 251
 bac:	8c 93       	st	X, r24
 bae:	1f c0       	rjmp	.+62     	; 0xbee <MEXTI_voidInit+0x1f0>
		}


		case MEXTI_INT2:
		{
			switch(ARG_u8InterruptMode)
 bb0:	8a 81       	ldd	r24, Y+2	; 0x02
 bb2:	28 2f       	mov	r18, r24
 bb4:	30 e0       	ldi	r19, 0x00	; 0
 bb6:	3c 83       	std	Y+4, r19	; 0x04
 bb8:	2b 83       	std	Y+3, r18	; 0x03
 bba:	8b 81       	ldd	r24, Y+3	; 0x03
 bbc:	9c 81       	ldd	r25, Y+4	; 0x04
 bbe:	82 30       	cpi	r24, 0x02	; 2
 bc0:	91 05       	cpc	r25, r1
 bc2:	31 f0       	breq	.+12     	; 0xbd0 <MEXTI_voidInit+0x1d2>
 bc4:	2b 81       	ldd	r18, Y+3	; 0x03
 bc6:	3c 81       	ldd	r19, Y+4	; 0x04
 bc8:	23 30       	cpi	r18, 0x03	; 3
 bca:	31 05       	cpc	r19, r1
 bcc:	49 f0       	breq	.+18     	; 0xbe0 <MEXTI_voidInit+0x1e2>
 bce:	0f c0       	rjmp	.+30     	; 0xbee <MEXTI_voidInit+0x1f0>
			{

				case MEXTI_MODE_RISING:
				{
					SET_BIT(MCUCR,ISC2);
 bd0:	a5 e5       	ldi	r26, 0x55	; 85
 bd2:	b0 e0       	ldi	r27, 0x00	; 0
 bd4:	e5 e5       	ldi	r30, 0x55	; 85
 bd6:	f0 e0       	ldi	r31, 0x00	; 0
 bd8:	80 81       	ld	r24, Z
 bda:	80 64       	ori	r24, 0x40	; 64
 bdc:	8c 93       	st	X, r24
 bde:	07 c0       	rjmp	.+14     	; 0xbee <MEXTI_voidInit+0x1f0>
					break;
				}
				case MEXTI_MODE_FALLING	:
				{
					CLEAR_BIT(MCUCR,ISC2);
 be0:	a5 e5       	ldi	r26, 0x55	; 85
 be2:	b0 e0       	ldi	r27, 0x00	; 0
 be4:	e5 e5       	ldi	r30, 0x55	; 85
 be6:	f0 e0       	ldi	r31, 0x00	; 0
 be8:	80 81       	ld	r24, Z
 bea:	8f 7b       	andi	r24, 0xBF	; 191
 bec:	8c 93       	st	X, r24
			break;
		}

		default :{break;}
	}
}
 bee:	2a 96       	adiw	r28, 0x0a	; 10
 bf0:	0f b6       	in	r0, 0x3f	; 63
 bf2:	f8 94       	cli
 bf4:	de bf       	out	0x3e, r29	; 62
 bf6:	0f be       	out	0x3f, r0	; 63
 bf8:	cd bf       	out	0x3d, r28	; 61
 bfa:	cf 91       	pop	r28
 bfc:	df 91       	pop	r29
 bfe:	08 95       	ret

00000c00 <MEXTI_voidEnableInterrupt>:
void MEXTI_voidEnableInterrupt(u8 ARG_u8InterruptNo)
{
 c00:	df 93       	push	r29
 c02:	cf 93       	push	r28
 c04:	0f 92       	push	r0
 c06:	cd b7       	in	r28, 0x3d	; 61
 c08:	de b7       	in	r29, 0x3e	; 62
 c0a:	89 83       	std	Y+1, r24	; 0x01
	if(ARG_u8InterruptNo>=5 && ARG_u8InterruptNo<=7)
 c0c:	89 81       	ldd	r24, Y+1	; 0x01
 c0e:	85 30       	cpi	r24, 0x05	; 5
 c10:	b0 f0       	brcs	.+44     	; 0xc3e <MEXTI_voidEnableInterrupt+0x3e>
 c12:	89 81       	ldd	r24, Y+1	; 0x01
 c14:	88 30       	cpi	r24, 0x08	; 8
 c16:	98 f4       	brcc	.+38     	; 0xc3e <MEXTI_voidEnableInterrupt+0x3e>
	{
		SET_BIT(GICR,ARG_u8InterruptNo);
 c18:	ab e5       	ldi	r26, 0x5B	; 91
 c1a:	b0 e0       	ldi	r27, 0x00	; 0
 c1c:	eb e5       	ldi	r30, 0x5B	; 91
 c1e:	f0 e0       	ldi	r31, 0x00	; 0
 c20:	80 81       	ld	r24, Z
 c22:	48 2f       	mov	r20, r24
 c24:	89 81       	ldd	r24, Y+1	; 0x01
 c26:	28 2f       	mov	r18, r24
 c28:	30 e0       	ldi	r19, 0x00	; 0
 c2a:	81 e0       	ldi	r24, 0x01	; 1
 c2c:	90 e0       	ldi	r25, 0x00	; 0
 c2e:	02 2e       	mov	r0, r18
 c30:	02 c0       	rjmp	.+4      	; 0xc36 <MEXTI_voidEnableInterrupt+0x36>
 c32:	88 0f       	add	r24, r24
 c34:	99 1f       	adc	r25, r25
 c36:	0a 94       	dec	r0
 c38:	e2 f7       	brpl	.-8      	; 0xc32 <MEXTI_voidEnableInterrupt+0x32>
 c3a:	84 2b       	or	r24, r20
 c3c:	8c 93       	st	X, r24
	}
	else
	{
		//report error
	}	
}
 c3e:	0f 90       	pop	r0
 c40:	cf 91       	pop	r28
 c42:	df 91       	pop	r29
 c44:	08 95       	ret

00000c46 <MEXTI_voidDisableInterrupt>:
void MEXTI_voidDisableInterrupt(u8 ARG_u8InterruptNo)
{
 c46:	df 93       	push	r29
 c48:	cf 93       	push	r28
 c4a:	0f 92       	push	r0
 c4c:	cd b7       	in	r28, 0x3d	; 61
 c4e:	de b7       	in	r29, 0x3e	; 62
 c50:	89 83       	std	Y+1, r24	; 0x01
	if(ARG_u8InterruptNo>=5 && ARG_u8InterruptNo<=7)
 c52:	89 81       	ldd	r24, Y+1	; 0x01
 c54:	85 30       	cpi	r24, 0x05	; 5
 c56:	b8 f0       	brcs	.+46     	; 0xc86 <MEXTI_voidDisableInterrupt+0x40>
 c58:	89 81       	ldd	r24, Y+1	; 0x01
 c5a:	88 30       	cpi	r24, 0x08	; 8
 c5c:	a0 f4       	brcc	.+40     	; 0xc86 <MEXTI_voidDisableInterrupt+0x40>
	{
		CLEAR_BIT(GICR,ARG_u8InterruptNo);
 c5e:	ab e5       	ldi	r26, 0x5B	; 91
 c60:	b0 e0       	ldi	r27, 0x00	; 0
 c62:	eb e5       	ldi	r30, 0x5B	; 91
 c64:	f0 e0       	ldi	r31, 0x00	; 0
 c66:	80 81       	ld	r24, Z
 c68:	48 2f       	mov	r20, r24
 c6a:	89 81       	ldd	r24, Y+1	; 0x01
 c6c:	28 2f       	mov	r18, r24
 c6e:	30 e0       	ldi	r19, 0x00	; 0
 c70:	81 e0       	ldi	r24, 0x01	; 1
 c72:	90 e0       	ldi	r25, 0x00	; 0
 c74:	02 2e       	mov	r0, r18
 c76:	02 c0       	rjmp	.+4      	; 0xc7c <MEXTI_voidDisableInterrupt+0x36>
 c78:	88 0f       	add	r24, r24
 c7a:	99 1f       	adc	r25, r25
 c7c:	0a 94       	dec	r0
 c7e:	e2 f7       	brpl	.-8      	; 0xc78 <MEXTI_voidDisableInterrupt+0x32>
 c80:	80 95       	com	r24
 c82:	84 23       	and	r24, r20
 c84:	8c 93       	st	X, r24
	}
	else
	{
		//report error
	}
}
 c86:	0f 90       	pop	r0
 c88:	cf 91       	pop	r28
 c8a:	df 91       	pop	r29
 c8c:	08 95       	ret

00000c8e <MEXTI_voidSetCallback>:

void MEXTI_voidSetCallback(void(*ARG_pvoidfUserFunction)(void),u8 ARG_u8InterruptNo)
{
 c8e:	df 93       	push	r29
 c90:	cf 93       	push	r28
 c92:	00 d0       	rcall	.+0      	; 0xc94 <MEXTI_voidSetCallback+0x6>
 c94:	00 d0       	rcall	.+0      	; 0xc96 <MEXTI_voidSetCallback+0x8>
 c96:	0f 92       	push	r0
 c98:	cd b7       	in	r28, 0x3d	; 61
 c9a:	de b7       	in	r29, 0x3e	; 62
 c9c:	9a 83       	std	Y+2, r25	; 0x02
 c9e:	89 83       	std	Y+1, r24	; 0x01
 ca0:	6b 83       	std	Y+3, r22	; 0x03
		switch(ARG_u8InterruptNo)
 ca2:	8b 81       	ldd	r24, Y+3	; 0x03
 ca4:	28 2f       	mov	r18, r24
 ca6:	30 e0       	ldi	r19, 0x00	; 0
 ca8:	3d 83       	std	Y+5, r19	; 0x05
 caa:	2c 83       	std	Y+4, r18	; 0x04
 cac:	8c 81       	ldd	r24, Y+4	; 0x04
 cae:	9d 81       	ldd	r25, Y+5	; 0x05
 cb0:	86 30       	cpi	r24, 0x06	; 6
 cb2:	91 05       	cpc	r25, r1
 cb4:	59 f0       	breq	.+22     	; 0xccc <MEXTI_voidSetCallback+0x3e>
 cb6:	2c 81       	ldd	r18, Y+4	; 0x04
 cb8:	3d 81       	ldd	r19, Y+5	; 0x05
 cba:	27 30       	cpi	r18, 0x07	; 7
 cbc:	31 05       	cpc	r19, r1
 cbe:	69 f0       	breq	.+26     	; 0xcda <MEXTI_voidSetCallback+0x4c>
 cc0:	8c 81       	ldd	r24, Y+4	; 0x04
 cc2:	9d 81       	ldd	r25, Y+5	; 0x05
 cc4:	85 30       	cpi	r24, 0x05	; 5
 cc6:	91 05       	cpc	r25, r1
 cc8:	79 f0       	breq	.+30     	; 0xce8 <MEXTI_voidSetCallback+0x5a>
 cca:	14 c0       	rjmp	.+40     	; 0xcf4 <MEXTI_voidSetCallback+0x66>
	{
		case MEXTI_INT0: MEXTI_pvoidfUserFunctionINT0 = ARG_pvoidfUserFunction; break;
 ccc:	89 81       	ldd	r24, Y+1	; 0x01
 cce:	9a 81       	ldd	r25, Y+2	; 0x02
 cd0:	90 93 61 00 	sts	0x0061, r25
 cd4:	80 93 60 00 	sts	0x0060, r24
 cd8:	0d c0       	rjmp	.+26     	; 0xcf4 <MEXTI_voidSetCallback+0x66>
		case MEXTI_INT1: MEXTI_pvoidfUserFunctionINT1 = ARG_pvoidfUserFunction; break;
 cda:	89 81       	ldd	r24, Y+1	; 0x01
 cdc:	9a 81       	ldd	r25, Y+2	; 0x02
 cde:	90 93 63 00 	sts	0x0063, r25
 ce2:	80 93 62 00 	sts	0x0062, r24
 ce6:	06 c0       	rjmp	.+12     	; 0xcf4 <MEXTI_voidSetCallback+0x66>
		case MEXTI_INT2: MEXTI_pvoidfUserFunctionINT2 = ARG_pvoidfUserFunction; break;
 ce8:	89 81       	ldd	r24, Y+1	; 0x01
 cea:	9a 81       	ldd	r25, Y+2	; 0x02
 cec:	90 93 65 00 	sts	0x0065, r25
 cf0:	80 93 64 00 	sts	0x0064, r24
		default :/*report error*/ 		break;		

    }
}
 cf4:	0f 90       	pop	r0
 cf6:	0f 90       	pop	r0
 cf8:	0f 90       	pop	r0
 cfa:	0f 90       	pop	r0
 cfc:	0f 90       	pop	r0
 cfe:	cf 91       	pop	r28
 d00:	df 91       	pop	r29
 d02:	08 95       	ret

00000d04 <__vector_1>:

void __vector_1(void) __attribute__((signal));
void __vector_1(void)
{
 d04:	1f 92       	push	r1
 d06:	0f 92       	push	r0
 d08:	0f b6       	in	r0, 0x3f	; 63
 d0a:	0f 92       	push	r0
 d0c:	11 24       	eor	r1, r1
 d0e:	2f 93       	push	r18
 d10:	3f 93       	push	r19
 d12:	4f 93       	push	r20
 d14:	5f 93       	push	r21
 d16:	6f 93       	push	r22
 d18:	7f 93       	push	r23
 d1a:	8f 93       	push	r24
 d1c:	9f 93       	push	r25
 d1e:	af 93       	push	r26
 d20:	bf 93       	push	r27
 d22:	ef 93       	push	r30
 d24:	ff 93       	push	r31
 d26:	df 93       	push	r29
 d28:	cf 93       	push	r28
 d2a:	cd b7       	in	r28, 0x3d	; 61
 d2c:	de b7       	in	r29, 0x3e	; 62
	if(MEXTI_pvoidfUserFunctionINT0 != NULL_POINTER)
 d2e:	80 91 60 00 	lds	r24, 0x0060
 d32:	90 91 61 00 	lds	r25, 0x0061
 d36:	00 97       	sbiw	r24, 0x00	; 0
 d38:	29 f0       	breq	.+10     	; 0xd44 <__vector_1+0x40>
	{	(*MEXTI_pvoidfUserFunctionINT0)();}
 d3a:	e0 91 60 00 	lds	r30, 0x0060
 d3e:	f0 91 61 00 	lds	r31, 0x0061
 d42:	09 95       	icall
	else
	{	/*misra*/}
		
}
 d44:	cf 91       	pop	r28
 d46:	df 91       	pop	r29
 d48:	ff 91       	pop	r31
 d4a:	ef 91       	pop	r30
 d4c:	bf 91       	pop	r27
 d4e:	af 91       	pop	r26
 d50:	9f 91       	pop	r25
 d52:	8f 91       	pop	r24
 d54:	7f 91       	pop	r23
 d56:	6f 91       	pop	r22
 d58:	5f 91       	pop	r21
 d5a:	4f 91       	pop	r20
 d5c:	3f 91       	pop	r19
 d5e:	2f 91       	pop	r18
 d60:	0f 90       	pop	r0
 d62:	0f be       	out	0x3f, r0	; 63
 d64:	0f 90       	pop	r0
 d66:	1f 90       	pop	r1
 d68:	18 95       	reti

00000d6a <__vector_2>:
void __vector_2(void) __attribute__((signal));
void __vector_2(void)
{
 d6a:	1f 92       	push	r1
 d6c:	0f 92       	push	r0
 d6e:	0f b6       	in	r0, 0x3f	; 63
 d70:	0f 92       	push	r0
 d72:	11 24       	eor	r1, r1
 d74:	2f 93       	push	r18
 d76:	3f 93       	push	r19
 d78:	4f 93       	push	r20
 d7a:	5f 93       	push	r21
 d7c:	6f 93       	push	r22
 d7e:	7f 93       	push	r23
 d80:	8f 93       	push	r24
 d82:	9f 93       	push	r25
 d84:	af 93       	push	r26
 d86:	bf 93       	push	r27
 d88:	ef 93       	push	r30
 d8a:	ff 93       	push	r31
 d8c:	df 93       	push	r29
 d8e:	cf 93       	push	r28
 d90:	cd b7       	in	r28, 0x3d	; 61
 d92:	de b7       	in	r29, 0x3e	; 62
	if(MEXTI_pvoidfUserFunctionINT1 != NULL_POINTER)
 d94:	80 91 62 00 	lds	r24, 0x0062
 d98:	90 91 63 00 	lds	r25, 0x0063
 d9c:	00 97       	sbiw	r24, 0x00	; 0
 d9e:	29 f0       	breq	.+10     	; 0xdaa <__vector_2+0x40>
		{(*MEXTI_pvoidfUserFunctionINT1)();}
 da0:	e0 91 62 00 	lds	r30, 0x0062
 da4:	f0 91 63 00 	lds	r31, 0x0063
 da8:	09 95       	icall
	else
	{/*misra*/}
		
}
 daa:	cf 91       	pop	r28
 dac:	df 91       	pop	r29
 dae:	ff 91       	pop	r31
 db0:	ef 91       	pop	r30
 db2:	bf 91       	pop	r27
 db4:	af 91       	pop	r26
 db6:	9f 91       	pop	r25
 db8:	8f 91       	pop	r24
 dba:	7f 91       	pop	r23
 dbc:	6f 91       	pop	r22
 dbe:	5f 91       	pop	r21
 dc0:	4f 91       	pop	r20
 dc2:	3f 91       	pop	r19
 dc4:	2f 91       	pop	r18
 dc6:	0f 90       	pop	r0
 dc8:	0f be       	out	0x3f, r0	; 63
 dca:	0f 90       	pop	r0
 dcc:	1f 90       	pop	r1
 dce:	18 95       	reti

00000dd0 <__vector_3>:

void __vector_3(void) __attribute__((signal));
void __vector_3(void)
{
 dd0:	1f 92       	push	r1
 dd2:	0f 92       	push	r0
 dd4:	0f b6       	in	r0, 0x3f	; 63
 dd6:	0f 92       	push	r0
 dd8:	11 24       	eor	r1, r1
 dda:	2f 93       	push	r18
 ddc:	3f 93       	push	r19
 dde:	4f 93       	push	r20
 de0:	5f 93       	push	r21
 de2:	6f 93       	push	r22
 de4:	7f 93       	push	r23
 de6:	8f 93       	push	r24
 de8:	9f 93       	push	r25
 dea:	af 93       	push	r26
 dec:	bf 93       	push	r27
 dee:	ef 93       	push	r30
 df0:	ff 93       	push	r31
 df2:	df 93       	push	r29
 df4:	cf 93       	push	r28
 df6:	cd b7       	in	r28, 0x3d	; 61
 df8:	de b7       	in	r29, 0x3e	; 62
	if(MEXTI_pvoidfUserFunctionINT2 != NULL_POINTER)
 dfa:	80 91 64 00 	lds	r24, 0x0064
 dfe:	90 91 65 00 	lds	r25, 0x0065
 e02:	00 97       	sbiw	r24, 0x00	; 0
 e04:	29 f0       	breq	.+10     	; 0xe10 <__vector_3+0x40>
	{	(*MEXTI_pvoidfUserFunctionINT2)();}
 e06:	e0 91 64 00 	lds	r30, 0x0064
 e0a:	f0 91 65 00 	lds	r31, 0x0065
 e0e:	09 95       	icall
	else
	{	/*misra*/}

}
 e10:	cf 91       	pop	r28
 e12:	df 91       	pop	r29
 e14:	ff 91       	pop	r31
 e16:	ef 91       	pop	r30
 e18:	bf 91       	pop	r27
 e1a:	af 91       	pop	r26
 e1c:	9f 91       	pop	r25
 e1e:	8f 91       	pop	r24
 e20:	7f 91       	pop	r23
 e22:	6f 91       	pop	r22
 e24:	5f 91       	pop	r21
 e26:	4f 91       	pop	r20
 e28:	3f 91       	pop	r19
 e2a:	2f 91       	pop	r18
 e2c:	0f 90       	pop	r0
 e2e:	0f be       	out	0x3f, r0	; 63
 e30:	0f 90       	pop	r0
 e32:	1f 90       	pop	r1
 e34:	18 95       	reti

00000e36 <MGIE_voidEnableGI>:

#include "MGIE_private.h"
#include "MGIE_interface.h"

void MGIE_voidEnableGI(void)
{
 e36:	df 93       	push	r29
 e38:	cf 93       	push	r28
 e3a:	cd b7       	in	r28, 0x3d	; 61
 e3c:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG,I);
 e3e:	af e5       	ldi	r26, 0x5F	; 95
 e40:	b0 e0       	ldi	r27, 0x00	; 0
 e42:	ef e5       	ldi	r30, 0x5F	; 95
 e44:	f0 e0       	ldi	r31, 0x00	; 0
 e46:	80 81       	ld	r24, Z
 e48:	80 68       	ori	r24, 0x80	; 128
 e4a:	8c 93       	st	X, r24
}
 e4c:	cf 91       	pop	r28
 e4e:	df 91       	pop	r29
 e50:	08 95       	ret

00000e52 <MGIE_voidDisableGI>:
void MGIE_voidDisableGI(void)
{
 e52:	df 93       	push	r29
 e54:	cf 93       	push	r28
 e56:	cd b7       	in	r28, 0x3d	; 61
 e58:	de b7       	in	r29, 0x3e	; 62
	CLEAR_BIT(SREG,I);	
 e5a:	af e5       	ldi	r26, 0x5F	; 95
 e5c:	b0 e0       	ldi	r27, 0x00	; 0
 e5e:	ef e5       	ldi	r30, 0x5F	; 95
 e60:	f0 e0       	ldi	r31, 0x00	; 0
 e62:	80 81       	ld	r24, Z
 e64:	8f 77       	andi	r24, 0x7F	; 127
 e66:	8c 93       	st	X, r24
}
 e68:	cf 91       	pop	r28
 e6a:	df 91       	pop	r29
 e6c:	08 95       	ret

00000e6e <main>:
#include "MDIO_interface.h"
#include "MGIE_interface.h"
#include "MEXTI_interface.h"
void func1(void);
int main(void)
{
 e6e:	df 93       	push	r29
 e70:	cf 93       	push	r28
 e72:	cd b7       	in	r28, 0x3d	; 61
 e74:	de b7       	in	r29, 0x3e	; 62

	MDIO_voidSetPinDirection(MDIO_PORTD,2,MDIO_INPUT_PULLUP);
 e76:	85 e0       	ldi	r24, 0x05	; 5
 e78:	62 e0       	ldi	r22, 0x02	; 2
 e7a:	48 ec       	ldi	r20, 0xC8	; 200
 e7c:	0e 94 05 01 	call	0x20a	; 0x20a <MDIO_voidSetPinDirection>


	MDIO_voidSetPinDirection(MDIO_PORTB,0,MDIO_OUTPUT);
 e80:	81 e2       	ldi	r24, 0x21	; 33
 e82:	60 e0       	ldi	r22, 0x00	; 0
 e84:	4a e5       	ldi	r20, 0x5A	; 90
 e86:	0e 94 05 01 	call	0x20a	; 0x20a <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(MDIO_PORTB,1,MDIO_OUTPUT);
 e8a:	81 e2       	ldi	r24, 0x21	; 33
 e8c:	61 e0       	ldi	r22, 0x01	; 1
 e8e:	4a e5       	ldi	r20, 0x5A	; 90
 e90:	0e 94 05 01 	call	0x20a	; 0x20a <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(MDIO_PORTB,2,MDIO_OUTPUT);
 e94:	81 e2       	ldi	r24, 0x21	; 33
 e96:	62 e0       	ldi	r22, 0x02	; 2
 e98:	4a e5       	ldi	r20, 0x5A	; 90
 e9a:	0e 94 05 01 	call	0x20a	; 0x20a <MDIO_voidSetPinDirection>
	MDIO_voidSetPinDirection(MDIO_PORTB,3,MDIO_OUTPUT);
 e9e:	81 e2       	ldi	r24, 0x21	; 33
 ea0:	63 e0       	ldi	r22, 0x03	; 3
 ea2:	4a e5       	ldi	r20, 0x5A	; 90
 ea4:	0e 94 05 01 	call	0x20a	; 0x20a <MDIO_voidSetPinDirection>


MEXTI_voidInit(MEXTI_INT0,MEXTI_MODE_IOC);  //1---MODE & INTERRUPT
 ea8:	86 e0       	ldi	r24, 0x06	; 6
 eaa:	61 e0       	ldi	r22, 0x01	; 1
 eac:	0e 94 ff 04 	call	0x9fe	; 0x9fe <MEXTI_voidInit>


MEXTI_voidSetCallback(func1,MEXTI_INT0);   //2-- ISR FUNCTION CALL
 eb0:	83 e6       	ldi	r24, 0x63	; 99
 eb2:	97 e0       	ldi	r25, 0x07	; 7
 eb4:	66 e0       	ldi	r22, 0x06	; 6
 eb6:	0e 94 47 06 	call	0xc8e	; 0xc8e <MEXTI_voidSetCallback>


MEXTI_voidEnableInterrupt(MEXTI_INT0);    //3---ENABLE INTERRUPT
 eba:	86 e0       	ldi	r24, 0x06	; 6
 ebc:	0e 94 00 06 	call	0xc00	; 0xc00 <MEXTI_voidEnableInterrupt>


MGIE_voidEnableGI();                     //4--GLOBAL ENABLE
 ec0:	0e 94 1b 07 	call	0xe36	; 0xe36 <MGIE_voidEnableGI>
 ec4:	ff cf       	rjmp	.-2      	; 0xec4 <main+0x56>

00000ec6 <func1>:
	}
	return 0;
}

void func1(void)
{
 ec6:	df 93       	push	r29
 ec8:	cf 93       	push	r28
 eca:	00 d0       	rcall	.+0      	; 0xecc <func1+0x6>
 ecc:	cd b7       	in	r28, 0x3d	; 61
 ece:	de b7       	in	r29, 0x3e	; 62
	static int i=0;

	switch(i)
 ed0:	80 91 66 00 	lds	r24, 0x0066
 ed4:	90 91 67 00 	lds	r25, 0x0067
 ed8:	9a 83       	std	Y+2, r25	; 0x02
 eda:	89 83       	std	Y+1, r24	; 0x01
 edc:	89 81       	ldd	r24, Y+1	; 0x01
 ede:	9a 81       	ldd	r25, Y+2	; 0x02
 ee0:	82 30       	cpi	r24, 0x02	; 2
 ee2:	91 05       	cpc	r25, r1
 ee4:	e1 f0       	breq	.+56     	; 0xf1e <func1+0x58>
 ee6:	89 81       	ldd	r24, Y+1	; 0x01
 ee8:	9a 81       	ldd	r25, Y+2	; 0x02
 eea:	83 30       	cpi	r24, 0x03	; 3
 eec:	91 05       	cpc	r25, r1
 eee:	34 f4       	brge	.+12     	; 0xefc <func1+0x36>
 ef0:	89 81       	ldd	r24, Y+1	; 0x01
 ef2:	9a 81       	ldd	r25, Y+2	; 0x02
 ef4:	81 30       	cpi	r24, 0x01	; 1
 ef6:	91 05       	cpc	r25, r1
 ef8:	61 f0       	breq	.+24     	; 0xf12 <func1+0x4c>
 efa:	22 c0       	rjmp	.+68     	; 0xf40 <func1+0x7a>
 efc:	89 81       	ldd	r24, Y+1	; 0x01
 efe:	9a 81       	ldd	r25, Y+2	; 0x02
 f00:	83 30       	cpi	r24, 0x03	; 3
 f02:	91 05       	cpc	r25, r1
 f04:	91 f0       	breq	.+36     	; 0xf2a <func1+0x64>
 f06:	89 81       	ldd	r24, Y+1	; 0x01
 f08:	9a 81       	ldd	r25, Y+2	; 0x02
 f0a:	84 30       	cpi	r24, 0x04	; 4
 f0c:	91 05       	cpc	r25, r1
 f0e:	99 f0       	breq	.+38     	; 0xf36 <func1+0x70>
 f10:	17 c0       	rjmp	.+46     	; 0xf40 <func1+0x7a>
	{

	case 1 : MDIO_voidSetPinValue(MDIO_PORTB,0,MDIO_TOGGLE);
 f12:	81 e2       	ldi	r24, 0x21	; 33
 f14:	60 e0       	ldi	r22, 0x00	; 0
 f16:	42 e0       	ldi	r20, 0x02	; 2
 f18:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <MDIO_voidSetPinValue>
 f1c:	11 c0       	rjmp	.+34     	; 0xf40 <func1+0x7a>
	break;
	case 2 : MDIO_voidSetPinValue(MDIO_PORTB,1,MDIO_TOGGLE);
 f1e:	81 e2       	ldi	r24, 0x21	; 33
 f20:	61 e0       	ldi	r22, 0x01	; 1
 f22:	42 e0       	ldi	r20, 0x02	; 2
 f24:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <MDIO_voidSetPinValue>
 f28:	0b c0       	rjmp	.+22     	; 0xf40 <func1+0x7a>
	break;
	case 3 : MDIO_voidSetPinValue(MDIO_PORTB,2,MDIO_TOGGLE);
 f2a:	81 e2       	ldi	r24, 0x21	; 33
 f2c:	62 e0       	ldi	r22, 0x02	; 2
 f2e:	42 e0       	ldi	r20, 0x02	; 2
 f30:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <MDIO_voidSetPinValue>
 f34:	05 c0       	rjmp	.+10     	; 0xf40 <func1+0x7a>
	break;
	case 4 : MDIO_voidSetPinValue(MDIO_PORTB,3,MDIO_TOGGLE);
 f36:	81 e2       	ldi	r24, 0x21	; 33
 f38:	63 e0       	ldi	r22, 0x03	; 3
 f3a:	42 e0       	ldi	r20, 0x02	; 2
 f3c:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <MDIO_voidSetPinValue>
	break;
	default :
	break;
	}
	if(0==MDIO_voidGetPinValue(MDIO_PORTD,2))
 f40:	85 e0       	ldi	r24, 0x05	; 5
 f42:	62 e0       	ldi	r22, 0x02	; 2
 f44:	0e 94 81 04 	call	0x902	; 0x902 <MDIO_voidGetPinValue>
 f48:	88 23       	and	r24, r24
 f4a:	49 f4       	brne	.+18     	; 0xf5e <func1+0x98>
	{
		i++;
 f4c:	80 91 66 00 	lds	r24, 0x0066
 f50:	90 91 67 00 	lds	r25, 0x0067
 f54:	01 96       	adiw	r24, 0x01	; 1
 f56:	90 93 67 00 	sts	0x0067, r25
 f5a:	80 93 66 00 	sts	0x0066, r24
	}
	if(i>4)
 f5e:	80 91 66 00 	lds	r24, 0x0066
 f62:	90 91 67 00 	lds	r25, 0x0067
 f66:	85 30       	cpi	r24, 0x05	; 5
 f68:	91 05       	cpc	r25, r1
 f6a:	24 f0       	brlt	.+8      	; 0xf74 <func1+0xae>
	{i=0;}
 f6c:	10 92 67 00 	sts	0x0067, r1
 f70:	10 92 66 00 	sts	0x0066, r1

}
 f74:	0f 90       	pop	r0
 f76:	0f 90       	pop	r0
 f78:	cf 91       	pop	r28
 f7a:	df 91       	pop	r29
 f7c:	08 95       	ret

00000f7e <_exit>:
 f7e:	f8 94       	cli

00000f80 <__stop_program>:
 f80:	ff cf       	rjmp	.-2      	; 0xf80 <__stop_program>
